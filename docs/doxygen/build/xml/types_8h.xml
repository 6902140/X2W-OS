<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes refid="constrains_8h" local="yes">constrains.h</includes>
    <includedby refid="stdarg_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdarg.h</includedby>
    <includedby refid="stdfmt_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdfmt.h</includedby>
    <includedby refid="string_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/string.h</includedby>
    <includedby refid="stdlib_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdlib.h</includedby>
    <includedby refid="io_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/io.h</includedby>
    <includedby refid="kinit_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/kernel/kinit.h</includedby>
    <includedby refid="ktrap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/kernel/ktrap.h</includedby>
    <includedby refid="pg__types_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/pg_types.h</includedby>
    <includedby refid="stdbitmap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdbitmap.h</includedby>
    <includedby refid="sbi_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h</includedby>
    <includedby refid="sinit_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/sinit.h</includedby>
    <includedby refid="smain_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/smain.h</includedby>
    <includedby refid="strap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/strap.h</includedby>
    <includedby refid="stdlist_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdlist.h</includedby>
    <includedby refid="test_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test.h</includedby>
    <includedby refid="test__kstdio_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test_kstdio.h</includedby>
    <includedby refid="test__memory_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test_memory.h</includedby>
    <includedby refid="test__stdlib_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test_stdlib.h</includedby>
    <includedby refid="test__strap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test_strap.h</includedby>
    <includedby refid="trapframe_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/trap/trapframe.h</includedby>
    <includedby refid="uart_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/uart.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>constrains.h</label>
        <link refid="constrains_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="33">
        <label>/home/data/proj/oskernel2023-x2w/include/trap/trapframe.h</label>
        <link refid="trapframe_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/data/proj/oskernel2023-x2w/include/user/ustdio.h</label>
        <link refid="ustdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/data/proj/oskernel2023-x2w/include/stdarg.h</label>
        <link refid="stdarg_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</label>
        <link refid="secall_8h"/>
      </node>
      <node id="29">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test.h</label>
        <link refid="test_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sstdio.h</label>
        <link refid="sstdio_8h"/>
      </node>
      <node id="4">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kdebug.h</label>
        <link refid="kdebug_8h"/>
      </node>
      <node id="26">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sinit.h</label>
        <link refid="sinit_8h"/>
      </node>
      <node id="3">
        <label>/home/data/proj/oskernel2023-x2w/include/assert.h</label>
        <link refid="assert_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/data/proj/oskernel2023-x2w/include/stdlist.h</label>
        <link refid="stdlist_8h"/>
      </node>
      <node id="31">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_kstdio.h</label>
        <link refid="test__kstdio_8h"/>
      </node>
      <node id="16">
        <label>/home/data/proj/oskernel2023-x2w/include/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/data/proj/oskernel2023-x2w/include/pg_types.h</label>
        <link refid="pg__types_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kstdio.h</label>
        <link refid="kstdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/strap.h</label>
        <link refid="strap_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/smain.h</label>
        <link refid="smain_8h"/>
      </node>
      <node id="22">
        <label>/home/data/proj/oskernel2023-x2w/include/pgable.h</label>
        <link refid="pgable_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/data/proj/oskernel2023-x2w/include/stdbitmap.h</label>
        <link refid="stdbitmap_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/data/proj/oskernel2023-x2w/include/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/data/proj/oskernel2023-x2w/include/uart.h</label>
        <link refid="uart_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_stdlib.h</label>
        <link refid="test__stdlib_8h"/>
      </node>
      <node id="13">
        <label>/home/data/proj/oskernel2023-x2w/include/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_memory.h</label>
        <link refid="test__memory_8h"/>
      </node>
      <node id="32">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_strap.h</label>
        <link refid="test__strap_8h"/>
      </node>
      <node id="6">
        <label>/home/data/proj/oskernel2023-x2w/include/stdfmt.h</label>
        <link refid="stdfmt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/data/proj/oskernel2023-x2w/include/user/udebug.h</label>
        <link refid="udebug_8h"/>
      </node>
      <node id="20">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/ktrap.h</label>
        <link refid="ktrap_8h"/>
      </node>
      <node id="12">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_string.h</label>
        <link refid="test__string_8h"/>
      </node>
      <node id="10">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_stdfmt.h</label>
        <link refid="test__stdfmt_8h"/>
      </node>
      <node id="11">
        <label>/home/data/proj/oskernel2023-x2w/include/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kinit.h</label>
        <link refid="kinit_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="types_8h_1a23195218eef2cf21e2beae685a041783" prot="public" static="no">
        <name>DELIMITER</name>
        <initializer>&quot;============================================================\n&quot;</initializer>
        <briefdescription>
<para>分隔符 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="17" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>((void *)0)</initializer>
        <briefdescription>
<para><computeroutput>NULL</computeroutput> 被定义为指向内存<computeroutput>0x0000000000000000</computeroutput>处的<computeroutput>void</computeroutput>指针, 由于在<computeroutput>QEMU</computeroutput>的<computeroutput>Memory Map</computeroutput>中该地址不在内存中, 因此访问该地址最终将会导致报错 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="20" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1a70c57aae3eb654e205459b4362c8089a" prot="public" static="no">
        <name>ARRAY_SIZE</name>
        <param><defname>array</defname></param>
        <initializer>((<ref refid="types_8h_1a186ea1339bffb378854987065835afe3" kindref="member">size_t</ref>)(sizeof(array) / sizeof((array)[0])))</initializer>
        <briefdescription>
<para><computeroutput>ARRAY_SIZE</computeroutput>宏函数用于计算数组<computeroutput>array</computeroutput>中的元素个数, 返回值类型为<computeroutput>size_t</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="60" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1addf5ec070e9499d36b7f2009ce736076" prot="public" static="no">
        <name>UNUSED</name>
        <initializer>__attribute__((unused))</initializer>
        <briefdescription>
<para><computeroutput>UNUSED</computeroutput>宏用于通知<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>寄存器被修饰的变量可能没有被使用, 从而在编译的时候静默警告 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>UNUSED</computeroutput>宏本质上是借助了<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>的<computeroutput>__attribute__</computeroutput>关键词实现的, 使用的标记(annotation)是: <computeroutput>unused</computeroutput></para>
</simplesect>
<simplesect kind="note"><para>参考: <ulink url="https://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Variable-Attributes.html">https://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Variable-Attributes.html</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="70" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1a9bc43e3ee0ae83643b65e07fe1fd0132" prot="public" static="no">
        <name>NO_RETURN</name>
        <initializer>__attribute__((noreturn))</initializer>
        <briefdescription>
<para><computeroutput>NO_RETURN</computeroutput>宏用于通知<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>编译器被修饰的函数不会返回, 帮助编译器静态分析用 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>NO_RETURN</computeroutput>宏本质上是借助了<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>的<computeroutput>__attribute__</computeroutput>关键词实现的, 使用的标记(annotation)是: <computeroutput>noreturn</computeroutput></para>
</simplesect>
<simplesect kind="note"><para>参考: <ulink url="https://stackoverflow.com/questions/25408795/tell-gcc-that-a-function-call-will-not-return">https://stackoverflow.com/questions/25408795/tell-gcc-that-a-function-call-will-not-return</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="79" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1ac1e8a42306d8e67cb94ca31c3956ee78" prot="public" static="no">
        <name>DEPRECATED</name>
        <initializer>__attribute__((deprecated))</initializer>
        <briefdescription>
<para><computeroutput>DEPRECATED</computeroutput>宏用于通知<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>编译器被修饰的对象已经弃用, 帮助编译器静态分析用 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>NO_RETURN</computeroutput>宏本质上是借助了<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>的<computeroutput>__attribute__</computeroutput>关键词实现的, 使用的标记(annotation)是: <computeroutput>deprecated</computeroutput></para>
</simplesect>
<simplesect kind="note"><para>参考: <ulink url="https://renenyffenegger.ch/notes/development/languages/C-C-plus-plus/GCC/__attribute__/deprecated/index">https://renenyffenegger.ch/notes/development/languages/C-C-plus-plus/GCC/__attribute__/deprecated/index</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="88" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="types_8h_1a3af99897b60119951af8961dbd52dd3f" prot="public" static="no">
        <name>UNREACHABLE</name>
        <initializer>__builtin_unreachable()</initializer>
        <briefdescription>
<para><computeroutput>UNREACHABLE</computeroutput>宏用于通知<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>编译器不会运行到此处, 帮助编译器静态分析用 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>NO_RETURN</computeroutput>宏本质上是借助了<computeroutput>GCC</computeroutput>/<computeroutput>Clang</computeroutput>内建的<computeroutput>__builtin_unreachable()</computeroutput>函数实现的</para>
</simplesect>
<simplesect kind="note"><para>参考: <ulink url="https://stackoverflow.com/questions/25408795/tell-gcc-that-a-function-call-will-not-return">https://stackoverflow.com/questions/25408795/tell-gcc-that-a-function-call-will-not-return</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="97" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="types_8h_1a2f80701c36e79c0640d91c788feee0b3" prot="public" static="no" strong="no">
        <type></type>
        <name>@62</name>
        <enumvalue id="types_8h_1a2f80701c36e79c0640d91c788feee0b3af9d46b7804d93a4fcde88489a1b68c24" prot="public">
          <name>False</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>等价于<computeroutput>unsigned int false = 0</computeroutput> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="types_8h_1a2f80701c36e79c0640d91c788feee0b3a6d32c34708a0a3507c4bdb89219d650b" prot="public">
          <name>True</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>等价于<computeroutput>unsigned int true = 1</computeroutput> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="36" column="6" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="36" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uint8_t</definition>
        <argsstring></argsstring>
        <name>uint8_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>char</computeroutput> 宽度为 <computeroutput>8 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="23" column="29" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a273cf69d639a59973b6019625df33e30" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short uint16_t</definition>
        <argsstring></argsstring>
        <name>uint16_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>short</computeroutput>宽度为 <computeroutput>16 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="24" column="29" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a435d1572bf3f880d55459d9805097f62" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint32_t</definition>
        <argsstring></argsstring>
        <name>uint32_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>int</computeroutput> 宽度为 <computeroutput>32 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="25" column="29" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long uint64_t</definition>
        <argsstring></argsstring>
        <name>uint64_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>long</computeroutput> 宽度为 <computeroutput>64 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="26" column="29" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ad566f6541e98b74246db1a3a3a85ad49" prot="public" static="no">
        <type>char</type>
        <definition>typedef char int8_t</definition>
        <argsstring></argsstring>
        <name>int8_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>char</computeroutput> 宽度为 <computeroutput>8 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="29" column="20" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1aa343fa3b3d06292b959ffdd4c4703b06" prot="public" static="no">
        <type>short</type>
        <definition>typedef short int16_t</definition>
        <argsstring></argsstring>
        <name>int16_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>short</computeroutput>宽度为 <computeroutput>16 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="30" column="20" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a32f2e37ee053cf2ce8ca28d1f74630e5" prot="public" static="no">
        <type>int</type>
        <definition>typedef int int32_t</definition>
        <argsstring></argsstring>
        <name>int32_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>int</computeroutput> 宽度为 <computeroutput>32 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="31" column="20" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" prot="public" static="no">
        <type>long</type>
        <definition>typedef long int64_t</definition>
        <argsstring></argsstring>
        <name>int64_t</name>
        <briefdescription>
<para><computeroutput>LP64</computeroutput>中一个 <computeroutput>long</computeroutput> 宽度为 <computeroutput>64 bit</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="32" column="20" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a253b248072cfc8bd812c69acd0046eed" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char Bool</definition>
        <argsstring></argsstring>
        <name>Bool</name>
        <briefdescription>
<para>布尔常量定义 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="35" column="23" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a186ea1339bffb378854987065835afe3" prot="public" static="no">
        <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <briefdescription>
<para>计数类型定义 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="42" column="18" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ab8ef12fab634c171394422d0ee8baf94" prot="public" static="no">
        <type><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref></type>
        <definition>typedef uint8_t byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <briefdescription>
<para>字节类型定义 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="45" column="17" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ad8c04c91bab78dc7c80f298f11ff2cd7" prot="public" static="no">
        <type><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref></type>
        <definition>typedef int64_t offset_t</definition>
        <argsstring></argsstring>
        <name>offset_t</name>
        <briefdescription>
<para>偏移类型定义 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="48" column="17" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a23649fe323c2bb0dd67e8ddacb04a9df" prot="public" static="no">
        <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t addr_t</definition>
        <argsstring></argsstring>
        <name>addr_t</name>
        <briefdescription>
<para>地址类型 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="51" column="18" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a48f2f43c22b22212994d19244ccb10fc" prot="public" static="no">
        <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t ireg_t</definition>
        <argsstring></argsstring>
        <name>ireg_t</name>
        <briefdescription>
<para>整型寄存器类型 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="54" column="18" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ac2876a5049438ad8f5b5799f69013faf" prot="public" static="no">
        <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t freg_t</definition>
        <argsstring></argsstring>
        <name>freg_t</name>
        <briefdescription>
<para>浮点寄存器类型 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/types.h" line="57" column="18" bodyfile="/home/data/proj/oskernel2023-x2w/include/types.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="types_8h" kindref="compound">types.h</ref></computeroutput>中定义了<computeroutput>X2W-OS</computeroutput>的内建类型 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gmail.com">jack4shihong@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-08</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constrains_8h" kindref="compound">constrains.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="types_8h_1a23195218eef2cf21e2beae685a041783" refkind="member"><highlight class="preprocessor">#define<sp/>DELIMITER<sp/>&quot;============================================================\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" refkind="member"><highlight class="preprocessor">#define<sp/>NULL<sp/>((void<sp/>*)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>无符号常量定义,<sp/>由`gcc<sp/>-mabi`参数设定,<sp/>参考`Makefile`中的`GCC`编译选项`CFALSG`,<sp/>https://www.ibm.com/docs/en/zos/2.3.0?topic=environments-ilp32-lp64-data-models-data-type-sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="types_8h_1a273cf69d639a59973b6019625df33e30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="types_8h_1a435d1572bf3f880d55459d9805097f62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>符号常量定义,<sp/>由`gcc<sp/>-mabi`参数设定,<sp/>参考`Makefile`中的`GCC`编译选项`CFLAGS`,<sp/>https://www.ibm.com/docs/en/zos/2.3.0?topic=environments-ilp32-lp64-data-models-data-type-sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="types_8h_1ad566f6541e98b74246db1a3a3a85ad49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ad566f6541e98b74246db1a3a3a85ad49" kindref="member">int8_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="types_8h_1aa343fa3b3d06292b959ffdd4c4703b06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1aa343fa3b3d06292b959ffdd4c4703b06" kindref="member">int16_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="types_8h_1a32f2e37ee053cf2ce8ca28d1f74630e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a32f2e37ee053cf2ce8ca28d1f74630e5" kindref="member">int32_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="types_8h_1a253b248072cfc8bd812c69acd0046eed" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a253b248072cfc8bd812c69acd0046eed" kindref="member">Bool</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37" refid="types_8h_1a2f80701c36e79c0640d91c788feee0b3af9d46b7804d93a4fcde88489a1b68c24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a2f80701c36e79c0640d91c788feee0b3af9d46b7804d93a4fcde88489a1b68c24" kindref="member">False</ref><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="types_8h_1a2f80701c36e79c0640d91c788feee0b3a6d32c34708a0a3507c4bdb89219d650b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a2f80701c36e79c0640d91c788feee0b3a6d32c34708a0a3507c4bdb89219d650b" kindref="member">True</ref><sp/><sp/><sp/><sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="types_8h_1a186ea1339bffb378854987065835afe3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/><ref refid="types_8h_1a186ea1339bffb378854987065835afe3" kindref="member">size_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="types_8h_1ab8ef12fab634c171394422d0ee8baf94" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="types_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="types_8h_1ad8c04c91bab78dc7c80f298f11ff2cd7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref><sp/><ref refid="types_8h_1ad8c04c91bab78dc7c80f298f11ff2cd7" kindref="member">offset_t</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="types_8h_1a23649fe323c2bb0dd67e8ddacb04a9df" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/><ref refid="types_8h_1a23649fe323c2bb0dd67e8ddacb04a9df" kindref="member">addr_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/><ref refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" kindref="member">ireg_t</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="types_8h_1ac2876a5049438ad8f5b5799f69013faf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/><ref refid="types_8h_1ac2876a5049438ad8f5b5799f69013faf" kindref="member">freg_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="types_8h_1a70c57aae3eb654e205459b4362c8089a" refkind="member"><highlight class="preprocessor">#define<sp/>ARRAY_SIZE(array)<sp/><sp/>((size_t)(sizeof(array)<sp/>/<sp/>sizeof((array)[0])))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="types_8h_1addf5ec070e9499d36b7f2009ce736076" refkind="member"><highlight class="preprocessor">#define<sp/>UNUSED<sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="types_8h_1a9bc43e3ee0ae83643b65e07fe1fd0132" refkind="member"><highlight class="preprocessor">#define<sp/>NO_RETURN<sp/>__attribute__((noreturn))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="types_8h_1ac1e8a42306d8e67cb94ca31c3956ee78" refkind="member"><highlight class="preprocessor">#define<sp/>DEPRECATED<sp/>__attribute__((deprecated))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="types_8h_1a3af99897b60119951af8961dbd52dd3f" refkind="member"><highlight class="preprocessor">#define<sp/>UNREACHABLE<sp/>__builtin_unreachable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/types.h"/>
  </compounddef>
</doxygen>
