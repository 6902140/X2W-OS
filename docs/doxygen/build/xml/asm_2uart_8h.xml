<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="asm_2uart_8h" kind="file" language="C++">
    <compoundname>uart.h</compoundname>
    <includedby refid="uart_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/uart.h</includedby>
    <invincdepgraph>
      <node id="8">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</label>
        <link refid="secall_8h"/>
      </node>
      <node id="9">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sstdio.h</label>
        <link refid="sstdio_8h"/>
      </node>
      <node id="5">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kdebug.h</label>
        <link refid="kdebug_8h"/>
      </node>
      <node id="4">
        <label>/home/data/proj/oskernel2023-x2w/include/assert.h</label>
        <link refid="assert_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kstdio.h</label>
        <link refid="kstdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/data/proj/oskernel2023-x2w/include/uart.h</label>
        <link refid="uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/data/proj/oskernel2023-x2w/include/user/udebug.h</label>
        <link refid="udebug_8h"/>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/asm/uart.h</label>
        <link refid="asm_2uart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kinit.h</label>
        <link refid="kinit_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="asm_2uart_8h_1af7cb12b462b4594bd759d1b4e241ec4c" prot="public" static="no">
        <name>UART</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="19" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1ac0b0689b015ac9657c7fdf082797e88e" prot="public" static="no">
        <name>UART_SIZE</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="20" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a87b7a54cec0c7dfafa97d47e7cfd988e" prot="public" static="no">
        <name>UART16550_CLOCK</name>
        <initializer>1843200</initializer>
        <briefdescription>
<para><computeroutput>AXI UART 16550</computeroutput>芯片的时钟频率, 设置波特率时将根据时钟频率计算除数 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="24" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a50b083e5f3c00432ebaee95a865aa746" prot="public" static="no">
        <name>UART_MMAP_BASE</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>设备在内存中映射的起始单元 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="35" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" prot="public" static="no">
        <name>_UART_REG</name>
        <param><defname>offset</defname></param>
        <initializer>(<ref refid="asm_2uart_8h_1a50b083e5f3c00432ebaee95a865aa746" kindref="member">UART_MMAP_BASE</ref> + <ref refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" kindref="member">offset</ref>)</initializer>
        <briefdescription>
<para>根据UART寄存器的偏移量计算在内存中的地址 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="38" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a23b9e788f979a7b74a192cfc4a3a2d96" prot="public" static="no">
        <name>UART_DAT</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x00)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的数据寄存器(<computeroutput>Data Register</computeroutput>), 在发送模式和接受模式下有不同的作用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="41" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a7a676f075475e46d27eb878977b867ec" prot="public" static="no">
        <name>UART_THR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x00)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的发送数据寄存器(<computeroutput>Transmit Holding Register</computeroutput>), <computeroutput>UART</computeroutput>设备处于发送模式时候存储要发送的数据 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="43" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a6b1d9e511e1020db09f787660371e927" prot="public" static="no">
        <name>UART_RHR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x00)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的接受数据寄存器(<computeroutput>Receiving Holding Register</computeroutput>), <computeroutput>UART</computeroutput>设备处于接收模式时候存储要接受的数据 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="45" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1aaf7aaa372e86b3aa99e6c78242be2722" prot="public" static="no">
        <name>UART_IER</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x01)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的中断使能寄存器(<computeroutput>Interrupt Enable Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>16550</computeroutput>支持四种中断, 优先级从高到低依次为:<itemizedlist>
<listitem><para>接受出错中断</para>
</listitem><listitem><para>接受缓冲区满中断</para>
</listitem><listitem><para>发送缓冲区空中断</para>
</listitem><listitem><para>Modem状态变化中断 四种中断源的使能状态由<computeroutput>IER</computeroutput>寄存器中的控制 </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="56" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a5e72509f2fe0cabe3a05502b2c6a867a" prot="public" static="no">
        <name>UART_ISR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x02)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的中断状态寄存器(<computeroutput>Interrupt Status Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>16550</computeroutput>的四种中断源共用一条中断请求线<computeroutput>INTR</computeroutput>向<computeroutput>CPU</computeroutput>申请中断, 因此在<computeroutput>CPU</computeroutput>响应中断之后, 需要判断是那一个中断. 因此<computeroutput>16550</computeroutput>使用<computeroutput>ISR</computeroutput>寄存器表明有无中断和当前最高级别的中断 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="63" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a220a678f91ca8244b30fe813200c26c1" prot="public" static="no">
        <name>UART_FCR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x02)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的FIFO控制寄存器(<computeroutput>FIFO Control Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><computeroutput>UART</computeroutput>设备每次通信发送/接受1bit数据, 因此<computeroutput>16550</computeroutput>内部设置了缓冲区, 将发送/接受的数据保存在缓冲区中, 缓冲区空/满之后再向CPU发送中断. <computeroutput>16550</computeroutput>的缓冲区最大为16字节, 可以通过设置<computeroutput>FCR</computeroutput>设置使用的缓冲区的大小 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="70" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a36c30861e332468c7f1998648e706740" prot="public" static="no">
        <name>UART_LCR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x03)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的线路控制寄存器(<computeroutput>Line Control Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="72" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a8ef39bc0942ddd0411d87001d12224f4" prot="public" static="no">
        <name>UART_MCR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x04)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的<computeroutput>Moden</computeroutput>控制寄存器(<computeroutput>Modem Control Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="74" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a0f8ac527073d763bac90daba987361c6" prot="public" static="no">
        <name>UART_LSR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x05)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的线路状态寄存器(<computeroutput>Line Status Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="76" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a71067c48bdde7dc6c5d0a1c56746e776" prot="public" static="no">
        <name>UART_MSR</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x06)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的<computeroutput>Moden</computeroutput>状态寄存器(<computeroutput>Modem Status Register</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="78" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a325451056249a66d1c7ceca8e52463e3" prot="public" static="no">
        <name>UART_DL_LSB</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x00)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的除数寄存器低八位(<computeroutput>Least Significant Bits</computeroutput>, <computeroutput>LSB of Divisor Latch</computeroutput>), 用于进行预分频, 即设置波特率 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="81" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1afa5670be346cb486d76bb75e732500fb" prot="public" static="no">
        <name>UART_DL_MSB</name>
        <initializer><ref refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" kindref="member">_UART_REG</ref>(0x01)</initializer>
        <briefdescription>
<para><computeroutput>UART</computeroutput>的除数寄存器高八位(<computeroutput>Most Significant Bits</computeroutput>, <computeroutput>MSB of Divisor Latch</computeroutput>), 用于进行预分频, 即设置波特率 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="83" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a087021cb4f563b545c2e827b1a95e97d" prot="public" static="no">
        <name>UART_LSR_ERR</name>
        <initializer>0b10000000</initializer>
        <briefdescription>
<para>传输出错, FIFO Error </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="92" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1afb0b74c1b345da06af598e6d00c291a3" prot="public" static="no">
        <name>UART_LSR_TSE</name>
        <initializer>0b01000000</initializer>
        <briefdescription>
<para>传输缓冲区(FIFO)和移位寄存器为空, Transmit Empty </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="94" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a367cdd2af61ca57bc1f7c78cca48704f" prot="public" static="no">
        <name>UART_LSR_THE</name>
        <initializer>0b00100000</initializer>
        <briefdescription>
<para>传输缓冲区(FIFO)为空, Transmit Holding Empty </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="96" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a0b0f5510bc38ddd69eab01ed6f90a5ea" prot="public" static="no">
        <name>UART_LSR_BKI</name>
        <initializer>0b00010000</initializer>
        <briefdescription>
<para>传输被打断, Break Interrupt </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="98" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a394124b89c650442a1ec18d228349e82" prot="public" static="no">
        <name>UART_LSR_FME</name>
        <initializer>0b00001000</initializer>
        <briefdescription>
<para>接受帧出错, 没有接收到停止位的帧, Framing Error </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="100" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1ac13b37788c32483db8ac20d4809c5100" prot="public" static="no">
        <name>UART_LSR_PRE</name>
        <initializer>0b00000100</initializer>
        <briefdescription>
<para>奇偶校验出错, Parity Error </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="102" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a45510686ea3a27a0e1908a0ae414f80e" prot="public" static="no">
        <name>UART_LSR_ORE</name>
        <initializer>0b00000010</initializer>
        <briefdescription>
<para>数据溢出, Overrun Error </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="104" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asm_2uart_8h_1a3d83de31d722cd373ee69a2a38aaed43" prot="public" static="no">
        <name>UART_LSR_RDR</name>
        <initializer>0b00000001</initializer>
        <briefdescription>
<para>FIFO有数据, Receive Data Ready </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" line="106" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/asm/uart.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="asm_2uart_8h" kindref="compound">asm/uart.h</ref></computeroutput>文件中定义了<computeroutput>AXI UART 16550</computeroutput>相关的常量 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gamil.com">jack4shihong@gamil.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-09</para>
</simplesect>
<simplesect kind="note"><para>关于<computeroutput>AXI UART 16550</computeroutput>芯片介绍: <ulink url="https://wenku.baidu.com/view/6f7a176048d7c1c708a14521.html?_wkts_=1681021571718">https://wenku.baidu.com/view/6f7a176048d7c1c708a14521.html?_wkts_=1681021571718</ulink> </para>
</simplesect>
<simplesect kind="note"><para>关于<computeroutput>AXI UART 16550</computeroutput>相关常量, 参考<computeroutput>AXI UART 16550</computeroutput>编程手册(<computeroutput>Programming Table</computeroutput>): <ulink url="http://byterunner.com/16550.html">http://byterunner.com/16550.html</ulink></para>
</simplesect>
<simplesect kind="warning"><para><computeroutput><ref refid="asm_2uart_8h" kindref="compound">asm/uart.h</ref></computeroutput>仅提供<computeroutput>AXI UART 16550</computeroutput>相关常量的定义, <computeroutput>UART</computeroutput>相关功能定义在<computeroutput>uart.h</computeroutput>中</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="16"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_ASM_UART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_ASM_UART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_SIZE<sp/><sp/><sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="asm_2uart_8h_1a87b7a54cec0c7dfafa97d47e7cfd988e" refkind="member"><highlight class="preprocessor">#define<sp/>UART16550_CLOCK<sp/>1843200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>UART<sp/>寄存器<sp/>------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>1.<sp/>RISC-V中采用MMIO方式访问设备寄存器</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>2.<sp/>UART<sp/>16550<sp/>芯片部分寄存器在读写时候的作用不一样,<sp/>例如:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>读取BASE<sp/>+<sp/>0x00寄存器时候表示读取对方发送来的数据</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>写入BASE<sp/>+<sp/>0x00寄存器时候表示向对方发送数据</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="asm_2uart_8h_1a50b083e5f3c00432ebaee95a865aa746" refkind="member"><highlight class="preprocessor">#define<sp/>UART_MMAP_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="asm_2uart_8h_1a7f93d38a32cec4b5d5bf20def021911e" refkind="member"><highlight class="preprocessor">#define<sp/>_UART_REG(offset)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UART_MMAP_BASE<sp/>+<sp/>offset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="asm_2uart_8h_1a23b9e788f979a7b74a192cfc4a3a2d96" refkind="member"><highlight class="preprocessor">#define<sp/>UART_DAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_THR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_RHR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="asm_2uart_8h_1aaf7aaa372e86b3aa99e6c78242be2722" refkind="member"><highlight class="preprocessor">#define<sp/>UART_IER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="asm_2uart_8h_1a5e72509f2fe0cabe3a05502b2c6a867a" refkind="member"><highlight class="preprocessor">#define<sp/>UART_ISR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="asm_2uart_8h_1a220a678f91ca8244b30fe813200c26c1" refkind="member"><highlight class="preprocessor">#define<sp/>UART_FCR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LCR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_MCR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="asm_2uart_8h_1a325451056249a66d1c7ceca8e52463e3" refkind="member"><highlight class="preprocessor">#define<sp/>UART_DL_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_DL_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UART_REG(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>UART<sp/>线路状态寄存器LCR位标志<sp/>------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>参考:<sp/>TECHNICAL<sp/>DATA<sp/>ON<sp/>16550,<sp/>http://byterunner.com/16550.html</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*/</highlight></codeline>
<codeline lineno="92" refid="asm_2uart_8h_1a087021cb4f563b545c2e827b1a95e97d" refkind="member"><highlight class="preprocessor">#define<sp/>UART_LSR_ERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_TSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b01000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_THE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00100000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_BKI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00010000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_FME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00001000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_PRE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00000100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_ORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00000010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_LSR_RDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b00000001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/asm/uart.h"/>
  </compounddef>
</doxygen>
