<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="trap__entry_8h" kind="file" language="C++">
    <compoundname>trap_entry.h</compoundname>
    <includedby refid="ktrap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/kernel/ktrap.h</includedby>
    <includedby refid="strap_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/strap.h</includedby>
    <invincdepgraph>
      <node id="4">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</label>
        <link refid="secall_8h"/>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h</label>
        <link refid="trap__entry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/strap.h</label>
        <link refid="strap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/ktrap.h</label>
        <link refid="ktrap_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="trap__entry_8h_1aece3034be57be3c86d01909866f62b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strap_enter</definition>
        <argsstring>(void)</argsstring>
        <name>strap_enter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>strap_enter</computeroutput>是<computeroutput>SBI</computeroutput>的陷入入口函数, 由汇编实现, 定义在 <computeroutput>strap_entry.S</computeroutput>中 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>该函数会:<orderedlist>
<listitem><para>在<computeroutput>M模式</computeroutput>的栈中构建被打断程序的陷入帧</para>
</listitem><listitem><para>将被打断的程序的陷入帧作为参数调用<computeroutput>strap_dispatcher</computeroutput>函数 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" line="24" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" declline="24" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="trap__entry_8h_1af38efa5dc6d7ab77ccfc96166619e8f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strap_exit</definition>
        <argsstring>(void)</argsstring>
        <name>strap_exit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>strap_exit</computeroutput>是<computeroutput>SBI</computeroutput>的陷入出口函数, 由汇编实现, 定义在 <computeroutput>strap_entry.S</computeroutput>中 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>该函数会:<orderedlist>
<listitem><para>将<computeroutput>M模式</computeroutput>的栈中构建的被打断程序的陷入帧恢复到寄存器中 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" line="33" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="trap__entry_8h_1a2d102eac46cfa79a363992fccfe3fdce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ktrap_enter</definition>
        <argsstring>(void)</argsstring>
        <name>ktrap_enter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>ktrap_enter</computeroutput>是内核的陷入入口函数, 由汇编实现, 定义在 <computeroutput>ktrap_entry.S</computeroutput>中 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>该函数会:<orderedlist>
<listitem><para>在<computeroutput>S模式</computeroutput>的栈中构建被打断程序的陷入帧</para>
</listitem><listitem><para>将被打断的程序的陷入帧作为参数调用<computeroutput>ktrap_dispatcher</computeroutput>函数 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" line="43" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" declline="43" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="trap__entry_8h_1a5b133d55c211ef1c40edccef44a43286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ktrap_exit</definition>
        <argsstring>(void)</argsstring>
        <name>ktrap_exit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>ktrap_exit</computeroutput>是内核的陷入出口函数, 由汇编实现, 定义在 <computeroutput>ktrap_entry.S</computeroutput>中 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>该函数会:<orderedlist>
<listitem><para>将<computeroutput>S模式</computeroutput>的栈中构建的被打断程序的陷入帧恢复到寄存器中 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" line="52" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h" declline="52" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="trap__entry_8h" kindref="compound">trap_entry.h</ref></computeroutput>中定义了各种模式下的陷入入口函数和陷入出口函数 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gmail.com">jack4shihong@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-20</para>
</simplesect>
<simplesect kind="note"><para>所有的陷入入口函数和陷入出口函数都定义在<computeroutput>trap_entry.S</computeroutput>中</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_TRAP_TRAP_ENTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_TRAP_TRAP_ENTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trap__entry_8h_1aece3034be57be3c86d01909866f62b7e" kindref="member">strap_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trap__entry_8h_1af38efa5dc6d7ab77ccfc96166619e8f8" kindref="member">strap_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trap__entry_8h_1a2d102eac46cfa79a363992fccfe3fdce" kindref="member">ktrap_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trap__entry_8h_1a5b133d55c211ef1c40edccef44a43286" kindref="member">ktrap_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/trap/trap_entry.h"/>
  </compounddef>
</doxygen>
