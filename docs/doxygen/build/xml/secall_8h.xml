<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="secall_8h" kind="file" language="C++">
    <compoundname>secall.h</compoundname>
    <includes local="yes">uart.h</includes>
    <includes refid="csr_8h" local="yes">asm/csr.h</includes>
    <includes refid="sbi_8h" local="yes">sbi/sbi.h</includes>
    <includes refid="strap_8h" local="yes">sbi/strap.h</includes>
    <incdepgraph>
      <node id="8">
        <label>trap/trapframe.h</label>
        <link refid="trapframe_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</label>
        <link refid="secall_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>asm/csr.h</label>
        <link refid="csr_8h"/>
      </node>
      <node id="9">
        <label>trap/trap_entry.h</label>
        <link refid="trap__entry_8h"/>
      </node>
      <node id="2">
        <label>uart.h</label>
      </node>
      <node id="5">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sbi/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>constrains.h</label>
        <link refid="constrains_8h"/>
      </node>
      <node id="7">
        <label>sbi/strap.h</label>
        <link refid="strap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="secall_8h_1aa71f5c95fca0e357eb1181cbc1cd6c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void secall_init</definition>
        <argsstring>(void)</argsstring>
        <name>secall_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>secall_init</computeroutput>用于初始化<computeroutput>SBI</computeroutput>调用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/secall.h" line="23" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/sbi/secall.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secall_8h_1ab7d1d17a4ee99ccd30735940d0569cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref></type>
        <definition>int64_t sup_ecall_handler</definition>
        <argsstring>(strapframe_t *stf_ptr)</argsstring>
        <name>sup_ecall_handler</name>
        <param>
          <type><ref refid="trapframe_8h_1ace23faaa1579bcc09327b838e4f18145" kindref="member">strapframe_t</ref> *</type>
          <declname>stf_ptr</declname>
        </param>
        <briefdescription>
<para><computeroutput>sup_ecall_handler</computeroutput>是<computeroutput>Supervisor</computeroutput>模式下<computeroutput>ecall</computeroutput>指令的处理函数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>陷入帧, 调用ecall的程序主动触发<computeroutput>Supervisor Environment Call</computeroutput>异常时在<computeroutput>strap_enter</computeroutput>(定义在<computeroutput>strap_entry.S</computeroutput>中)中构建 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int64_t 处理结果, 若为0则表示处理正常, -1表示处理失败 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/secall.h" line="31" column="9" declfile="/home/data/proj/oskernel2023-x2w/include/sbi/secall.h" declline="31" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="secall_8h" kindref="compound">secall.h</ref></computeroutput>提供了<computeroutput>sbi</computeroutput>调用的实现 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gamil.com">jack4shihong@gamil.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-17</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_SBI_SECALL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_SBI_SECALL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;uart.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="csr_8h" kindref="compound">asm/csr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbi_8h" kindref="compound">sbi/sbi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strap_8h" kindref="compound">sbi/strap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="secall_8h_1aa71f5c95fca0e357eb1181cbc1cd6c60" kindref="member">secall_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref><sp/><ref refid="secall_8h_1ab7d1d17a4ee99ccd30735940d0569cf8" kindref="member">sup_ecall_handler</ref>(<ref refid="struct____strapframe__t" kindref="compound">strapframe_t</ref><sp/>*stf_ptr);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/sbi/secall.h"/>
  </compounddef>
</doxygen>
