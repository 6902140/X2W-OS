<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sbi_8h" kind="file" language="C++">
    <compoundname>sbi.h</compoundname>
    <includes refid="types_8h" local="yes">types.h</includes>
    <includes refid="constrains_8h" local="yes">constrains.h</includes>
    <includedby refid="secall_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>constrains.h</label>
        <link refid="constrains_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/secall.h</label>
        <link refid="secall_8h"/>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" prot="public" static="no">
        <name>_SBICALL</name>
        <param><defname>scall_id</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    ({             \
    register <ref refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" kindref="member">ireg_t</ref> a0 asm (&quot;a0&quot;) = (ireg_t)(arg0);         \
    register <ref refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" kindref="member">ireg_t</ref> a1 asm (&quot;a1&quot;) = (ireg_t)(arg1);         \
    register <ref refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" kindref="member">ireg_t</ref> a2 asm (&quot;a2&quot;) = (ireg_t)(arg2);         \
    register <ref refid="types_8h_1a48f2f43c22b22212994d19244ccb10fc" kindref="member">ireg_t</ref> a7 asm (&quot;a7&quot;) = (ireg_t)(scall_id);     \
    asm volatile (                                          \
        &quot;ecall&quot;                                             \
        : &quot;+r&quot;  (a0)                                        \
        : &quot;r&quot;   (a1),   &quot;r&quot;   (a2),   &quot;r&quot;   (a7)            \
        : &quot;memory&quot;                                          \
    );                                                      \
    a0;                                                     \
})</initializer>
        <briefdescription>
<para><computeroutput>_SBICALL</computeroutput>宏函数将会触发<computeroutput>ecall</computeroutput>异常, 而后跳转到<computeroutput>strap_enter</computeroutput>函数中运行, 该函数定义在<computeroutput>strap_entry.S</computeroutput>中 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>该宏函数需要注意的是:<orderedlist>
<listitem><para>目前最大支持三个参数, 分别使用a0, a1, a2寄存器传递</para>
</listitem><listitem><para><computeroutput>ecall</computeroutput>调用号保存在<computeroutput>a7</computeroutput>寄存器中</para>
</listitem><listitem><para>返回至保存在a0寄存器中 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="38" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1a7a8a7d93e06d03d9378b3fdcf405924a" prot="public" static="no">
        <name>_SBICALL0</name>
        <param><defname>scall_id</defname></param>
        <initializer><ref refid="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" kindref="member">_SBICALL</ref>(scall_id, 0, 0, 0)</initializer>
        <briefdescription>
<para><computeroutput>_SBICALL0</computeroutput>为接受0个参数的<computeroutput>SBI</computeroutput>调用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="53" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1a9fbe8366d23e803d18afa20376174fb1" prot="public" static="no">
        <name>_SBICALL1</name>
        <param><defname>scall_id</defname></param>
        <param><defname>arg0</defname></param>
        <initializer><ref refid="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" kindref="member">_SBICALL</ref>(scall_id, arg0, 0, 0)</initializer>
        <briefdescription>
<para><computeroutput>_SBICALL1</computeroutput>为接受1个参数的<computeroutput>SBI</computeroutput>调用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="55" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1aec8f8124c74582321259980998d56bdd" prot="public" static="no">
        <name>_SBICALL2</name>
        <param><defname>scall_id</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <initializer><ref refid="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" kindref="member">_SBICALL</ref>(scall_id, arg0, arg1, 0)</initializer>
        <briefdescription>
<para><computeroutput>_SBICALL2</computeroutput>为接受2个参数的<computeroutput>SBI</computeroutput>调用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="57" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1a43267e673930713b8f9f97675ac59d03" prot="public" static="no">
        <name>_SBICALL3</name>
        <param><defname>scall_id</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer><ref refid="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" kindref="member">_SBICALL</ref>(scall_id, arg0, arg1, arg2)</initializer>
        <briefdescription>
<para><computeroutput>_SBICALL3</computeroutput>为接受3个参数的<computeroutput>SBI</computeroutput>调用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="59" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6" prot="public" static="no" strong="no">
        <type></type>
        <name>__sbicall_id_t</name>
        <enumvalue id="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6a3296d4d8c58e9e801958b4b2b7569195" prot="public">
          <name>SBICALL_SETTIMER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6ad4f4bf5b857f8ba0b8eaae6d5d95701d" prot="public">
          <name>SBICALL_CONSOLE_PUTCHAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6aaf1eef349fee9cc676afb8556038496b" prot="public">
          <name>SBICALL_CONSOLE_PUTSTR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6ab6f7d881d3b6d1be73f622525a121c15" prot="public">
          <name>SBICALL_CONSOLE_GETCHAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><computeroutput>sbicall_id_t</computeroutput>内定义了<computeroutput>SBI</computeroutput>调用号 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="18" column="28" bodyfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" bodystart="18" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbi_8h_1a1a40f8005dee91348ffaa10d8d059a7e" prot="public" static="no">
        <type>enum <ref refid="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6" kindref="member">__sbicall_id_t</ref></type>
        <definition>typedef enum __sbicall_id_t sbicall_id_t</definition>
        <argsstring></argsstring>
        <name>sbicall_id_t</name>
        <briefdescription>
<para><computeroutput>sbicall_id_t</computeroutput>内定义了<computeroutput>SBI</computeroutput>调用号 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="27" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbi_8h_1a3fd620bafabc522ae9fec0063d74f561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbi_settimer</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>sbi_settimer</name>
        <param>
          <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para><computeroutput>sbi_settimer</computeroutput>用于设置时钟 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>时钟的值 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="66" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1ae84b1d0d5e4e560a640e32e1516d9134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbi_putc</definition>
        <argsstring>(char c)</argsstring>
        <name>sbi_putc</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para><computeroutput>sbi_putc</computeroutput>用于向终端输出一个字符 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>需要输出的字符 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="73" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1aa07077ca42bb9255058acb8227b65cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbi_puts</definition>
        <argsstring>(char *str)</argsstring>
        <name>sbi_puts</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para><computeroutput>sbi_puts</computeroutput>用于向字符输出一个字符串 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>需要输出的0-terminated字符串</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para><computeroutput>sbi_puts</computeroutput>不会对str是否是以&apos;\0&apos;结尾进行检查 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" line="82" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h" declline="82" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="sbi_8h" kindref="compound">sbi.h</ref></computeroutput>为操作系统提供了SBI调用(M模式下的功能接口) </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gamil.com">jack4shihong@gamil.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-15</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_SBI_SBI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_SBI_SBI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constrains_8h" kindref="compound">constrains.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="sbi_8h_1a334b7276d6f4a176fa31284884cb19c6" kindref="member">__sbicall_id_t</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`SBICALL_SETTIMER<sp/>=<sp/>0x00`,<sp/>`SBI`提供的`timer`服务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>SBICALL_SETTIMER,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`SBICALL_CONSOLE_PUTCHAR<sp/>=<sp/>0x01`,<sp/>`SBI`提供的字符输出服务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>SBICALL_CONSOLE_PUTCHAR,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`SBICALL_CONSOLE_PUTSTR<sp/>=<sp/>0x02`,<sp/>`SBI`提供的字符串输出服务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>SBICALL_CONSOLE_PUTSTR,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`SBICALL_CONSOLE_GETCHAR<sp/>=<sp/>0x03`,<sp/>`SBI`提供的字符获取服务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>SBICALL_CONSOLE_GETCHAR</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><ref refid="sbi_8h_1a1a40f8005dee91348ffaa10d8d059a7e" kindref="member">sbicall_id_t</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="sbi_8h_1ab1806b9b2fd36cdda4cd3a5a1ddde20a" refkind="member"><highlight class="preprocessor">#define<sp/>_SBICALL(scall_id,<sp/>arg0,<sp/>arg1,<sp/>arg2)<sp/>({<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>ireg_t<sp/>a0<sp/>asm<sp/>(&quot;a0&quot;)<sp/>=<sp/>(ireg_t)(arg0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>ireg_t<sp/>a1<sp/>asm<sp/>(&quot;a1&quot;)<sp/>=<sp/>(ireg_t)(arg1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>ireg_t<sp/>a2<sp/>asm<sp/>(&quot;a2&quot;)<sp/>=<sp/>(ireg_t)(arg2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>ireg_t<sp/>a7<sp/>asm<sp/>(&quot;a7&quot;)<sp/>=<sp/>(ireg_t)(scall_id);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asm<sp/>volatile<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ecall&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;+r&quot;<sp/><sp/>(a0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;r&quot;<sp/><sp/><sp/>(a1),<sp/><sp/><sp/>&quot;r&quot;<sp/><sp/><sp/>(a2),<sp/><sp/><sp/>&quot;r&quot;<sp/><sp/><sp/>(a7)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;memory&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="sbi_8h_1a7a8a7d93e06d03d9378b3fdcf405924a" refkind="member"><highlight class="preprocessor">#define<sp/>_SBICALL0(scall_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SBICALL(scall_id,<sp/>0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBICALL1(scall_id,<sp/>arg0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SBICALL(scall_id,<sp/>arg0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBICALL2(scall_id,<sp/>arg0,<sp/>arg1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SBICALL(scall_id,<sp/>arg0,<sp/>arg1,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBICALL3(scall_id,<sp/>arg0,<sp/>arg1,<sp/>arg2)<sp/><sp/><sp/>_SBICALL(scall_id,<sp/>arg0,<sp/>arg1,<sp/>arg2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbi_8h_1a3fd620bafabc522ae9fec0063d74f561" kindref="member">sbi_settimer</ref>(<ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbi_8h_1ae84b1d0d5e4e560a640e32e1516d9134" kindref="member">sbi_putc</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbi_8h_1aa07077ca42bb9255058acb8227b65cce" kindref="member">sbi_puts</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/sbi/sbi.h"/>
  </compounddef>
</doxygen>
