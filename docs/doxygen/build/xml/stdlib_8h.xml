<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="stdlib_8h" kind="file" language="C++">
    <compoundname>stdlib.h</compoundname>
    <includes refid="types_8h" local="yes">types.h</includes>
    <includedby refid="stdfmt_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdfmt.h</includedby>
    <includedby refid="stdlist_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/stdlist.h</includedby>
    <includedby refid="test__stdlib_8h" local="yes">/home/data/proj/oskernel2023-x2w/include/test/test_stdlib.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>constrains.h</label>
        <link refid="constrains_8h"/>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/home/data/proj/oskernel2023-x2w/include/user/ustdio.h</label>
        <link refid="ustdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/data/proj/oskernel2023-x2w/include/sbi/sstdio.h</label>
        <link refid="sstdio_8h"/>
      </node>
      <node id="4">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kdebug.h</label>
        <link refid="kdebug_8h"/>
      </node>
      <node id="3">
        <label>/home/data/proj/oskernel2023-x2w/include/assert.h</label>
        <link refid="assert_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/data/proj/oskernel2023-x2w/include/stdlist.h</label>
        <link refid="stdlist_8h"/>
      </node>
      <node id="6">
        <label>/home/data/proj/oskernel2023-x2w/include/kernel/kstdio.h</label>
        <link refid="kstdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_stdlib.h</label>
        <link refid="test__stdlib_8h"/>
      </node>
      <node id="1">
        <label>/home/data/proj/oskernel2023-x2w/include/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/data/proj/oskernel2023-x2w/include/stdfmt.h</label>
        <link refid="stdfmt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/data/proj/oskernel2023-x2w/include/user/udebug.h</label>
        <link refid="udebug_8h"/>
      </node>
      <node id="9">
        <label>/home/data/proj/oskernel2023-x2w/include/test/test_stdfmt.h</label>
        <link refid="test__stdfmt_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" prot="public" static="no">
        <name>offset</name>
        <param><defname>struct_type</defname></param>
        <param><defname>member_name</defname></param>
        <initializer>(<ref refid="types_8h_1a186ea1339bffb378854987065835afe3" kindref="member">size_t</ref>) (&amp;((struct_type*)0)-&gt;member_name)</initializer>
        <briefdescription>
<para><computeroutput>offset</computeroutput>宏用于获得结构体<computeroutput>struct_type</computeroutput>中名为<computeroutput>member_name</computeroutput>成员的偏移量(以字节计算) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>struct_type</parametername>
</parameternamelist>
<parameterdescription>
<para>结构体名 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member_name</parametername>
</parameternamelist>
<parameterdescription>
<para>结构体中的成员名</para>
</parameterdescription>
</parameteritem>
</parameterlist>
举例: <programlisting filename=".c"><codeline><highlight class="keyword">struct<sp/></highlight><highlight class="normal">person_t<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>age;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[10];</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"><ref refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" kindref="member">offset</ref>(person_t,<sp/>age);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline><highlight class="normal"><ref refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" kindref="member">offset</ref>(person_t,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline><highlight class="normal"><ref refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" kindref="member">offset</ref>(person_t,<sp/>name);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/stdlib.h" line="39" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/stdlib.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdlib_8h_1a62bb4208280af3c1efd802971ce71318" prot="public" static="no">
        <name>member2struct</name>
        <param><defname>struct_type</defname></param>
        <param><defname>member_name</defname></param>
        <param><defname>elem_ptr</defname></param>
        <initializer>(struct_type*)((<ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref>)elem_ptr - <ref refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" kindref="member">offset</ref>(struct_type, member_name))</initializer>
        <briefdescription>
<para><computeroutput>member2struct</computeroutput>宏用于将指向结构体<computeroutput>struct_type</computeroutput>中的名为<computeroutput>member_name</computeroutput>的成员的指针转为指向<computeroutput>struct_type</computeroutput>的指针 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>struct_type</parametername>
</parameternamelist>
<parameterdescription>
<para>结构体名 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member_name</parametername>
</parameternamelist>
<parameterdescription>
<para>结构体中的成员名 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>指向结构体中<computeroutput>member_name</computeroutput>成员的指针</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>struct_type* 指向成员所在的结构体的指针</para>
</simplesect>
举例: <programlisting filename=".c"><codeline><highlight class="keyword">struct<sp/></highlight><highlight class="normal">person_t<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>age;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[10];</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">person_t<sp/>jack<sp/>=<sp/>{22,<sp/>2196113760,<sp/></highlight><highlight class="stringliteral">&quot;Shihong<sp/>Wang&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"><ref refid="types_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>*id_ptr<sp/>=<sp/>&amp;jack.id;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>将指向成员的指针转换为指向结构体的指针</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">person_t<sp/>*person_ptr<sp/>=<sp/><ref refid="stdlib_8h_1a62bb4208280af3c1efd802971ce71318" kindref="member">member2struct</ref>(person_t,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>id_ptr);</highlight></codeline>
<codeline><highlight class="normal">&amp;jack<sp/>==<sp/>person_ptr<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/stdlib.h" line="66" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/stdlib.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdlib_8h_1aa29b43ffe3685a28aa766b0be471b994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itoa</definition>
        <argsstring>(uint64_t integer, char **buf_ptr_addr, uint8_t base)</argsstring>
        <name>itoa</name>
        <param>
          <type><ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref></type>
          <declname>integer</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>buf_ptr_addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para><computeroutput>itoa</computeroutput> (integer to ascii) 用于将<computeroutput>uint64_t</computeroutput>数字转换为<computeroutput>char*</computeroutput>数字, 并将其存入<computeroutput>*buf_ptr_addr</computeroutput>指向的内存中 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>需要转为字符串形式的整数 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_ptr_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>指向接受输出的字符串的指针, 即字符数组名的地址 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>转换进制, 可以任意指定. 例如:<itemizedlist>
<listitem><para><computeroutput>base = 2</computeroutput>: 将<computeroutput>integer</computeroutput>转换为二进制形式的字符串数字, 例如 <computeroutput>6 = &quot;110&quot;</computeroutput></para>
</listitem><listitem><para><computeroutput>base = 8</computeroutput>: 将<computeroutput>integer</computeroutput>转换为二进制形式的字符串数字, 例如 <computeroutput>23 = &quot;27&quot;</computeroutput></para>
</listitem><listitem><para><computeroutput>base = 16</computeroutput>: 将<computeroutput>integer</computeroutput>转换为二进制形式的字符串数字, 例如 <computeroutput>47 = &quot;2F&quot;</computeroutput></para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>因为是使用递归完成的转换, 因此多次递归需要共享字符数组, 因此需要字符数组的二级指针 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/stdlib.h" line="82" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/stdlib.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1affe9aa2f8448f2b2faa3e112d6d0811f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref></type>
        <definition>int64_t atoi</definition>
        <argsstring>(char *str)</argsstring>
        <name>atoi</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>&apos;atoi函数实现字符串转整形数字 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>需要转换的字符串 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int64_t 转换得到的整形数字 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/stdlib.h" line="89" column="9" declfile="/home/data/proj/oskernel2023-x2w/include/stdlib.h" declline="89" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="stdlib_8h" kindref="compound">stdlib.h</ref></computeroutput>提供一系列帮助函数 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gmail.com">jack4shihong@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-09</para>
</simplesect>
<simplesect kind="warning"><para>为了避免编译时编译器使用系统的<computeroutput><ref refid="stdlib_8h" kindref="compound">stdlib.h</ref></computeroutput>库, 编译时需要为<computeroutput>GCC</computeroutput>指定<computeroutput>-nostdinc</computeroutput>选项, 详见根目录下的<computeroutput>Makefile</computeroutput></para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_STDLIB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_STDLIB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="stdlib_8h_1adc59f925a90e4b37b619e4ed89321029" refkind="member"><highlight class="preprocessor">#define<sp/>offset(struct_type,<sp/>member_name)<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(size_t)<sp/>(&amp;((struct_type*)0)-&gt;member_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="stdlib_8h_1a62bb4208280af3c1efd802971ce71318" refkind="member"><highlight class="preprocessor">#define<sp/>member2struct(struct_type,<sp/>member_name,<sp/>elem_ptr)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(struct_type*)((uint64_t)elem_ptr<sp/>-<sp/>offset(struct_type,<sp/>member_name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1aa29b43ffe3685a28aa766b0be471b994" kindref="member">itoa</ref>(<ref refid="types_8h_1aa232ecf786a74ce5363c36c10798d2b1" kindref="member">uint64_t</ref><sp/>integer,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>buf_ptr_addr,<sp/><ref refid="types_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>base);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="types_8h_1a312c7e8848187d110315ab83a7b3d4d0" kindref="member">int64_t</ref><sp/><ref refid="stdlib_8h_1affe9aa2f8448f2b2faa3e112d6d0811f" kindref="member">atoi</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/stdlib.h"/>
  </compounddef>
</doxygen>
