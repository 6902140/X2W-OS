<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="kmain_8h" kind="file" language="C++">
    <compoundname>kmain.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="kmain_8h_1ad10721bc2a31452461155968f46a3bc9" prot="public" static="no">
        <name>OS_BANNER</name>
        <initializer>    &quot;`YMM&apos;   `MP&apos;      `7MMF&apos;     A     `7MF&apos;               .g8\&quot;\&quot;8q.    .M\&quot;\&quot;\&quot;bgd\n&quot; \
    &quot;  VMb.  ,P          `MA     ,MA     ,V               .dP&apos;    `YM. ,MI    \&quot;Y\n&quot; \
    &quot;   `MM.M&apos;     pd*\&quot;*b.VM:   ,VVM:   ,V                dM&apos;      `MM `MMb.    \n&quot; \
    &quot;     MMb     (O)   j8 MM.  M&apos; MM.  M&apos;    **********  MM        MM   `YMMNq.\n&quot; \
    &quot;   ,M&apos;`Mb.       ,;j9 `MM A&apos;  `MM A&apos;                 MM.      ,MP .     `MM\n&quot; \
    &quot;  ,P   `MM.   ,-=&apos;     :MM;    :MM;                  `Mb.    ,dP&apos; Mb     dM\n&quot; \
    &quot;.MM:.  .:MMa.Ammmmmmm   VF      VF                     `\&quot;bmmd\&quot;&apos;   P\&quot;Ybmmd\&quot; \n&quot; \
    &quot;Copyright Shihong Wang, Shaofei Wang, Zhuiri Xiao (c) 2023 with GNU Public License V3.0\n&quot; \
    &quot;Enjoy!\n&quot;</initializer>
        <briefdescription>
<para><computeroutput>X2WSBI_BANNER</computeroutput>是在内核启动时输出字符串 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="16" column="9" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kmain_8h_1ac6c4da12d07bbb6ae9e7b7b0e2b1f862" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char kernel_entry[]</definition>
        <argsstring>[]</argsstring>
        <name>kernel_entry</name>
        <briefdescription>
<para>内核的入口点 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="34" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a2a1764d811b2aaa59f64a1b780d6aeb6" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_kernel[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_kernel</name>
        <briefdescription>
<para>内核的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="42" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="42" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a120607e40cc6822e00caae8f1a7287a3" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_kernel[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="42" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1ab80fc48a767774aeb50072c4f6cfb71c" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_text_boot[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_text_boot</name>
        <briefdescription>
<para>内核的&lt;tt&gt;.text.boot段的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="50" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="50" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1ae85640b08bb9a41cb6c67b90e709ae3f" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_text_boot[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_text_boot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="50" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a3fc38176522492a367fead4d66f5446d" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_text[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_text</name>
        <briefdescription>
<para>内核的&lt;tt&gt;.text段的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="58" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="58" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a1d5278aa344a0fa6b03ebed797080263" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_text[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="58" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a8ff444d143ac3a5e6fc300f72f9a89c2" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_rodata[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_rodata</name>
        <briefdescription>
<para>内核的&lt;tt&gt;.rodata段的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="66" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="66" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a03228943f2c3c7136c038132d063f962" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_rodata[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_rodata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="66" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a5a0ba2329f9d37499dfdca8a33234480" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_data[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_data</name>
        <briefdescription>
<para>内核的&lt;tt&gt;.data段的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="74" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="74" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a4d4c0da36d5bbceaf7e1666fedc554c9" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_data[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="74" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1aafac13e60ad43c566a2a1f04cf0a8c05" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _s_bss[]</definition>
        <argsstring>[]</argsstring>
        <name>_s_bss</name>
        <briefdescription>
<para>内核的&lt;tt&gt;.bss段的起始地址和终止地址 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><orderedlist>
<listitem><para>定义在<computeroutput>kernel.ld</computeroutput>中</para>
</listitem><listitem><para>char[] 转 addr_t 交给编译器完成 </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="82" column="13" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="82" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="kmain_8h_1a921eb491f3464ceb98a5621a8b35803c" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char _e_bss[]</definition>
        <argsstring>[]</argsstring>
        <name>_e_bss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="82" column="31" bodyfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kmain_8h_1a6b8fb674fb359f6ae53dc9c4fb7fc6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kernel_main</definition>
        <argsstring>(void)</argsstring>
        <name>kernel_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>kernel_main</computeroutput>是内核的入口函数 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="87" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="kmain_8h_1a13e526f3bf3f8afd29676e0be88a20e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_kmem</definition>
        <argsstring>(void)</argsstring>
        <name>print_kmem</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><computeroutput>print_kmem</computeroutput>用于输出内核在内存中的地址信息 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>需要和<computeroutput>kernel.ld</computeroutput>配合 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" line="94" column="6" declfile="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h" declline="94" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="kmain_8h" kindref="compound">kmain.h</ref></computeroutput>中提供了<computeroutput>kmain.c</computeroutput>中的宏定义、函数原型定义 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shihong Wang (<ulink url="mailto:jack4shihong@gmail.com">jack4shihong@gmail.com</ulink>)</para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2023-04-15</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright Shihong Wang (c) 2023 with GNU Public License V3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_KERNEL_KMAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_KERNEL_KMAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="kmain_8h_1ad10721bc2a31452461155968f46a3bc9" refkind="member"><highlight class="preprocessor">#define<sp/>OS_BANNER<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;`YMM&apos;<sp/><sp/><sp/>`MP&apos;<sp/><sp/><sp/><sp/><sp/><sp/>`7MMF&apos;<sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/>`7MF&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.g8\&quot;\&quot;8q.<sp/><sp/><sp/><sp/>.M\&quot;\&quot;\&quot;bgd\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/><sp/>VMb.<sp/><sp/>,P<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`MA<sp/><sp/><sp/><sp/><sp/>,MA<sp/><sp/><sp/><sp/><sp/>,V<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dP&apos;<sp/><sp/><sp/><sp/>`YM.<sp/>,MI<sp/><sp/><sp/><sp/>\&quot;Y\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/><sp/><sp/>`MM.M&apos;<sp/><sp/><sp/><sp/><sp/>pd*\&quot;*b.VM:<sp/><sp/><sp/>,VVM:<sp/><sp/><sp/>,V<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dM&apos;<sp/><sp/><sp/><sp/><sp/><sp/>`MM<sp/>`MMb.<sp/><sp/><sp/><sp/>\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/><sp/><sp/><sp/><sp/>MMb<sp/><sp/><sp/><sp/><sp/>(O)<sp/><sp/><sp/>j8<sp/>MM.<sp/><sp/>M&apos;<sp/>MM.<sp/><sp/>M&apos;<sp/><sp/><sp/><sp/>**********<sp/><sp/>MM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM<sp/><sp/><sp/>`YMMNq.\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/><sp/><sp/>,M&apos;`Mb.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,;j9<sp/>`MM<sp/>A&apos;<sp/><sp/>`MM<sp/>A&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM.<sp/><sp/><sp/><sp/><sp/><sp/>,MP<sp/>.<sp/><sp/><sp/><sp/><sp/>`MM\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/><sp/>,P<sp/><sp/><sp/>`MM.<sp/><sp/><sp/>,-=&apos;<sp/><sp/><sp/><sp/><sp/>:MM;<sp/><sp/><sp/><sp/>:MM;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`Mb.<sp/><sp/><sp/><sp/>,dP&apos;<sp/>Mb<sp/><sp/><sp/><sp/><sp/>dM\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;.MM:.<sp/><sp/>.:MMa.Ammmmmmm<sp/><sp/><sp/>VF<sp/><sp/><sp/><sp/><sp/><sp/>VF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`\&quot;bmmd\&quot;&apos;<sp/><sp/><sp/>P\&quot;Ybmmd\&quot;<sp/>\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Copyright<sp/>Shihong<sp/>Wang,<sp/>Shaofei<sp/>Wang,<sp/>Zhuiri<sp/>Xiao<sp/>(c)<sp/>2023<sp/>with<sp/>GNU<sp/>Public<sp/>License<sp/>V3.0\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Enjoy!\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1ac6c4da12d07bbb6ae9e7b7b0e2b1f862" kindref="member">kernel_entry</ref>[];</highlight></codeline>
<codeline lineno="42"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a2a1764d811b2aaa59f64a1b780d6aeb6" kindref="member">_s_kernel</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e_kernel[];</highlight></codeline>
<codeline lineno="50"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1ab80fc48a767774aeb50072c4f6cfb71c" kindref="member">_s_text_boot</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/>_e_text_boot[];</highlight></codeline>
<codeline lineno="58"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a3fc38176522492a367fead4d66f5446d" kindref="member">_s_text</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e_text[];</highlight></codeline>
<codeline lineno="66"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a8ff444d143ac3a5e6fc300f72f9a89c2" kindref="member">_s_rodata</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e_rodata[];</highlight></codeline>
<codeline lineno="74"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a5a0ba2329f9d37499dfdca8a33234480" kindref="member">_s_data</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e_data[];</highlight></codeline>
<codeline lineno="82"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1aafac13e60ad43c566a2a1f04cf0a8c05" kindref="member">_s_bss</ref>[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e_bss[];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a6b8fb674fb359f6ae53dc9c4fb7fc6be" kindref="member">kernel_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="kmain_8h_1a13e526f3bf3f8afd29676e0be88a20e4" kindref="member">print_kmem</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/data/proj/oskernel2023-x2w/include/kernel/kmain.h"/>
  </compounddef>
</doxygen>
