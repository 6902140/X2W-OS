riscv64-unknown-elf-gcc -nostdlib -nostdinc -fno-builtin -fno-pie -mabi=lp64 -march=rv64imafd -mcmodel=medany -g -O0 -I include/ -fomit-frame-pointer -Wall -Wmissing-prototypes -Werror=strict-prototypes -Werror=incompatible-pointer-types  -c -o /home/lighthouse/xzr/X2W-OS/build/kernel/kmain.o kernel/kmain.c
运行内核: kernel.elf, 所有输出将在下方显示
首先按下 Ctrl+A, 然后按下 X 键以退出 QEMU
你可以运行 `make debug-gdb` 以使用 GDB 调试内核
或者运行 `make debug-vscode` 以使用 VSCode 链接 QEMU 调试内核
----------------------------------------------------------------------------
`YMM'   `MP'      `7MMF'     A     `7MF'             .M"""bgd `7MM"""Yp, `7MMF'
  VMb.  ,P          `MA     ,MA     ,V              ,MI    "Y   MM    Yb   MM  
   `MM.M'     pd*"*b.VM:   ,VVM:   ,V               `MMb.       MM    dP   MM  
     MMb     (O)   j8 MM.  M' MM.  M'   **********    `YMMNq.   MM"""bg.   MM  
   ,M'`Mb.       ,;j9 `MM A'  `MM A'                .     `MM   MM    `Y   MM  
  ,P   `MM.   ,-='     :MM;    :MM;                 Mb     dM   MM    ,9   MM  
.MM:.  .:MMa.Ammmmmmm   VF      VF                  P"Ybmmd"  .JMMmmmd9  .JMML.

Copyright Shihong Wang, Shaofei Wang, Zhuiri Xiao (c) 2023 with GNU Public License V3.0
Enjoy!
============================================================
Enter SBI!
SBI init!
=> strap_init
=> secall_init
=> delegate_traps
=> stimer_init
Jump to kernel!
============================================================
In kernel!
Kernel init!
=> ktrap_init
=> ktimer_init
=> local_interrupt_enable
Memory: 14264KB available, 3566 free pages, phy_start_address=0x80212000

*************successfully initialize kernel_pool and user_pool***********
Start testing!
============================================================
X2W-OS Image Layout:
  kernel: 0x80200000 - 0x80211148 ( 69960 B)
  .text.boot: 0x80200000 - 0x80200028 (    40 B)
       .text: 0x80200028 - 0x80209000 ( 36824 B)
     .rodata: 0x80209000 - 0x8020ab5a (  7002 B)
       .data: 0x8020ab5a - 0x80210000 ( 21670 B)
        .bss: 0x80210000 - 0x80211148 (  4424 B)
============================================================
Kernel Hanging Here!
kernel main sstatus:0x122
in fork sstatus=0x122
1in fork sstatus=0x22
in malloc sstatus=0x22
1in fork sstatus=0x22
2in fork sstatus=0x22
fetch a pid=1
!!------------------!!
3in fork sstatus=0x22
ok start to move to user space
*pid[1]*: move to user space success,pgdir vaddr=0x0
---thread pid[1] bitmap alloc successfully!!!---
in fork sstatus=0x22
append p->runlist=8048098
ready_task_num=1
in fork sstatus=0x22
1in fork sstatus=0x22
in malloc sstatus=0x22
1in fork sstatus=0x22
2in fork sstatus=0x22
fetch a pid=2
!!------------------!!
3in fork sstatus=0x22
ok start to move to user space
*pid[2]*: move to user space success,pgdir vaddr=0x0
---thread pid[2] bitmap alloc successfully!!!---
in fork sstatus=0x22
append p->runlist=8049098
ready_task_num=2
in fork sstatus=0x22
1in fork sstatus=0x22
in malloc sstatus=0x22
1in fork sstatus=0x22
2in fork sstatus=0x22
fetch a pid=3
!!------------------!!
3in fork sstatus=0x22
ok start to move to user space
*pid[3]*: move to user space success,pgdir vaddr=0x0
---thread pid[3] bitmap alloc successfully!!!---
in fork sstatus=0x22
append p->runlist=804a098
ready_task_num=3
kernel main sstatus:0x22
append p->runlist=8020d098
ready_task_num=4
in malloc sstatus=0x22
in malloc sstatus=0x22
bitmap start from 0x804c000
in malloc sstatus=0x22
sstatus 0x22 sp 0x804c000  pc 0x802050cc
in malloc sstatus=0x22
in malloc sstatus=0x22
bitmap start from 0x804f000
in malloc sstatus=0x22
sstatus 0x22 sp 0x804f000  pc 0x80205164
in malloc sstatus=0x22
in malloc sstatus=0x22
bitmap start from 0x8052000
in malloc sstatus=0x22
sstatus 0x22 sp 0x8052000  pc 0x802051d4
PID [1][2][3] move to user space success!!!
kernel main sstatus:0x22
pid[0]'s pgdir vaddr=0x0
pid[1]'s pgdir vaddr=0x804d000
pid[2]'s pgdir vaddr=0x8050000
pid[3]'s pgdir vaddr=0x8053000
-kernel main sstatus:0x122
00ci0w-acvjd
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
welcome to kernel stage .2
now public variable with lock protection is <1>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <2>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <3>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <4>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <5>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <6>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <7>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <8>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <9>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <10>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <11>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <12>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <13>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <14>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <15>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <16>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <17>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <18>,2sstatus=22
pid[1] 1 is on running 12pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
welcome to kernel stage 3
now public variable with lock protection is <19>
pid[2] is on running abcde;
now public variable with lock protection is <20>
pid[2] is on running abcde;
now public variable with lock protection is <21>
pid[2] is on running abcde;
now public variable with lock protection is <22>
pid[2] is on running abcde;
now public variable with lock protection is <23>
pid[2] is on running abcde;
now public variable with lock protection is <24>
pid[2] is on running abcde;
now public variable with lock protection is <25>
pid[2] is on running abcde;
now public variable with lock protection is <26>
pid[2] is on running abcde;
now public variable with lock protection is <27>
pid[2] is on running abcde;
now public variable with lock protection is <28>
pid[2] is on running abcde;
now public variable with lock protection is <29>
pid[2] is on running abcde;
now public variable with lock protection is <30>
pid[2] is on running abcde;
now public variable with lock protection is <31>
pid[2] is on running abcde;
now public variable with lock protection is <32>
pid[2] is on running abcde;
now public variable with lock protection is <33>
pid[2] is on running abcde;
now public variable with lock protection is <34>
pid[2] is on running abcde;
now public variable with lock protection is <35>
pid[2] is on running abcde;
now public variable with lock protection is <36>
pid[2] is on running abcde;
now public variable with lock protection is <37>
pid[2] is on running abcde;
now public variable with lock protection is <38>
pid[2] is on running abcde;
now public variable with lock protection is <39>
pid[2] is on runningpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
welcome to kernel stage 3
now public variable with lock protection is <40>
pid[3] is on running !@#$^;
now public variable with lock protection is <41>
pid[3] is on running !@#$^;
now public variable with lock protection is <42>
pid[3] is on running !@#$^;
now public variable with lock protection is <43>
pid[3] is on running !@#$^;
now public variable with lock protection is <44>
pid[3] is on running !@#$^;
now public variable with lock protection is <45>
pid[3] is on running !@#$^;
now public variable with lock protection is <46>
pid[3] is on running !@#$^;
now public variable with lock protection is <47>
pid[3] is on running !@#$^;
now public variable with lock protection is <48>
pid[3] is on running !@#$^;
now public variable with lock protection is <49>
pid[3] is on running !@#$^;
now public variable with lock protection is <50>
pid[3] is on running !@#$^;
now public variable with lock protection is <51>
pid[3] is on running !@#$^;
now public variable with lock protection is <52>
pid[3] is on running !@#$^;
now public variable with lock protection is <53>
pid[3] is on running !@#$^;
now public variable with lock protection is <54>
pid[3] is on running !@#$^;
now public variable with lock protection is <55>
pid[3] is on running !@#$^;
now public variable with lock protection is <56>
pid[3] is on running !@#$^;
now public variable with lock protection is <57>
pid[3] is on running !@#$^;
now public variable with lock protection is <58>
pid[3] is on running !@#$^;
now public variable with lock protection is <59>
pid[3] is on running !@#$^;
now public variable with lock protection is <60>
pid[3] is on running !@#$^;
now public variable with lock protpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
345;
now public variable with lock protection is <62>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <63>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <64>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <65>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <66>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <67>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <68>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <69>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <70>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <71>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <72>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <73>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <74>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <75>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <76>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <77>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <78>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <79>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <80>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable wpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
 abcde;
now public variable with lock protection is <82>
pid[2] is on running abcde;
now public variable with lock protection is <83>
pid[2] is on running abcde;
now public variable with lock protection is <84>
pid[2] is on running abcde;
now public variable with lock protection is <85>
pid[2] is on running abcde;
now public variable with lock protection is <86>
pid[2] is on running abcde;
now public variable with lock protection is <87>
pid[2] is on running abcde;
now public variable with lock protection is <88>
pid[2] is on running abcde;
now public variable with lock protection is <89>
pid[2] is on running abcde;
now public variable with lock protection is <90>
pid[2] is on running abcde;
now public variable with lock protection is <91>
pid[2] is on running abcde;
now public variable with lock protection is <92>
pid[2] is on running abcde;
now public variable with lock protection is <93>
pid[2] is on running abcde;
now public variable with lock protection is <94>
pid[2] is on running abcde;
now public variable with lock protection is <95>
pid[2] is on running abcde;
now public variable with lock protection is <96>
pid[2] is on running abcde;
now public variable with lock protection is <97>
pid[2] is on running abcde;
now public variable with lock protection is <98>
pid[2] is on running abcde;
now public variable with lock protection is <99>
pid[2] is on running abcde;
now public variable with lock protection is <100>
pid[2] is on running abcde;
now public variable with lock protection is <101>
pid[2] is on running abcde;
now public variable with lock protection is <102>
pid[2] is on running abcde;
now public variable with lock protection is <103>
pid[2]pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
ection is <61>
pid[3] is on running !@#$^;
now public variable with lock protection is <104>
pid[3] is on running !@#$^;
now public variable with lock protection is <105>
pid[3] is on running !@#$^;
now public variable with lock protection is <106>
pid[3] is on running !@#$^;
now public variable with lock protection is <107>
pid[3] is on running !@#$^;
now public variable with lock protection is <108>
pid[3] is on running !@#$^;
now public variable with lock protection is <109>
pid[3] is on running !@#$^;
now public variable with lock protection is <110>
pid[3] is on running !@#$^;
now public variable with lock protection is <111>
pid[3] is on running !@#$^;
now public variable with lock protection is <112>
pid[3] is on running !@#$^;
now public variable with lock protection is <113>
pid[3] is on running !@#$^;
now public variable with lock protection is <114>
pid[3] is on running !@#$^;
now public variable with lock protection is <115>
pid[3] is on running !@#$^;
now public variable with lock protection is <116>
pid[3] is on running !@#$^;
now public variable with lock protection is <117>
pid[3] is on running !@#$^;
now public variable with lock protection is <118>
pid[3] is on running !@#$^;
now public variable with lock protection is <119>
pid[3] is on running !@#$^;
now public variable with lock protection is <120>
pid[3] is on running !@#$^;
now public variable with lock protection is <121>
pid[3] is on running !@#$^;
now public variable with lock protection is <122>
pid[3] is on running !@#$^;
now public variable with lock protection is <123>
pid[3] is on running !@#$^;
now public variable with lock protection is <124>
pid[3] is on running !@#$^;
now public variable with lock protection is <12pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernelpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
ith lock protection is <81>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <126>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <127>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <128>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <129>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <130>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <131>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <132>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <133>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <134>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <135>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <136>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <137>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <138>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <139>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <140>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <141>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <142>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <143>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <144>,2sstatus=22
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
 is on running abcde;
now public variable with lock protection is <145>
pid[2] is on running abcde;
now public variable with lock protection is <146>
pid[2] is on running abcde;
now public variable with lock protection is <147>
pid[2] is on running abcde;
now public variable with lock protection is <148>
pid[2] is on running abcde;
now public variable with lock protection is <149>
pid[2] is on running abcde;
now public variable with lock protection is <150>
pid[2] is on running abcde;
now public variable with lock protection is <151>
pid[2] is on running abcde;
now public variable with lock protection is <152>
pid[2] is on running abcde;
now public variable with lock protection is <153>
pid[2] is on running abcde;
now public variable with lock protection is <154>
pid[2] is on running abcde;
now public variable with lock protection is <155>
pid[2] is on running abcde;
now public variable with lock protection is <156>
pid[2] is on running abcde;
now public variable with lock protection is <157>
pid[2] is on running abcde;
now public variable with lock protection is <158>
pid[2] is on running abcde;
now public variable with lock protection is <159>
pid[2] is on running abcde;
now public variable with lock protection is <160>
pid[2] is on running abcde;
now public variable with lock protection is <161>
pid[2] is on running abcde;
now public variable with lock protection is <162>
pid[2] is on running abcde;
now public variable with lock protection is <163>
pid[2] is on running abcde;
now public variable with lock protection is <164>
pid[2] is on running abcde;
now public variable with lock protection is <165>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
5>
pid[3] is on running !@#$^;
now public variable with lock protection is <167>
pid[3] is on running !@#$^;
now public variable with lock protection is <168>
pid[3] is on running !@#$^;
now public variable with lock protection is <169>
pid[3] is on running !@#$^;
now public variable with lock protection is <170>
pid[3] is on running !@#$^;
now public variable with lock protection is <171>
pid[3] is on running !@#$^;
now public variable with lock protection is <172>
pid[3] is on running !@#$^;
now public variable with lock protection is <173>
pid[3] is on running !@#$^;
now public variable with lock protection is <174>
pid[3] is on running !@#$^;
now public variable with lock protection is <175>
pid[3] is on running !@#$^;
now public variable with lock protection is <176>
pid[3] is on running !@#$^;
now public variable with lock protection is <177>
pid[3] is on running !@#$^;
now public variable with lock protection is <178>
pid[3] is on running !@#$^;
now public variable with lock protection is <179>
pid[3] is on running !@#$^;
now public variable with lock protection is <180>
pid[3] is on running !@#$^;
now public variable with lock protection is <181>
pid[3] is on running !@#$^;
now public variable with lock protection is <182>
pid[3] is on running !@#$^;
now public variable with lock protection is <183>
pid[3] is on running !@#$^;
now public variable with lock protection is <184>
pid[3] is on running !@#$^;
now public variable with lock protection is <185>
pid[3] is on running !@#$^;
now public variable with lock protection is <186>
pid[3] is on running !@#$^;
now public variable with lock protection is <187>
pid[3] is on running !@#$^;
now public variable with lock protepid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernelpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
pid[1] 1 is on running 12345;
now public variable with lock protection is <189>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <190>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <191>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <192>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <193>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <194>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <195>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <196>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <197>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protecpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <198>
pid[2] is on running abcde;
now public variable with lock protection is <199>
pid[2] is on running abcde;
now public variable with lock protection is <200>
pid[2] is on running abcde;
now public variable with lock protection is <201>
pid[2] is on running abcde;
now public variable with lock protection is <202>
pid[2] is on running abcde;
now public variable with lock protection is <203>
pid[2] is on running abcde;
now public variable with lock protection is <204>
pid[2] is on running abcde;
now public variable with lock protection is <205>
pid[2] is on running abcde;
now public variable with lock protection is <206>
pid[2] is on running abcde;
now public variable with lock protection is <207>
pid[2] is on running abcde;
now public variable with lock protection is <208>
pid[2] is on running abcde;
now publpid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
ction is <188>
pid[3] is on running !@#$^;
now public variable with lock protection is <210>
pid[3] is on running !@#$^;
now public variable with lock protection is <211>
pid[3] is on running !@#$^;
now public variable with lock protection is <212>
pid[3] is on running !@#$^;
now public variable with lock protection is <213>
pid[3] is on running !@#$^;
now public variable with lock protection is <214>
pid[3] is on running !@#$^;
now public variable with lock protection is <215>
pid[3] is on running !@#$^;
now public variable with lock protection is <216>
pid[3] is on running !@#$^;
now public variable with lock protection is <217>
pid[3] is on running !@#$^;
now public variable with lock protection is <218>
pid[3] is on running !@#$^;
now public variable with lock protection is <219>
pid[3] is on running !@#$^;
pid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel mpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
tion is <198>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <220>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <221>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <222>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <223>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <224>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <225>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <226>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <227>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <228>,2sstatus=22
pid[1] 1 is on running 12345;
now public vpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
ic variable with lock protection is <209>
pid[2] is on running abcde;
now public variable with lock protection is <230>
pid[2] is on running abcde;
now public variable with lock protection is <231>
pid[2] is on running abcde;
now public variable with lock protection is <232>
pid[2] is on running abcde;
now public variable with lock protection is <233>
pid[2] is on running abcde;
now public variable with lock protection is <234>
pid[2] is on running abcde;
now public variable with lock protection is <235>
pid[2] is on running abcde;
now public variable with lock protection is <236>
pid[2] is on running abcde;
now public variable with lock protection is <237>
pid[2] is on running abcde;
now public variable with lock protection is <238>
pid[2] is on runpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <239>
pid[3] is on running !@#$^;
now public variable with lock protection is <240>
pid[3] is on running !@#$^;
now public variable with lock protection is <241>
pid[3] is on running !@#$^;
now public variable with lock protection is <242>
pid[3] is on running !@#$^;
now public variable with lock protection is <243>
pid[3] is on running !@#$^;
now public variable with lock protection is <244>
pid[3] is on running !@#$^;
now public variable with lock protection is <245>
pid[3] is on running !@#$^;
now public variable with lock protection is <246>
pid[3] is on running !@#$^;
now public variable with lock protection is <247>
pid[3] is on running !@#$^;
now public variable with lock protection is <248>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ain thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
ariable with lock protection is <229>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <249>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <250>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <251>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <252>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <253>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <254>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <255>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <256>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <257>,2sstatus=22
pid[1pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
ning abcde;
now public variable with lock protection is <258>
pid[2] is on running abcde;
now public variable with lock protection is <259>
pid[2] is on running abcde;
now public variable with lock protection is <260>
pid[2] is on running abcde;
now public variable with lock protection is <261>
pid[2] is on running abcde;
now public variable with lock protection is <262>
pid[2] is on running abcde;
now public variable with lock protection is <263>
pid[2] is on running abcde;
now public variable with lock protection is <264>
pid[2] is on running abcde;
now public variable with lock protection is <265>
pid[2] is on running abcde;
now public variable with lock protection is <266>
pid[2] is on running abcde;
now public variable with lock protection is <267>
pid[2] is on rupid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <268>
pid[3] is on running !@#$^;
now public variable with lock protection is <269>
pid[3] is on running !@#$^;
now public variable with lock protection is <270>
pid[3] is on running !@#$^;
now public variable with lock protection is <271>
pid[3] is on running !@#$^;
now public variable with lock protection is <272>
pid[3] is on running !@#$^;
now public variable with lock protection is <273>
pid[3] is on running !@#$^;
now public variable with lock protection is <274>
pid[3] is on running !@#$^;
now public variable with lock protection is <275>
pid[3] is on running !@#$^;
now public variable with lock protection is <276>
pid[3] is on running !@#$^;
now public variable with lock protection is <277>
pid[3] is on running !@#$^;
now publpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel mapid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
] 1 is on running 12345;
now public variable with lock protection is <279>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <280>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <281>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <282>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <283>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <284>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <285>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <286>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <287>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <288>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <289>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <290>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
nning abcde;
now public variable with lock protection is <292>
pid[2] is on running abcde;
now public variable with lock protection is <293>
pid[2] is on running abcde;
now public variable with lock protection is <294>
pid[2] is on running abcde;
now public variable with lock protection is <295>
pid[2] is on running abcde;
now public variable with lock protection is <296>
pid[2] is on running abcde;
now public variable with lock protection is <297>
pid[2] is on running abcde;
now public variable with lock protection is <298>
pid[2] is on running abcde;
now public variable with lock protection is <299>
pid[2] is on running abcde;
now public variable with lock protection is <300>
pid[2] is on running abcde;
now public variable with lock protection is <301>
pid[2] is on running abcde;
now public variable with lock protection is <302>
pid[2] is on running abcde;
now public variable with lock protection is <303>
pid[2] is on running abcde;
now public variable with lock protection is <304>
pid[2] is on running abcde;
now public variable with lock protection is <305>
pid[2] is on running abcde;
now public variable with lock protection is <306>
pid[2] is on running abcde;
now public variable with lock protection is <307>
pid[2] is on running abcde;
now public variable with lock protection is <308>
pid[2] is on running abcde;
now public variable with lock protection is <309>
pid[2] is on running abcde;
now public variable with lock protection is <310>
pid[2] is on running abcde;
now public variable with lock protection is <311>
pid[2] is on running abcde;
now public variable with lock protection is <312>
pid[2] is on running abcde;
now public variable with lock protection is <313>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
ic variable with lock protection is <278>
pid[3] is on running !@#$^;
now public variable with lock protection is <315>
pid[3] is on running !@#$^;
now public variable with lock protection is <316>
pid[3] is on running !@#$^;
now public variable with lock protection is <317>
pid[3] is on running !@#$^;
now public variable with lock protection is <318>
pid[3] is on running !@#$^;
now public variable with lock protection is <319>
pid[3] is on running !@#$^;
now public variable with lock protection is <320>
pid[3] is on running !@#$^;
now public variable with lock protection is <321>
pid[3] is on running !@#$^;
now public variable with lock protection is <322>
pid[3] is on running !@#$^;
now public variable with lock protection is <323>
pid[3] is on running !@#$^;
now public variable with lock protection is <324>
pid[3] is on running !@#$^;
now public variable with lock protection is <325>
pid[3] is on running !@#$^;
now public variable with lock protection is <326>
pid[3] is on running !@#$^;
now public variable with lock protection is <327>
pid[3] is on running !@#$^;
now public variable with lock protection is <328>
pid[3] is on running !@#$^;
now public variable with lock protection is <329>
pid[3] is on running !@#$^;
now public variable with lock protection is <330>
pid[3] is on running !@#$^;
now public variable with lock protection is <331>
pid[3] is on running !@#$^;
now public variable with lock protection is <332>
pid[3] is on running !@#$^;
now public variable with lock protection is <333>
pid[3] is on running !@#$^;
now public variable with lock protection is <334>
pid[3] is on running !@#$^;
now public variable with lock protection is <335>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 in thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],Inpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
lock protection is <291>,2sstatus=22
pid[1] 12 is on running 12345;
now public variable with lock protection is <337>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <338>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <339>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <340>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <341>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <342>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <343>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <344>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <345>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <346>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <347>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <348>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <349>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <350>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <351>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <352>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <353>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <354>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <355>,2sstatus=22
pid[1] 1 is on running pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <355>
pid[2] is on running abcde;
now public variable with lock protection is <356>
pid[2] is on running abcde;
now public variable with lock protection is <357>
pid[2] is on running abcde;
now public variable with lock protection is <358>
pid[2] is on running abcde;
now public variable with lock protection is <359>
pid[2] is on running abcde;
now public variable with lock protection is <360>
pid[2] is on running abcde;
now public variable with lock protection is <361>
pid[2] is on running abcde;
now public variable with lock protection is <362>
pid[2] is on running abcde;
now public variable with lock protection is <363>
pid[2] is on running abcde;
now public variable with lock protection is <364>
pid[2] is on running abcde;
now public variable with lock protection is <365>
pid[2] is on running abcde;
now public variable with lock protection is <366>
pid[2] is on running abcde;
now public variable with lock protection is <367>
pid[2] is on running abcde;
now public variable with lock protection is <368>
pid[2] is on running abcde;
now public variable with lock protection is <369>
pid[2] is on running abcde;
now public variable with lock protection is <370>
pid[2] is on running abcde;
now public variable with lock protection is <371>
pid[2] is on running abcde;
now public variable with lock protection is <372>
pid[2] is on running abcde;
now public variable with lock protection is <373>
pid[2] is on running abcde;
now public variable with lock protection is <374>
pid[2] is on running abcde;
now public variable with lock protection is <375>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <376>
pid[3] is on running !@#$^;
now public variable with lock protection is <377>
pid[3] is on running !@#$^;
now public variable with lock protection is <378>
pid[3] is on running !@#$^;
now public variable with lock protection is <379>
pid[3] is on running !@#$^;
now public variable with lock protection is <380>
pid[3] is on running !@#$^;
now public variable with lock protection is <381>
pid[3] is on running !@#$^;
now public variable with lock protection is <382>
pid[3] is on running !@#$^;
now public variable with lock protection is <383>
pid[3] is on running !@#$^;
now public variable with lock protection is <384>
pid[3] is on running !@#$^;
now public variable with lock protection is <385>
pid[3] is on running !@#$^;
now public variable with lock protection is <386>
pid[3] is on running !@#$^;
now public variable with lock protection is <387>
pid[3] is on running !@#$^;
now public variable with lock protection is <388>
pid[3] is on running !@#$^;
now public variable with lock protection is <389>
pid[3] is on running !@#$^;
now public variable with lock protection is <390>
pid[3] is on running !@#$^;
now public variable with lock protection is <391>
pid[3] is on running !@#$^;
now public variable with lock protection is <392>
pid[3] is on running !@#$^;
now public variable with lock protection is <393>
pid[3] is on running !@#$^;
now public variable with lock protection is <394>
pid[3] is on running !@#$^;
now public variable with lock protection is <395>
pid[3] is on running !@#$^;
now public variable with lock protection is <396>
pid[3] is on running !@#$^;
now public variable with lock protection is <397>
pid[3] is on running !@#$^;
now public varpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
12345;
now public variable with lock protection is <399>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <400>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <401>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <402>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <403>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <404>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <405>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <406>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <407>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <408>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <409>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <410>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <411>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <412>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <413>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <414>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <415>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <416>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <417>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lopid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <376>
pid[2] is on running abcde;
now public variable with lock protection is <419>
pid[2] is on running abcde;
now public variable with lock protection is <420>
pid[2] is on running abcde;
now public variable with lock protection is <421>
pid[2] is on running abcde;
now public variable with lock protection is <422>
pid[2] is on running abcde;
now public variable with lock protection is <423>
pid[2] is on running abcde;
now public variable with lock protection is <424>
pid[2] is on running abcde;
now public variable with lock protection is <425>
pid[2] is on running abcde;
now public variable with lock protection is <426>
pid[2] is on running abcde;
now public variable with lock protection is <427>
pid[2] is on running abcde;
now public variable with lock protection is <428>
pid[2] is on running abcde;
now public variable with lock protection is <429>
pid[2] is on running abcde;
now public variable with lock protection is <430>
pid[2] is on running abcde;
now public variable with lock protection is <431>
pid[2] is on running abcde;
now public variable with lock protection is <432>
pid[2] is on running abcde;
now public variable with lock protection is <433>
pid[2] is on running abcde;
now public variable with lock protection is <434>
pid[2] is on running abcde;
now public variable with lock protection is <435>
pid[2] is on running abcde;
now public variable with lock protection is <436>
pid[2] is on running abcde;
now public variable with lock protection is <437>
pid[2] is on running abcde;
now public variable with lock protection is <438>
pid[2] is on running abcde;
now public variable with lock protection is <439>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
iable with lock protection is <398>
pid[3] is on running !@#$^;
now public variable with lock protection is <441>
pid[3] is on running !@#$^;
now public variable with lock protection is <442>
pid[3] is on running !@#$^;
now public variable with lock protection is <443>
pid[3] is on running !@#$^;
now public variable with lock protection is <444>
pid[3] is on running !@#$^;
now public variable with lock protection is <445>
pid[3] is on running !@#$^;
now public variable with lock protection is <446>
pid[3] is on running !@#$^;
now public variable with lock protection is <447>
pid[3] is on running !@#$^;
now public variable with lock protection is <448>
pid[3] is on running !@#$^;
now public variable with lock protection is <449>
pid[3] is on running !@#$^;
now public variable with lock protection is <450>
pid[3] is on running !@#$^;
now public variable with lock protection is <451>
pid[3] is on running !@#$^;
now public variable with lock protection is <452>
pid[3] is on running !@#$^;
now public variable with lock protection is <453>
pid[3] is on running !@#$^;
now public variable with lock protection is <454>
pid[3] is on running !@#$^;
now public variable with lock protection is <455>
pid[3] is on running !@#$^;
now public variable with lock protection is <456>
pid[3] is on running !@#$^;
now public variable with lock protection is <457>
pid[3] is on running !@#$^;
now public variable with lock protection is <458>
pid[3] is on running !@#$^;
now public variable with lock protection is <459>
pid[3] is on running !@#$^;
now public variable with lock protection is <460>
pid[3] is on running !@#$^;
now public variable wipid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
ck protection is <418>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <462>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <463>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <464>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <465>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <466>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <467>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <468>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <469>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <470>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <471>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <472>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <473>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <474>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <475>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <476>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <477>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <478>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <479>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <480>,2sstatuspid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <480>
pid[2] is on running abcde;
now public variable with lock protection is <481>
pid[2] is on running abcde;
now public variable with lock protection is <482>
pid[2] is on running abcde;
now public variable with lock protection is <483>
pid[2] is on running abcde;
now public variable with lock protection is <484>
pid[2] is on running abcde;
now public variable with lock protection is <485>
pid[2] is on running abcde;
now public variable with lock protection is <486>
pid[2] is on running abcde;
now public variable with lock protection is <487>
pid[2] is on running abcde;
now public variable with lock protection is <488>
pid[2] is on running abcde;
now public variable with lock protection is <489>
pid[2] is on running abcde;
now public variable with lock protection is <490>
pid[2] is on running abcde;
now public variable with lock protection is <491>
pid[2] is on running abcde;
now public variable with lock protection is <492>
pid[2] is on running abcde;
now public variable with lock protection is <493>
pid[2] is on running abcde;
now public variable with lock protection is <494>
pid[2] is on running abcde;
now public variable with lock protection is <495>
pid[2] is on running abcde;
now public variable with lock protection is <496>
pid[2] is on running abcde;
now public variable with lock protection is <497>
pid[2] is on running abcde;
now public variable with lock protection is <498>
pid[2] is on running abcde;
now public variable with lock protection is <499>
pid[2] is on running abcde;
now public variable with lock protection is <500>
pid[2] is on running abcde;
now public variable with lock protection is <501>
pid[2]pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
th lock protection is <461>
pid[3] is on running !@#$^;
now public variable with lock protection is <502>
pid[3] is on running !@#$^;
now public variable with lock protection is <503>
pid[3] is on running !@#$^;
now public variable with lock protection is <504>
pid[3] is on running !@#$^;
now public variable with lock protection is <505>
pid[3] is on running !@#$^;
now public variable with lock protection is <506>
pid[3] is on running !@#$^;
now public variable with lock protection is <507>
pid[3] is on running !@#$^;
now public variable with lock protection is <508>
pid[3] is on running !@#$^;
now public variable with lock protection is <509>
pid[3] is on running !@#$^;
now public variable with lock protection is <510>
pid[3] is on running !@#$^;
now public variable with lock protection is <511>
pid[3] is on running !@#$^;
now public variable with lock protection is <512>
pid[3] is on running !@#$^;
now public variable with lock protection is <513>
pid[3] is on running !@#$^;
now public variable with lock protection is <514>
pid[3] is on running !@#$^;
now public variable with lock protection is <515>
pid[3] is on running !@#$^;
now public variable with lock protection is <516>
pid[3] is on running !@#$^;
now public variable with lock protection is <517>
pid[3] is on running !@#$^;
now public variable with lock protection is <518>
pid[3] is on running !@#$^;
now public variable with lock protection is <519>
pid[3] is on running !@#$^;
now public variable with lock protection is <520>
pid[3] is on running !@#$^;
now public variable with lock protection is <521>
pid[3] is on running !@#$^;
now public variable with pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
=22
pid[1] 12 is on running 12345;
now public variable with lock protection is <523>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <524>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <525>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <526>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <527>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <528>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <529>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <530>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <531>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <532>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <533>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <534>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <535>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <536>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <537>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <538>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <539>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <540>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <541>,2sstatus=22
pid[1] 1 is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
 is on running abcde;
now public variable with lock protection is <543>
pid[2] is on running abcde;
now public variable with lock protection is <544>
pid[2] is on running abcde;
now public variable with lock protection is <545>
pid[2] is on running abcde;
now public variable with lock protection is <546>
pid[2] is on running abcde;
now public variable with lock protection is <547>
pid[2] is on running abcde;
now public variable with lock protection is <548>
pid[2] is on running abcde;
now public variable with lock protection is <549>
pid[2] is on running abcde;
now public variable with lock protection is <550>
pid[2] is on running abcde;
now public variable with lock protection is <551>
pid[2] is on running abcde;
now public variable with lock protection is <552>
pid[2] is on running abcde;
now public variable with lock protection is <553>
pid[2] is on running abcde;
now public variable with lock protection is <554>
pid[2] is on running abcde;
now public variable with lock protection is <555>
pid[2] is on running abcde;
now public variable with lock protection is <556>
pid[2] is on running abcde;
now public variable with lock protection is <557>
pid[2] is on running abcde;
now public variable with lock protection is <558>
pid[2] is on running abcde;
now public variable with lock protection is <559>
pid[2] is on running abcde;
now public variable with lock protection is <560>
pid[2] is on running abcde;
now public variable with lock protection is <561>
pid[2] is on running abcde;
now public variable with lock protection is <562>
pid[2] is on running abcde;
now public variable with lock protection is <563>
pid[2] is on running abcde;
now public variable with lock protection is <564>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
lock protection is <522>
pid[3] is on running !@#$^;
now public variable with lock protection is <566>
pid[3] is on running !@#$^;
now public variable with lock protection is <567>
pid[3] is on running !@#$^;
now public variable with lock protection is <568>
pid[3] is on running !@#$^;
now public variable with lock protection is <569>
pid[3] is on running !@#$^;
now public variable with lock protection is <570>
pid[3] is on running !@#$^;
now public variable with lock protection is <571>
pid[3] is on running !@#$^;
now public variable with lock protection is <572>
pid[3] is on running !@#$^;
now public variable with lock protection is <573>
pid[3] is on running !@#$^;
now public variable with lock protection is <574>
pid[3] is on running !@#$^;
now public variable with lock protection is <575>
pid[3] is on running !@#$^;
now public variable with lock protection is <576>
pid[3] is on running !@#$^;
now public variable with lock protection is <577>
pid[3] is on running !@#$^;
now public variable with lock protection is <578>
pid[3] is on running !@#$^;
now public variable with lock protection is <579>
pid[3] is on running !@#$^;
now public variable with lock protection is <580>
pid[3] is on running !@#$^;
now public variable with lock protection is <581>
pid[3] is on running !@#$^;
now public variable with lock protection is <582>
pid[3] is on running !@#$^;
now public variable with lock protection is <583>
pid[3] is on running !@#$^;
now public variable with lock protection is <584>
pid[3] is on running !@#$^;
now public variable with lock protection is <585>
pid[3] is on running !@#$^;
now public variable with lock protection is <586>
pid[3] is on running !@#$^;
now public variable with locpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
now public variable with lock protection is <587>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <588>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <589>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <590>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <591>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <592>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <593>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <594>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <595>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <596>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <597>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <598>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <599>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <600>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <601>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <602>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <603>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <604>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <605>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <606>,2sstatus=22
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <606>
pid[2] is on running abcde;
now public variable with lock protection is <607>
pid[2] is on running abcde;
now public variable with lock protection is <608>
pid[2] is on running abcde;
now public variable with lock protection is <609>
pid[2] is on running abcde;
now public variable with lock protection is <610>
pid[2] is on running abcde;
now public variable with lock protection is <611>
pid[2] is on running abcde;
now public variable with lock protection is <612>
pid[2] is on running abcde;
now public variable with lock protection is <613>
pid[2] is on running abcde;
now public variable with lock protection is <614>
pid[2] is on running abcde;
now public variable with lock protection is <615>
pid[2] is on running abcde;
now public variable with lock protection is <616>
pid[2] is on running abcde;
now public variable with lock protection is <617>
pid[2] is on running abcde;
now public variable with lock protection is <618>
pid[2] is on running abcde;
now public variable with lock protection is <619>
pid[2] is on running abcde;
now public variable with lock protection is <620>
pid[2] is on running abcde;
now public variable with lock protection is <621>
pid[2] is on running abcde;
now public variable with lock protection is <622>
pid[2] is on running abcde;
now public variable with lock protection is <623>
pid[2] is on running abcde;
now public variable with lock protection is <624>
pid[2] is on running abcde;
now public variable with lock protection is <625>
pid[2] is on running abcde;
now public variable with lock protection is <626>
pid[2] is on running abcde;
now public variable with lock protection is <627>
pid[2] is on running abcde;
now public varipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
k protection is <587>
pid[3] is on running !@#$^;
now public variable with lock protection is <629>
pid[3] is on running !@#$^;
now public variable with lock protection is <630>
pid[3] is on running !@#$^;
now public variable with lock protection is <631>
pid[3] is on running !@#$^;
now public variable with lock protection is <632>
pid[3] is on running !@#$^;
now public variable with lock protection is <633>
pid[3] is on running !@#$^;
now public variable with lock protection is <634>
pid[3] is on running !@#$^;
now public variable with lock protection is <635>
pid[3] is on running !@#$^;
now public variable with lock protection is <636>
pid[3] is on running !@#$^;
now public variable with lock protection is <637>
pid[3] is on running !@#$^;
now public variable with lock protection is <638>
pid[3] is on running !@#$^;
now public variable with lock protection is <639>
pid[3] is on running !@#$^;
now public variable with lock protection is <640>
pid[3] is on running !@#$^;
now public variable with lock protection is <641>
pid[3] is on running !@#$^;
now public variable with lock protection is <642>
pid[3] is on running !@#$^;
now public variable with lock protection is <643>
pid[3] is on running !@#$^;
now public variable with lock protection is <644>
pid[3] is on running !@#$^;
now public variable with lock protection is <645>
pid[3] is on running !@#$^;
now public variable with lock protection is <646>
pid[3] is on running !@#$^;
now public variable with lock protection is <647>
pid[3] is on running !@#$^;
now public variable with lock protection is <648>
pid[3] is on running !@#$^;
now public variable with lock protection is <649>
pid[3] is on running !@#$^;
now public variablepid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
pid[1] 12 is on running 12345;
now public variable with lock protection is <651>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <652>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <653>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <654>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <655>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <656>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <657>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <658>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <659>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <660>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <661>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <662>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <663>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <664>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <665>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <666>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <667>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <668>,2sstatus=22
pid[1] 1 is onpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
able with lock protection is <628>
pid[2] is on running abcde;
now public variable with lock protection is <669>
pid[2] is on running abcde;
now public variable with lock protection is <670>
pid[2] is on running abcde;
now public variable with lock protection is <671>
pid[2] is on running abcde;
now public variable with lock protection is <672>
pid[2] is on running abcde;
now public variable with lock protection is <673>
pid[2] is on running abcde;
now public variable with lock protection is <674>
pid[2] is on running abcde;
now public variable with lock protection is <675>
pid[2] is on running abcde;
now public variable with lock protection is <676>
pid[2] is on running abcde;
now public variable with lock protection is <677>
pid[2] is on running abcde;
now public variable with lock protection is <678>
pid[2] is on running abcde;
now public variable with lock protection is <679>
pid[2] is on running abcde;
now public variable with lock protection is <680>
pid[2] is on running abcde;
now public variable with lock protection is <681>
pid[2] is on running abcde;
now public variable with lock protection is <682>
pid[2] is on running abcde;
now public variable with lock protection is <683>
pid[2] is on running abcde;
now public variable with lock protection is <684>
pid[2] is on running abcde;
now public variable with lock protection is <685>
pid[2] is on running abcde;
now public variable with lock protection is <686>
pid[2] is on running abcde;
now public variable with lock protection is <687>
pid[2] is on running abcde;
now public variable with lock protection is <688>
pid[2] is on running abcde;
now public variable with lock protection is <689>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
 with lock protection is <650>
pid[3] is on running !@#$^;
now public variable with lock protection is <691>
pid[3] is on running !@#$^;
now public variable with lock protection is <692>
pid[3] is on running !@#$^;
now public variable with lock protection is <693>
pid[3] is on running !@#$^;
now public variable with lock protection is <694>
pid[3] is on running !@#$^;
now public variable with lock protection is <695>
pid[3] is on running !@#$^;
now public variable with lock protection is <696>
pid[3] is on running !@#$^;
now public variable with lock protection is <697>
pid[3] is on running !@#$^;
now public variable with lock protection is <698>
pid[3] is on running !@#$^;
now public variable with lock protection is <699>
pid[3] is on running !@#$^;
now public variable with lock protection is <700>
pid[3] is on running !@#$^;
now public variable with lock protection is <701>
pid[3] is on running !@#$^;
now public variable with lock protection is <702>
pid[3] is on running !@#$^;
now public variable with lock protection is <703>
pid[3] is on running !@#$^;
now public variable with lock protection is <704>
pid[3] is on running !@#$^;
now public variable with lock protection is <705>
pid[3] is on running !@#$^;
now public variable with lock protection is <706>
pid[3] is on running !@#$^;
now public variable with lock protection is <707>
pid[3] is on running !@#$^;
now public variable with lock protection is <708>
pid[3] is on running !@#$^;
now public variable with lock protection is <709>
pid[3] is on running !@#$^;
now public variable with lock protection is <710>
pid[3] is on running !@#$^;
now public variable with lock protection is <711>
pid[3] is on running !@#$^;
now public variable with lopid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel maipid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
 running 12345;
now public variable with lock protection is <713>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <714>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <715>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <716>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <717>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <718>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <719>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <720>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <721>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <722>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <723>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <724>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <725>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <726>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <727>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <728>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <729>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <730>,2sstatus=22
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <730>
pid[2] is on running abcde;
now public variable with lock protection is <731>
pid[2] is on running abcde;
now public variable with lock protection is <732>
pid[2] is on running abcde;
now public variable with lock protection is <733>
pid[2] is on running abcde;
now public variable with lock protection is <734>
pid[2] is on running abcde;
now public variable with lock protection is <735>
pid[2] is on running abcde;
now public variable with lock protection is <736>
pid[2] is on running abcde;
now public variable with lock protection is <737>
pid[2] is on running abcde;
now public variable with lock protection is <738>
pid[2] is on running abcde;
now public variable with lock protection is <739>
pid[2] is on running abcde;
now public variable with lock protection is <740>
pid[2] is on running abcde;
now public variable with lock protection is <741>
pid[2] is on running abcde;
now public variable with lock protection is <742>
pid[2] is on running abcde;
now public variable with lock protection is <743>
pid[2] is on running abcde;
now public variable with lock protection is <744>
pid[2] is on running abcde;
now public variable with lock protection is <745>
pid[2] is on running abcde;
now public variable with lock protection is <746>
pid[2] is on running abcde;
now public variable with lock protection is <747>
pid[2] is on running abcde;
now public variable with lock protection is <748>
pid[2] is on running abcde;
now public variable with lock protection is <749>
pid[2] is on rupid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
ck protection is <712>
pid[3] is on running !@#$^;
now public variable with lock protection is <750>
pid[3] is on running !@#$^;
now public variable with lock protection is <751>
pid[3] is on running !@#$^;
now public variable with lock protection is <752>
pid[3] is on running !@#$^;
now public variable with lock protection is <753>
pid[3] is on running !@#$^;
now public variable with lock protection is <754>
pid[3] is on running !@#$^;
now public variable with lock protection is <755>
pid[3] is on running !@#$^;
now public variable with lock protection is <756>
pid[3] is on running !@#$^;
now public variable with lock protection is <757>
pid[3] is on running !@#$^;
now public variable with lock protection is <758>
pid[3] is on running !@#$^;
now public variable with lock protection is <759>
pid[3] is on running !@#$^;
now public variable with lock protection is <760>
pid[3] is on running !@#$^;
now public variable with lock protection is <761>
pid[3] is on running !@#$^;
now public variable with lock protection is <762>
pid[3] is on running !@#$^;
now public variable with lock protection is <763>
pid[3] is on running !@#$^;
now public variable with lock protection is <764>
pid[3] is on running !@#$^;
now public variable with lock protection is <765>
pid[3] is on running !@#$^;
now public variable with lock protection is <766>
pid[3] is on running !@#$^;
now public variable with lock protection is <767>
pid[3] is on running !@#$^;
now public variable with lock protection is <768>
pid[3] is on running !@#$^;
now public variable with lock protection is <769>
pid[3] is on running !@#$^;
now public variable wipid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
pid[1] 1 is on running 12345;
now public variable with lock protection is <771>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <772>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <773>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <774>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <775>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <776>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <777>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <778>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <779>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <780>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <781>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <782>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <783>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <784>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <785>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <786>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <787>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <788>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <789>,2sstatus=22
pid[1] 1 is on running 1pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
nning abcde;
now public variable with lock protection is <790>
pid[2] is on running abcde;
now public variable with lock protection is <791>
pid[2] is on running abcde;
now public variable with lock protection is <792>
pid[2] is on running abcde;
now public variable with lock protection is <793>
pid[2] is on running abcde;
now public variable with lock protection is <794>
pid[2] is on running abcde;
now public variable with lock protection is <795>
pid[2] is on running abcde;
now public variable with lock protection is <796>
pid[2] is on running abcde;
now public variable with lock protection is <797>
pid[2] is on running abcde;
now public variable with lock protection is <798>
pid[2] is on running abcde;
now public variable with lock protection is <799>
pid[2] is on running abcde;
now public variable with lock protection is <800>
pid[2] is on running abcde;
now public variable with lock protection is <801>
pid[2] is on running abcde;
now public variable with lock protection is <802>
pid[2] is on running abcde;
now public variable with lock protection is <803>
pid[2] is on running abcde;
now public variable with lock protection is <804>
pid[2] is on running abcde;
now public variable with lock protection is <805>
pid[2] is on running abcde;
now public variable with lock protection is <806>
pid[2] is on running abcde;
now public variable with lock protection is <807>
pid[2] is on running abcde;
now public variable with lock protection is <8pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
th lock protection is <770>
pid[3] is on running !@#$^;
now public variable with lock protection is <809>
pid[3] is on running !@#$^;
now public variable with lock protection is <810>
pid[3] is on running !@#$^;
now public variable with lock protection is <811>
pid[3] is on running !@#$^;
now public variable with lock protection is <812>
pid[3] is on running !@#$^;
now public variable with lock protection is <813>
pid[3] is on running !@#$^;
now public variable with lock protection is <814>
pid[3] is on running !@#$^;
now public variable with lock protection is <815>
pid[3] is on running !@#$^;
now public variable with lock protection is <816>
pid[3] is on running !@#$^;
now public variable with lock protection is <817>
pid[3] is on running !@#$^;
now public variable with lock protection is <818>
pid[3] is on running !@#$^;
now public variable with lock protection is <819>
pid[3] is on running !@#$^;
now public variable with lock protection is <820>
pid[3] is on running !@#$^;
now public variable with lock protection is <821>
pid[3] is on running !@#$^;
now public variable with lock protection is <822>
pid[3] is on running !@#$^;
now public variable with lock protection is <823>
pid[3] is on running !@#$^;
now public variable with lock protection is <824>
pid[3] is on running !@#$^;
now public variable with lock protection is <825>
pid[3] is on running !@#$^;
now public variable with lock protection is <826>
pid[3] is on running !@#$^;
now public variable with lock protection is <827>
pid[3] is on running !@#$^;
now public variable with lock protection is <828>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
2345;
now public variable with lock protection is <830>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <831>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <832>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <833>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <834>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <835>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <836>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <837>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <838>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <839>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <840>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <841>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <842>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <843>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <844>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <845>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <846>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <847>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <848>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
08>
pid[2] is on running abcde;
now public variable with lock protection is <850>
pid[2] is on running abcde;
now public variable with lock protection is <851>
pid[2] is on running abcde;
now public variable with lock protection is <852>
pid[2] is on running abcde;
now public variable with lock protection is <853>
pid[2] is on running abcde;
now public variable with lock protection is <854>
pid[2] is on running abcde;
now public variable with lock protection is <855>
pid[2] is on running abcde;
now public variable with lock protection is <856>
pid[2] is on running abcde;
now public variable with lock protection is <857>
pid[2] is on running abcde;
now public variable with lock protection is <858>
pid[2] is on running abcde;
now public variable with lock protection is <859>
pid[2] is on running abcde;
now public variable with lock protection is <860>
pid[2] is on running abcde;
now public variable with lock protection is <861>
pid[2] is on running abcde;
now public variable with lock protection is <862>
pid[2] is on running abcde;
now public variable with lock protection is <863>
pid[2] is on running abcde;
now public variable with lock protection is <864>
pid[2] is on running abcde;
now public variable with lock protection is <865>
pid[2] is on running abcde;
now public variable with lock protection is <866>
pid[2] is on running abcde;
now public variable with lock protection is <867>
pid[2] is on running abcde;
now public variable with lock protection is <868>
pid[2] is on running abcde;
now public variable with lock protection is <869>
pid[2] is on running abcde;
now public variable with lock protection is <870>
pid[2] is on running abcde;
now public variable with lock protection is <871pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <871>
pid[3] is on running !@#$^;
now public variable with lock protection is <872>
pid[3] is on running !@#$^;
now public variable with lock protection is <873>
pid[3] is on running !@#$^;
now public variable with lock protection is <874>
pid[3] is on running !@#$^;
now public variable with lock protection is <875>
pid[3] is on running !@#$^;
now public variable with lock protection is <876>
pid[3] is on running !@#$^;
now public variable with lock protection is <877>
pid[3] is on running !@#$^;
now public variable with lock protection is <878>
pid[3] is on running !@#$^;
now public variable with lock protection is <879>
pid[3] is on running !@#$^;
now public variable with lock protection is <880>
pid[3] is on running !@#$^;
now public variable with lock protection is <881>
pid[3] is on running !@#$^;
now public variable with lock protection is <882>
pid[3] is on running !@#$^;
now public variable with lock protection is <883>
pid[3] is on running !@#$^;
now public variable with lock protection is <884>
pid[3] is on running !@#$^;
now public variable with lock protection is <885>
pid[3] is on running !@#$^;
now public variable with lock protection is <886>
pid[3] is on running !@#$^;
now public variable with lock protection is <887>
pid[3] is on running !@#$^;
now public variable with lock protection is <888>
pid[3] is on running !@#$^;
now public variable with lock protection is <889>
pid[3] is on running !@#$^;
now public variable with lock protection is <890>
pid[3] is on running !@#$^;
now public variable with lock protection is <891>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
lock protection is <849>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <893>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <894>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <895>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <896>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <897>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <898>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <899>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <900>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <901>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <902>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <903>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <904>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <905>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <906>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <907>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <908>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <909>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <910>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <911>,2sstatus=22
pid[1] 1 is on running 123pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
>
pid[2] is on running abcde;
now public variable with lock protection is <912>
pid[2] is on running abcde;
now public variable with lock protection is <913>
pid[2] is on running abcde;
now public variable with lock protection is <914>
pid[2] is on running abcde;
now public variable with lock protection is <915>
pid[2] is on running abcde;
now public variable with lock protection is <916>
pid[2] is on running abcde;
now public variable with lock protection is <917>
pid[2] is on running abcde;
now public variable with lock protection is <918>
pid[2] is on running abcde;
now public variable with lock protection is <919>
pid[2] is on running abcde;
now public variable with lock protection is <920>
pid[2] is on running abcde;
now public variable with lock protection is <921>
pid[2] is on running abcde;
now public variable with lock protection is <922>
pid[2] is on running abcde;
now public variable with lock protection is <923>
pid[2] is on running abcde;
now public variable with lock protection is <924>
pid[2] is on running abcde;
now public variable with lock protection is <925>
pid[2] is on running abcde;
now public variable with lock protection is <926>
pid[2] is on running abcde;
now public variable with lock protection is <927>
pid[2] is on running abcde;
now public variable with lock protection is <928>
pid[2] is on running abcde;
now public variable with lock protection is <929>
pid[2] is on running abcde;
now public variable with lock protection is <930>
pid[2] is on running abcde;
now public variable with lock protection is <931>
pid[2] is on running abcde;
now public variable with lock protection is <932>
pid[2] is on running abcde;
now public variable with lock protection pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <933>
pid[3] is on running !@#$^;
now public variable with lock protection is <934>
pid[3] is on running !@#$^;
now public variable with lock protection is <935>
pid[3] is on running !@#$^;
now public variable with lock protection is <936>
pid[3] is on running !@#$^;
now public variable with lock protection is <937>
pid[3] is on running !@#$^;
now public variable with lock protection is <938>
pid[3] is on running !@#$^;
now public variable with lock protection is <939>
pid[3] is on running !@#$^;
now public variable with lock protection is <940>
pid[3] is on running !@#$^;
now public variable with lock protection is <941>
pid[3] is on running !@#$^;
now public variable with lock protection is <942>
pid[3] is on running !@#$^;
now public variable with lock protection is <943>
pid[3] is on running !@#$^;
now public variable with lock protection is <944>
pid[3] is on running !@#$^;
now public variable with lock protection is <945>
pid[3] is on running !@#$^;
now public variable with lock protection is <946>
pid[3] is on running !@#$^;
now public variable with lock protection is <947>
pid[3] is on running !@#$^;
now public variable with lock protection is <948>
pid[3] is on running !@#$^;
now public variable with lock protection is <949>
pid[3] is on running !@#$^;
now public variable with lock protection is <950>
pid[3] is on running !@#$^;
now public variable with lock protection is <951>
pid[3] is on running !@#$^;
now public variable with lock protection is <952>
pid[3] is on running !@#$^;
now public variable with lock protection is <953>
pid[3] is on running !@#$^;
now public variable with lock protection is <pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
45;
now public variable with lock protection is <955>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <956>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <957>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <958>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <959>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <960>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <961>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <962>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <963>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <964>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <965>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <966>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <967>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <968>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <969>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <970>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <971>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <972>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <973>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with locpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
is <933>
pid[2] is on running abcde;
now public variable with lock protection is <975>
pid[2] is on running abcde;
now public variable with lock protection is <976>
pid[2] is on running abcde;
now public variable with lock protection is <977>
pid[2] is on running abcde;
now public variable with lock protection is <978>
pid[2] is on running abcde;
now public variable with lock protection is <979>
pid[2] is on running abcde;
now public variable with lock protection is <980>
pid[2] is on running abcde;
now public variable with lock protection is <981>
pid[2] is on running abcde;
now public variable with lock protection is <982>
pid[2] is on running abcde;
now public variable with lock protection is <983>
pid[2] is on running abcde;
now public variable with lock protection is <984>
pid[2] is on running abcde;
now public variable with lock protection is <985>
pid[2] is on running abcde;
now public variable with lock protection is <986>
pid[2] is on running abcde;
now public variable with lock protection is <987>
pid[2] is on running abcde;
now public variable with lock protection is <988>
pid[2] is on running abcde;
now public variable with lock protection is <989>
pid[2] is on running abcde;
now public variable with lock protection is <990>
pid[2] is on running abcde;
now public variable with lock protection is <991>
pid[2] is on running abcde;
now public variable with lock protection is <992>
pid[2] is on running abcde;
now public variable with lock protection is <993>
pid[2] is on running abcde;
now public variable with lock protection is <994>
pid[2] is on running abcde;
now public variable with lock protection is <995>
pid[2] is on running abcde;
now public variabpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
954>
pid[3] is on running !@#$^;
now public variable with lock protection is <997>
pid[3] is on running !@#$^;
now public variable with lock protection is <998>
pid[3] is on running !@#$^;
now public variable with lock protection is <999>
pid[3] is on running !@#$^;
now public variable with lock protection is <1000>
pid[3] is on running !@#$^;
now public variable with lock protection is <1001>
pid[3] is on running !@#$^;
now public variable with lock protection is <1002>
pid[3] is on running !@#$^;
now public variable with lock protection is <1003>
pid[3] is on running !@#$^;
now public variable with lock protection is <1004>
pid[3] is on running !@#$^;
now public variable with lock protection is <1005>
pid[3] is on running !@#$^;
now public variable with lock protection is <1006>
pid[3] is on running !@#$^;
now public variable with lock protection is <1007>
pid[3] is on running !@#$^;
now public variable with lock protection is <1008>
pid[3] is on running !@#$^;
now public variable with lock protection is <1009>
pid[3] is on running !@#$^;
now public variable with lock protection is <1010>
pid[3] is on running !@#$^;
now public variable with lock protection is <1011>
pid[3] is on running !@#$^;
now public variable with lock protection is <1012>
pid[3] is on running !@#$^;
now public variable with lock protection is <1013>
pid[3] is on running !@#$^;
now public variable with lock protection is <1014>
pid[3] is on running !@#$^;
now public variable with lock protection is <1015>
pid[3] is on running !@#$^;
now public variable with lock protection is <1016>
pid[3] is on runnpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel maipid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
k protection is <974>,2sstatus=22
pid[1] 12 is on running 12345;
now public variable with lock protection is <1017>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1018>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1019>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1020>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1021>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1022>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1023>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1024>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1025>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1026>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1027>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1028>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1029>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1030>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1031>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1032>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1033>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1034>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1035>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <1036>,2sstatus=22
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
le with lock protection is <996>
pid[2] is on running abcde;
now public variable with lock protection is <1037>
pid[2] is on running abcde;
now public variable with lock protection is <1038>
pid[2] is on running abcde;
now public variable with lock protection is <1039>
pid[2] is on running abcde;
now public variable with lock protection is <1040>
pid[2] is on running abcde;
now public variable with lock protection is <1041>
pid[2] is on running abcde;
now public variable with lock protection is <1042>
pid[2] is on running abcde;
now public variable with lock protection is <1043>
pid[2] is on running abcde;
now public variable with lock protection is <1044>
pid[2] is on running abcde;
now public variable with lock protection is <1045>
pid[2] is on running abcde;
now public variable with lock protection is <1046>
pid[2] is on running abcde;
now public variable with lock protection is <1047>
pid[2] is on running abcde;
now public variable with lock protection is <1048>
pid[2] is on running abcde;
now public variable with lock protection is <1049>
pid[2] is on running abcde;
now public variable with lock protection is <1050>
pid[2] is on running abcde;
now public variable with lock protection is <1051>
pid[2] is on running abcde;
now public variable with lock protection is <1052>
pid[2] is on running abcde;
now public variable with lock protection is <1053>
pid[2] is on running abcde;
now public variable with lock protection is <1054>
pid[2] is on running abcde;
now public variable with lock protection is <1055>
pid[2] is on running abcde;
now public variable with lock protection is <1056>
pid[2] is on running abcde;
now public variable with lock protection is <1057>
pid[2] is on running abcde;
now public variable with lock protection is <1058>
pid[2] is on running abcde;
nopid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
ing !@#$^;
now public variable with lock protection is <1060>
pid[3] is on running !@#$^;
now public variable with lock protection is <1061>
pid[3] is on running !@#$^;
now public variable with lock protection is <1062>
pid[3] is on running !@#$^;
now public variable with lock protection is <1063>
pid[3] is on running !@#$^;
now public variable with lock protection is <1064>
pid[3] is on running !@#$^;
now public variable with lock protection is <1065>
pid[3] is on running !@#$^;
now public variable with lock protection is <1066>
pid[3] is on running !@#$^;
now public variable with lock protection is <1067>
pid[3] is on running !@#$^;
now public variable with lock protection is <1068>
pid[3] is on running !@#$^;
now public variable with lock protection is <1069>
pid[3] is on running !@#$^;
now public variable with lock protection is <1070>
pid[3] is on running !@#$^;
now public variable with lock protection is <1071>
pid[3] is on running !@#$^;
now public variable with lock protection is <1072>
pid[3] is on running !@#$^;
now public variable with lock protection is <1073>
pid[3] is on running !@#$^;
now public variable with lock protection is <1074>
pid[3] is on running !@#$^;
now public variable with lock protection is <1075>
pid[3] is on running !@#$^;
now public variable with lock protection is <1076>
pid[3] is on running !@#$^;
now public variable with lock protection is <1077>
pid[3] is on running !@#$^;
now public variable with lock protection is <1078>
pid[3] is on running !@#$^;
now public variable with lock protection is <1079>
pid[3] is on running !@#$^;
now public variable with lock protection is <1080>
pid[3] is on running !@#$^;
now public variable with lock protection is <1081>
pid[3] is on running !@#$^;
now public variable with lock protection is <1082>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
pid[1] 1 is on running 12345;
now public variable with lock protection is <1084>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1085>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1086>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1087>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1088>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1089>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1090>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1091>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1092>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1093>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1094>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1095>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1096>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1097>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1098>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1099>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1100>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1101>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1102>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <1103>,2sstatus=22
pid[1pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
w public variable with lock protection is <1059>
pid[2] is on running abcde;
now public variable with lock protection is <1104>
pid[2] is on running abcde;
now public variable with lock protection is <1105>
pid[2] is on running abcde;
now public variable with lock protection is <1106>
pid[2] is on running abcde;
now public variable with lock protection is <1107>
pid[2] is on running abcde;
now public variable with lock protection is <1108>
pid[2] is on running abcde;
now public variable with lock protection is <1109>
pid[2] is on running abcde;
now public variable with lock protection is <1110>
pid[2] is on running abcde;
now public variable with lock protection is <1111>
pid[2] is on running abcde;
now public variable with lock protection is <1112>
pid[2] is on running abcde;
now public variable with lock protection is <1113>
pid[2] is on running abcde;
now public variable with lock protection is <1114>
pid[2] is on running abcde;
now public variable with lock protection is <1115>
pid[2] is on running abcde;
now public variable with lock protection is <1116>
pid[2] is on running abcde;
now public variable with lock protection is <1117>
pid[2] is on running abcde;
now public variable with lock protection is <1118>
pid[2] is on running abcde;
now public variable with lock protection is <1119>
pid[2] is on running abcde;
now public variable with lock protection is <1120>
pid[2] is on running abcde;
now public variable with lock protection is <1121>
pid[2] is on running abcde;
now public variable with lock protection is <1122>
pid[2] is on running abcde;
now public variable with lock protection is <1123>
pid[2] is on running abcde;
now public variable with lock protection is <1124>
pid[2] is on running abcde;
now public variable with lock protection is <1125>
pid[2pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <1125>
pid[3] is on running !@#$^;
now public variable with lock protection is <1126>
pid[3] is on running !@#$^;
now public variable with lock protection is <1127>
pid[3] is on running !@#$^;
now public variable with lock protection is <1128>
pid[3] is on running !@#$^;
now public variable with lock protection is <1129>
pid[3] is on running !@#$^;
now public variable with lock protection is <1130>
pid[3] is on running !@#$^;
now public variable with lock protection is <1131>
pid[3] is on running !@#$^;
now public variable with lock protection is <1132>
pid[3] is on running !@#$^;
now public variable with lock protection is <1133>
pid[3] is on running !@#$^;
now public variable with lock protection is <1134>
pid[3] is on running !@#$^;
now public variable with lock protection is <1135>
pid[3] is on running !@#$^;
now public variable with lock protection is <1136>
pid[3] is on running !@#$^;
now public variable with lock protection is <1137>
pid[3] is on running !@#$^;
now public variable with lock protection is <1138>
pid[3] is on running !@#$^;
now public variable with lock protection is <1139>
pid[3] is on running !@#$^;
now public variable with lock protection is <1140>
pid[3] is on running !@#$^;
now public variable with lock protection is <1141>
pid[3] is on running !@#$^;
now public variable with lock protection is <1142>
pid[3] is on running !@#$^;
now public variable with lock protection is <1143>
pid[3] is on running !@#$^;
now public variable with lock protection is <1144>
pid[3] is on running !@#$^;
now public variable with lock protection is <1145>
pid[3] is on running !@#$^;
now public variable with lock protection is <1146>
pid[3] is on running !@#$^;
now public variable with lock protection is <1147>
pid[3] is on running !@#$^;
now public variable with lock protection is <1148>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
] 1 is on running 12345;
now public variable with lock protection is <1149>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1150>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1151>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1152>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1153>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1154>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1155>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1156>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1157>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1158>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1159>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1160>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1161>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1162>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1163>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1164>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1165>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1166>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1167>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1168>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <1169>,2sstatus=22
pid[1] 1 is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
] is on running abcde;
now public variable with lock protection is <1170>
pid[2] is on running abcde;
now public variable with lock protection is <1171>
pid[2] is on running abcde;
now public variable with lock protection is <1172>
pid[2] is on running abcde;
now public variable with lock protection is <1173>
pid[2] is on running abcde;
now public variable with lock protection is <1174>
pid[2] is on running abcde;
now public variable with lock protection is <1175>
pid[2] is on running abcde;
now public variable with lock protection is <1176>
pid[2] is on running abcde;
now public variable with lock protection is <1177>
pid[2] is on running abcde;
now public variable with lock protection is <1178>
pid[2] is on running abcde;
now public variable with lock protection is <1179>
pid[2] is on running abcde;
now public variable with lock protection is <1180>
pid[2] is on running abcde;
now public variable with lock protection is <1181>
pid[2] is on running abcde;
now public variable with lock protection is <1182>
pid[2] is on running abcde;
now public variable with lock protection is <1183>
pid[2] is on running abcde;
now public variable with lock protection is <1184>
pid[2] is on running abcde;
now public variable with lock protection is <1185>
pid[2] is on running abcde;
now public variable with lock protection is <1186>
pid[2] is on running abcde;
now public variable with lock protection is <1187>
pid[2] is on running abcde;
now public variable with lock protection is <1188>
pid[2] is on running abcde;
now public variable with lock protection is <1189>
pid[2] is on running abcde;
now public variable with lock protection is <1190>
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
pid[3] is on running !@#$^;
now public variable with lock protection is <1191>
pid[3] is on running !@#$^;
now public variable with lock protection is <1192>
pid[3] is on running !@#$^;
now public variable with lock protection is <1193>
pid[3] is on running !@#$^;
now public variable with lock protection is <1194>
pid[3] is on running !@#$^;
now public variable with lock protection is <1195>
pid[3] is on running !@#$^;
now public variable with lock protection is <1196>
pid[3] is on running !@#$^;
now public variable with lock protection is <1197>
pid[3] is on running !@#$^;
now public variable with lock protection is <1198>
pid[3] is on running !@#$^;
now public variable with lock protection is <1199>
pid[3] is on running !@#$^;
now public variable with lock protection is <1200>
pid[3] is on running !@#$^;
now public variable with lock protection is <1201>
pid[3] is on running !@#$^;
now public variable with lock protection is <1202>
pid[3] is on running !@#$^;
now public variable with lock protection is <1203>
pid[3] is on running !@#$^;
now public variable with lock protection is <1204>
pid[3] is on running !@#$^;
now public variable with lock protection is <1205>
pid[3] is on running !@#$^;
now public variable with lock protection is <1206>
pid[3] is on running !@#$^;
now public variable with lock protection is <1207>
pid[3] is on running !@#$^;
now public variable with lock protection is <1208>
pid[3] is on running !@#$^;
now public variable with lock protection is <1209>
pid[3] is on running !@#$^;
now public variable with lock protection is <1210>
pid[3] is on running !@#$^;
now public variable with lock protection is <1211>
pid[3] is on running !@#$^;
now public variable with lock protection is <1212>
pid[3] is on running !@#$^;
now public variable with lock protection is <1213>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
now public variable with lock protection is <1214>,2sstatus=22
pid[1] 12 is on running 12345;
now public variable with lock protection is <1215>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1216>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1217>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1218>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1219>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1220>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1221>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1222>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1223>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1224>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1225>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1226>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1227>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1228>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1229>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1230>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1231>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1232>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1233>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protectpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
pid[2] is on running abcde;
now public variable with lock protection is <1235>
pid[2] is on running abcde;
now public variable with lock protection is <1236>
pid[2] is on running abcde;
now public variable with lock protection is <1237>
pid[2] is on running abcde;
now public variable with lock protection is <1238>
pid[2] is on running abcde;
now public variable with lock protection is <1239>
pid[2] is on running abcde;
now public variable with lock protection is <1240>
pid[2] is on running abcde;
now public variable with lock protection is <1241>
pid[2] is on running abcde;
now public variable with lock protection is <1242>
pid[2] is on running abcde;
now public variable with lock protection is <1243>
pid[2] is on running abcde;
now public variable with lock protection is <1244>
pid[2] is on running abcde;
now public variable with lock protection is <1245>
pid[2] is on running abcde;
now public variable with lock protection is <1246>
pid[2] is on running abcde;
now public variable with lock protection is <1247>
pid[2] is on running abcde;
now public variable with lock protection is <1248>
pid[2] is on running abcde;
now public variable with lock protection is <1249>
pid[2] is on running abcde;
now public variable with lock protection is <1250>
pid[2] is on running abcde;
now public variable with lock protection is <1251>
pid[2] is on running abcde;
now public variable with lock protection is <1252>
pid[2] is on running abcde;
now public variable with lock protection is <1253>
pid[2] is on running abcde;
now public variable with lock protection is <1254>
pid[2] is on running abcde;
now public variable with lock protection is <1255>
pid[2] is on running abcde;
now public variable with lock protection is <1256>
pid[2] is on running abcde;
now public variable with lock protection is <1257>
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
pid[3] is on running !@#$^;
now public variable with lock protection is <1258>
pid[3] is on running !@#$^;
now public variable with lock protection is <1259>
pid[3] is on running !@#$^;
now public variable with lock protection is <1260>
pid[3] is on running !@#$^;
now public variable with lock protection is <1261>
pid[3] is on running !@#$^;
now public variable with lock protection is <1262>
pid[3] is on running !@#$^;
now public variable with lock protection is <1263>
pid[3] is on running !@#$^;
now public variable with lock protection is <1264>
pid[3] is on running !@#$^;
now public variable with lock protection is <1265>
pid[3] is on running !@#$^;
now public variable with lock protection is <1266>
pid[3] is on running !@#$^;
now public variable with lock protection is <1267>
pid[3] is on running !@#$^;
now public variable with lock protection is <1268>
pid[3] is on running !@#$^;
now public variable with lock protection is <1269>
pid[3] is on running !@#$^;
now public variable with lock protection is <1270>
pid[3] is on running !@#$^;
now public variable with lock protection is <1271>
pid[3] is on running !@#$^;
now public variable with lock protection is <1272>
pid[3] is on running !@#$^;
now public variable with lock protection is <1273>
pid[3] is on running !@#$^;
now public variable with lock protection is <1274>
pid[3] is on running !@#$^;
now public variable with lock protection is <1275>
pid[3] is on running !@#$^;
now public variable with lock protection is <1276>
pid[3] is on running !@#$^;
now public variable with lock protection is <1277>
pid[3] is on running !@#$^;
now public variable with lock protection is <1278>
pid[3] is on running !@#$^;
now public variable with lock protection is <1279>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
ion is <1234>,2sstatus=22
pid[1] 12 is on running 12345;
now public variable with lock protection is <1280>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1281>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1282>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1283>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1284>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1285>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1286>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1287>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1288>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1289>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1290>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1291>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1292>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1293>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1294>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1295>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1296>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1297>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <1298>,2sstatus=22
pid[1] 1 is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
pid[2] is on running abcde;
now public variable with lock protection is <1300>
pid[2] is on running abcde;
now public variable with lock protection is <1301>
pid[2] is on running abcde;
now public variable with lock protection is <1302>
pid[2] is on running abcde;
now public variable with lock protection is <1303>
pid[2] is on running abcde;
now public variable with lock protection is <1304>
pid[2] is on running abcde;
now public variable with lock protection is <1305>
pid[2] is on running abcde;
now public variable with lock protection is <1306>
pid[2] is on running abcde;
now public variable with lock protection is <1307>
pid[2] is on running abcde;
now public variable with lock protection is <1308>
pid[2] is on running abcde;
now public variable with lock protection is <1309>
pid[2] is on running abcde;
now public variable with lock protection is <1310>
pid[2] is on running abcde;
now public variable with lock protection is <1311>
pid[2] is on running abcde;
now public variable with lock protection is <1312>
pid[2] is on running abcde;
now public variable with lock protection is <1313>
pid[2] is on running abcde;
now public variable with lock protection is <1314>
pid[2] is on running abcde;
now public variable with lock protection is <1315>
pid[2] is on running abcde;
now public variable with lock protection is <1316>
pid[2] is on running abcde;
now public variable with lock protection is <1317>
pid[2] is on running abcde;
now public variable with lock protection is <1318>
pid[2] is on running abcde;
now public variable with lock protection is <1319>
pid[2] is on running abcde;
now public variable with lock protection is <1320>
pid[2] is on running abcde;
now public variable with lock protection is <1321>
pid[2] is on running abcde;
now public variable with lock protection is <1322>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
pid[3] is on running !@#$^;
now public variable with lock protection is <1323>
pid[3] is on running !@#$^;
now public variable with lock protection is <1324>
pid[3] is on running !@#$^;
now public variable with lock protection is <1325>
pid[3] is on running !@#$^;
now public variable with lock protection is <1326>
pid[3] is on running !@#$^;
now public variable with lock protection is <1327>
pid[3] is on running !@#$^;
now public variable with lock protection is <1328>
pid[3] is on running !@#$^;
now public variable with lock protection is <1329>
pid[3] is on running !@#$^;
now public variable with lock protection is <1330>
pid[3] is on running !@#$^;
now public variable with lock protection is <1331>
pid[3] is on running !@#$^;
now public variable with lock protection is <1332>
pid[3] is on running !@#$^;
now public variable with lock protection is <1333>
pid[3] is on running !@#$^;
now public variable with lock protection is <1334>
pid[3] is on running !@#$^;
now public variable with lock protection is <1335>
pid[3] is on running !@#$^;
now public variable with lock protection is <1336>
pid[3] is on running !@#$^;
now public variable with lock protection is <1337>
pid[3] is on running !@#$^;
now public variable with lock protection is <1338>
pid[3] is on running !@#$^;
now public variable with lock protection is <1339>
pid[3] is on running !@#$^;
now public variable with lock protection is <1340>
pid[3] is on running !@#$^;
now public variable with lock protection is <1341>
pid[3] is on running !@#$^;
now public variable with lock protection is <1342>
pid[3] is on running !@#$^;
now public variable with lock protection is <1343>
pid[3] is on running !@#$^;
now public variable with lock protection is <1344>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
now public variable with lock protection is <1344>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1345>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1346>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1347>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1348>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1349>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1350>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1351>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1352>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1353>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1354>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1355>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1356>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1357>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1358>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1359>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1360>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1361>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1362>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protection is <1363>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <1365>
pid[2] is on running abcde;
now public variable with lock protection is <1366>
pid[2] is on running abcde;
now public variable with lock protection is <1367>
pid[2] is on running abcde;
now public variable with lock protection is <1368>
pid[2] is on running abcde;
now public variable with lock protection is <1369>
pid[2] is on running abcde;
now public variable with lock protection is <1370>
pid[2] is on running abcde;
now public variable with lock protection is <1371>
pid[2] is on running abcde;
now public variable with lock protection is <1372>
pid[2] is on running abcde;
now public variable with lock protection is <1373>
pid[2] is on running abcde;
now public variable with lock protection is <1374>
pid[2] is on running abcde;
now public variable with lock protection is <1375>
pid[2] is on running abcde;
now public variable with lock protection is <1376>
pid[2] is on running abcde;
now public variable with lock protection is <1377>
pid[2] is on running abcde;
now public variable with lock protection is <1378>
pid[2] is on running abcde;
now public variable with lock protection is <1379>
pid[2] is on running abcde;
now public variable with lock protection is <1380>
pid[2] is on running abcde;
now public variable with lock protection is <1381>
pid[2] is on running abcde;
now public variable with lock protection is <1382>
pid[2] is on running abcde;
now public variable with lock protection is <1383>
pid[2] is on running abcde;
now public variable with lock protection is <1384>
pid[2] is on running abcde;
now public variable with lock protection is <1385>
pid[2] is on running abcde;
now public variable with lock protection is <1386>
pid[2] is on running abcde;
now public variable with lock protection is <1387>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <1388>
pid[3] is on running !@#$^;
now public variable with lock protection is <1389>
pid[3] is on running !@#$^;
now public variable with lock protection is <1390>
pid[3] is on running !@#$^;
now public variable with lock protection is <1391>
pid[3] is on running !@#$^;
now public variable with lock protection is <1392>
pid[3] is on running !@#$^;
now public variable with lock protection is <1393>
pid[3] is on running !@#$^;
now public variable with lock protection is <1394>
pid[3] is on running !@#$^;
now public variable with lock protection is <1395>
pid[3] is on running !@#$^;
now public variable with lock protection is <1396>
pid[3] is on running !@#$^;
now public variable with lock protection is <1397>
pid[3] is on running !@#$^;
now public variable with lock protection is <1398>
pid[3] is on running !@#$^;
now public variable with lock protection is <1399>
pid[3] is on running !@#$^;
now public variable with lock protection is <1400>
pid[3] is on running !@#$^;
now public variable with lock protection is <1401>
pid[3] is on running !@#$^;
now public variable with lock protection is <1402>
pid[3] is on running !@#$^;
now public variable with lock protection is <1403>
pid[3] is on running !@#$^;
now public variable with lock protection is <1404>
pid[3] is on running !@#$^;
now public variable with lock protection is <1405>
pid[3] is on running !@#$^;
now public variable with lock protection is <1406>
pid[3] is on running !@#$^;
now public variable with lock protection is <1407>
pid[3] is on running !@#$^;
now public variable with lock protection is <1408>
pid[3] is on running !@#$^;
now public variable with lock protection is <1409>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid[0],In kernel main thread now,sstatus=122
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 next pid[1] reset pgdir
lock protection is <1364>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1410>,2sstatus=22
pid[1] 11 is on running 12345;
now public variable with lock protection is <1411>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1412>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1413>,2sstatus=22
pid[1] 10 is on running 12345;
now public variable with lock protection is <1414>,2sstatus=22
pid[1] 9 is on running 12345;
now public variable with lock protection is <1415>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1416>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1417>,2sstatus=22
pid[1] 8 is on running 12345;
now public variable with lock protection is <1418>,2sstatus=22
pid[1] 7 is on running 12345;
now public variable with lock protection is <1419>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1420>,2sstatus=22
pid[1] 6 is on running 12345;
now public variable with lock protection is <1421>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1422>,2sstatus=22
pid[1] 5 is on running 12345;
now public variable with lock protection is <1423>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1424>,2sstatus=22
pid[1] 4 is on running 12345;
now public variable with lock protection is <1425>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1426>,2sstatus=22
pid[1] 3 is on running 12345;
now public variable with lock protection is <1427>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1428>,2sstatus=22
pid[1] 2 is on running 12345;
now public variable with lock protection is <1429>,2sstatus=22
pid[1] 1 is on running 12345;
now public variable with lock protectipid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 next pid[2] reset pgdir
now public variable with lock protection is <1431>
pid[2] is on running abcde;
now public variable with lock protection is <1432>
pid[2] is on running abcde;
now public variable with lock protection is <1433>
pid[2] is on running abcde;
now public variable with lock protection is <1434>
pid[2] is on running abcde;
now public variable with lock protection is <1435>
pid[2] is on running abcde;
now public variable with lock protection is <1436>
pid[2] is on running abcde;
now public variable with lock protection is <1437>
pid[2] is on running abcde;
now public variable with lock protection is <1438>
pid[2] is on running abcde;
now public variable with lock protection is <1439>
pid[2] is on running abcde;
now public variable with lock protection is <1440>
pid[2] is on running abcde;
now public variable with lock protection is <1441>
pid[2] is on running abcde;
now public variable with lock protection is <1442>
pid[2] is on running abcde;
now public variable with lock protection is <1443>
pid[2] is on running abcde;
now public variable with lock protection is <1444>
pid[2] is on running abcde;
now public variable with lock protection is <1445>
pid[2] is on running abcde;
now public variable with lock protection is <1446>
pid[2] is on running abcde;
now public variable with lock protection is <1447>
pid[2] is on running abcde;
now public variable with lock protection is <1448>
pid[2] is on running abcde;
now public variable with lock protection is <1449>
pid[2] is on running abcde;
now public variable with lock protection is <1450>
pid[2] is on running abcde;
now public variable with lock protection is <1451>
pid[2] is on running abcde;
now public variable with lock protection is <1452>
pid[2] is on running abcde;
now public variable with lock protection is <1453>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 next pid[3] reset pgdir
now public variable with lock protection is <1454>
pid[3] is on running !@#$^;
now public variable with lock protection is <1455>
pid[3] is on running !@#$^;
now public variable with lock protection is <1456>
pid[3] is on running !@#$^;
now public variable with lock protection is <1457>
pid[3] is on running !@#$^;
now public variable with lock protection is <1458>
pid[3] is on running !@#$^;
now public variable with lock protection is <1459>
pid[3] is on running !@#$^;
now public variable with lock protection is <1460>
pid[3] is on running !@#$^;
now public variable with lock protection is <1461>
pid[3] is on running !@#$^;
now public variable with lock protection is <1462>
pid[3] is on running !@#$^;
now public variable with lock protection is <1463>
pid[3] is on running !@#$^;
now public variable with lock protection is <1464>
pid[3] is on running !@#$^;
now public variable with lock protection is <1465>
pid[3] is on running !@#$^;
now public variable with lock protection is <1466>
pid[3] is on running !@#$^;
now public variable with lock protection is <1467>
pid[3] is on running !@#$^;
now public variable with lock protection is <1468>
pid[3] is on running !@#$^;
now public variable with lock protection is <1469>
pid[3] is on running !@#$^;
now public variable with lock protection is <1470>
pid[3] is on running !@#$^;
now public variable with lock protection is <1471>
pid[3] is on running !@#$^;
now public variable with lock protection is <1472>
pid[3] is on running !@#$^;
now public variable with lock protection is <1473>
pid[3] is on running !@#$^;
now public variable with lockQEMU: Terminated
