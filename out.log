运行内核: kernel.elf, 所有输出将在下方显示
首先按下 Ctrl+A, 然后按下 X 键以退出 QEMU
你可以运行 `make debug-gdb` 以使用 GDB 调试内核
或者运行 `make debug-vscode` 以使用 VSCode 链接 QEMU 调试内核
----------------------------------------------------------------------------
`YMM'   `MP'      `7MMF'     A     `7MF'             .M"""bgd `7MM"""Yp, `7MMF'
  VMb.  ,P          `MA     ,MA     ,V              ,MI    "Y   MM    Yb   MM  
   `MM.M'     pd*"*b.VM:   ,VVM:   ,V               `MMb.       MM    dP   MM  
     MMb     (O)   j8 MM.  M' MM.  M'   **********    `YMMNq.   MM"""bg.   MM  
   ,M'`Mb.       ,;j9 `MM A'  `MM A'                .     `MM   MM    `Y   MM  
  ,P   `MM.   ,-='     :MM;    :MM;                 Mb     dM   MM    ,9   MM  
.MM:.  .:MMa.Ammmmmmm   VF      VF                  P"Ybmmd"  .JMMmmmd9  .JMML.

Copyright Shihong Wang, Shaofei Wang, Zhuiri Xiao (c) 2023 with GNU Public License V3.0
Enjoy!
============================================================
Enter SBI!
SBI init!
=> strap_init
=> secall_init
=> delegate_traps
=> stimer_init
Jump to kernel!
============================================================
In kernel!
Kernel init!
=> ktrap_init
=> ktimer_init
=> local_interrupt_enable
Memory: 14264KB available, 3566 free pages, phy_start_address=0x80212000

*************successfully initialize kernel_pool and user_pool***********
Start testing!
============================================================
X2W-OS Image Layout:
  kernel: 0x80200000 - 0x80211148 ( 69960 B)
  .text.boot: 0x80200000 - 0x80200028 (    40 B)
       .text: 0x80200028 - 0x80209000 ( 36824 B)
     .rodata: 0x80209000 - 0x8020a99a (  6554 B)
       .data: 0x8020a99a - 0x80210000 ( 22118 B)
        .bss: 0x80210000 - 0x80211148 (  4424 B)
============================================================
Kernel Hanging Here!
fetch a pid=1
!!------------------!!
bitmap start from 0x8049000
---thread pid[1] bitmap alloc successfully!!!---
append p->runlist=8048098
ready_task_num=1
fetch a pid=2
!!------------------!!
bitmap start from 0x804b000
---thread pid[2] bitmap alloc successfully!!!---
append p->runlist=804a098
ready_task_num=2
fetch a pid=3
!!------------------!!
bitmap start from 0x804d000
---thread pid[3] bitmap alloc successfully!!!---
append p->runlist=804c098
ready_task_num=3
00ci0w-acvjd
pid:1,2,3
append p->runlist=8020d098
ready_task_num=4
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 welcome to kernel stage .2
now public variable with lock protection is <1>
pid[1] is on running 12345;
now public variable with lock protection is <2>
pid[1] is on running 12345;
now public variable with lock protection is <3>
pid[1] is on running 12345;
now public variable with lock protection is <4>
pid[1] is on running 12345;
now public variable with lock protection is <5>
pid[1] is on running 12345;
now public variable with lock protection is <6>
pid[1] is on running 12345;
now public variable with lock protection is <7>
pid[1] is on running 12345;
now public variable with lock protection is <8>
pid[1] is on running 12345;
now public variable with lock protection is <9>
pid[1] is on running 12345;
now public variable with lock protectiopid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 welcome to kernel stage 3
now public variable with lock protection is <11>
pid[2] is on running abcde;
now public variable with lock protection is <12>
pid[2] is on running abcde;
now public variable with lock protection is <13>
pid[2] is on running abcde;
now public variable with lock protection is <14>
pid[2] is on running abcde;
now public variable with lock protection is <15>
pid[2] is on running abcde;
now public variable with lock protection is <16>
pid[2] is on running abcde;
now public variable with lock protection is <17>
pid[2] is on running abcde;
now public variable with lock protection is <18>
pid[2] is on running abcde;
now public variable with lock protection is <19>
pid[2] is on running abcde;
now public variable with lock protection is <20>
pid[2] is on runnipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 welcome to kernel stage 3
now public variable with lock protection is <21>
pid[3] is on running !@#$^;
now public variable with lock protection is <22>
pid[3] is on running !@#$^;
now public variable with lock protection is <23>
pid[3] is on running !@#$^;
now public variable with lock protection is <24>
pid[3] is on running !@#$^;
now public variable with lock protection is <25>
pid[3] is on running !@#$^;
now public variable with lock protection is <26>
pid[3] is on running !@#$^;
now public variable with lock protection is <27>
pid[3] is on running !@#$^;
now public variable with lock protection is <28>
pid[3] is on running !@#$^;
now public variable with lock protection is <29>
pid[3] is on running !@#$^;
now public variable with lock protection pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 n is <10>
pid[1] is on running 12345;
now public variable with lock protection is <31>
pid[1] is on running 12345;
now public variable with lock protection is <32>
pid[1] is on running 12345;
now public variable with lock protection is <33>
pid[1] is on running 12345;
now public variable with lock protection is <34>
pid[1] is on running 12345;
now public variable with lock protection is <35>
pid[1] is on running 12345;
now public variable with lock protection is <36>
pid[1] is on running 12345;
now public variable with lock protection is <37>
pid[1] is on running 12345;
now public variable with lock protection is <38>
pid[1] is on running 12345;
now public variable with lock protection is <39>
pid[1] is on running 12345;
now public variable with lock protection is <40>
pid[1] is on running 12345;
now publipid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ng abcde;
now public variable with lock protection is <42>
pid[2] is on running abcde;
now public variable with lock protection is <43>
pid[2] is on running abcde;
now public variable with lock protection is <44>
pid[2] is on running abcde;
now public variable with lock protection is <45>
pid[2] is on running abcde;
now public variable with lock protection is <46>
pid[2] is on running abcde;
now public variable with lock protection is <47>
pid[2] is on running abcde;
now public variable with lock protection is <48>
pid[2] is on running abcde;
now public variable with lock protection is <49>
pid[2] is on running abcde;
now public variable with lock protection is <50>
pid[2] is on running abcde;
now public variable with lock protection is <51>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 is <30>
pid[3] is on running !@#$^;
now public variable with lock protection is <53>
pid[3] is on running !@#$^;
now public variable with lock protection is <54>
pid[3] is on running !@#$^;
now public variable with lock protection is <55>
pid[3] is on running !@#$^;
now public variable with lock protection is <56>
pid[3] is on running !@#$^;
now public variable with lock protection is <57>
pid[3] is on running !@#$^;
now public variable with lock protection is <58>
pid[3] is on running !@#$^;
now public variable with lock protection is <59>
pid[3] is on running !@#$^;
now public variable with lock protection is <60>
pid[3] is on running !@#$^;
now public variable with lock protection is <61>
pid[3] is on running !@#$^;
now public variable with lock protection is <62>
pid[3] is on running !@#$^;
now public variable with lock protection is <63>
pid[3] is on running !@#$^;
pid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernepid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 c variable with lock protection is <41>
pid[1] is on running 12345;
now public variable with lock protection is <64>
pid[1] is on running 12345;
now public variable with lock protection is <65>
pid[1] is on running 12345;
now public variable with lock protection is <66>
pid[1] is on running 12345;
now public variable with lock protection is <67>
pid[1] is on running 12345;
now public variable with lock protection is <68>
pid[1] is on running 12345;
now public variable with lock protection is <69>
pid[1] is on running 12345;
now public variable with lock protection is <70>
pid[1] is on running 12345;
now public variable with lock protection is <71>
pid[1] is on running 12345;
now public variable with lock protection is <72>
pid[1] is on running 12345;
now public variable with lock protection is <73>
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <52>
pid[2] is on running abcde;
now public variable with lock protection is <74>
pid[2] is on running abcde;
now public variable with lock protection is <75>
pid[2] is on running abcde;
now public variable with lock protection is <76>
pid[2] is on running abcde;
now public variable with lock protection is <77>
pid[2] is on running abcde;
now public variable with lock protection is <78>
pid[2] is on running abcde;
now public variable with lock protection is <79>
pid[2] is on running abcde;
now public variable with lock protection is <80>
pid[2] is on running abcde;
now public variable with lock protection is <81>
pid[2] is on running abcde;
now public variable with lock protection is <82>
pid[2] is on running abcde;
now public variable with lock protection is <83>
pid[2] is on running abcde;
now public variablpid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <85>
pid[3] is on running !@#$^;
now public variable with lock protection is <86>
pid[3] is on running !@#$^;
now public variable with lock protection is <87>
pid[3] is on running !@#$^;
now public variable with lock protection is <88>
pid[3] is on running !@#$^;
now public variable with lock protection is <89>
pid[3] is on running !@#$^;
now public variable with lock protection is <90>
pid[3] is on running !@#$^;
now public variable with lock protection is <91>
pid[3] is on running !@#$^;
now public variable with lock protection is <92>
pid[3] is on running !@#$^;
now public variable with lock protection is <93>
pid[3] is on running !@#$^;
now public variable with lock protection is <94>
pid[3] is on running !@#$pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 l main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 pid[1] is on running 12345;
now public variable with lock protection is <95>
pid[1] is on running 12345;
now public variable with lock protection is <96>
pid[1] is on running 12345;
now public variable with lock protection is <97>
pid[1] is on running 12345;
now public variable with lock protection is <98>
pid[1] is on running 12345;
now public variable with lock protection is <99>
pid[1] is on running 12345;
now public variable with lock protection is <100>
pid[1] is on running 12345;
now public variable with lock protection is <101>
pid[1] is on running 12345;
now public variable with lock protection is <102>
pid[1] is on running 12345;
now public variable with lock protection is <103>
pid[1] is on running 12345;
now public variable with lock protection is <104>
pid[1] is on running 12345;
now public variable wpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 e with lock protection is <84>
pid[2] is on running abcde;
now public variable with lock protection is <106>
pid[2] is on running abcde;
now public variable with lock protection is <107>
pid[2] is on running abcde;
now public variable with lock protection is <108>
pid[2] is on running abcde;
now public variable with lock protection is <109>
pid[2] is on running abcde;
now public variable with lock protection is <110>
pid[2] is on running abcde;
now public variable with lock protection is <111>
pid[2] is on running abcde;
now public variable with lock protection is <112>
pid[2] is on running abcde;
now public variable with lock protection is <113>
pid[2] is on running abcde;
now public variable with lock protection is <114>
pid[2] is on running abcde;
now public variable with lock protection is <1pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ^;
now public variable with lock protection is <116>
pid[3] is on running !@#$^;
now public variable with lock protection is <117>
pid[3] is on running !@#$^;
now public variable with lock protection is <118>
pid[3] is on running !@#$^;
now public variable with lock protection is <119>
pid[3] is on running !@#$^;
now public variable with lock protection is <120>
pid[3] is on running !@#$^;
now public variable with lock protection is <121>
pid[3] is on running !@#$^;
now public variable with lock protection is <122>
pid[3] is on running !@#$^;
now public variable with lock protection is <123>
pid[3] is on running !@#$^;
now public variable with lock protection is <124>
pid[3] is on running !@#$^;
now public variable with lock protection is <125>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread npid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ith lock protection is <105>
pid[1] is on running 12345;
now public variable with lock protection is <127>
pid[1] is on running 12345;
now public variable with lock protection is <128>
pid[1] is on running 12345;
now public variable with lock protection is <129>
pid[1] is on running 12345;
now public variable with lock protection is <130>
pid[1] is on running 12345;
now public variable with lock protection is <131>
pid[1] is on running 12345;
now public variable with lock protection is <132>
pid[1] is on running 12345;
now public variable with lock protection is <133>
pid[1] is on running 12345;
now public variable with lock protection is <134>
pid[1] is on running 12345;
now public variable with lock protection is <135>
pid[1] is on running 12345;
now public variable with lock protection is <136>
pid[1] is on running 12345;
now publicpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 15>
pid[2] is on running abcde;
now public variable with lock protection is <138>
pid[2] is on running abcde;
now public variable with lock protection is <139>
pid[2] is on running abcde;
now public variable with lock protection is <140>
pid[2] is on running abcde;
now public variable with lock protection is <141>
pid[2] is on running abcde;
now public variable with lock protection is <142>
pid[2] is on running abcde;
now public variable with lock protection is <143>
pid[2] is on running abcde;
now public variable with lock protection is <144>
pid[2] is on running abcde;
now public variable with lock protection is <145>
pid[2] is on running abcde;
now public variable with lock protection is <146>
pid[2] is on running abcde;
now public variable with lock protectipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <147>
pid[3] is on running !@#$^;
now public variable with lock protection is <148>
pid[3] is on running !@#$^;
now public variable with lock protection is <149>
pid[3] is on running !@#$^;
now public variable with lock protection is <150>
pid[3] is on running !@#$^;
now public variable with lock protection is <151>
pid[3] is on running !@#$^;
now public variable with lock protection is <152>
pid[3] is on running !@#$^;
now public variable with lock protection is <153>
pid[3] is on running !@#$^;
now public variable with lock protection is <154>
pid[3] is on running !@#$^;
now public variable with lock protection is <155>
pid[3] is on running !@#$^;
now public variable with lock protection is <156>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ow
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  variable with lock protection is <137>
pid[1] is on running 12345;
now public variable with lock protection is <158>
pid[1] is on running 12345;
now public variable with lock protection is <159>
pid[1] is on running 12345;
now public variable with lock protection is <160>
pid[1] is on running 12345;
now public variable with lock protection is <161>
pid[1] is on running 12345;
now public variable with lock protection is <162>
pid[1] is on running 12345;
now public variable with lock protection is <163>
pid[1] is on running 12345;
now public variable with lock protection is <164>
pid[1] is on running 12345;
now public variable with lock protection is <165>
pid[1] is on running 12345;
now public variable with lock protection is <166>
pid[1] is on running 12345;
now public variable with lock protection is <167>
pid[1] is on running 1234pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 on is <147>
pid[2] is on running abcde;
now public variable with lock protection is <168>
pid[2] is on running abcde;
now public variable with lock protection is <169>
pid[2] is on running abcde;
now public variable with lock protection is <170>
pid[2] is on running abcde;
now public variable with lock protection is <171>
pid[2] is on running abcde;
now public variable with lock protection is <172>
pid[2] is on running abcde;
now public variable with lock protection is <173>
pid[2] is on running abcde;
now public variable with lock protection is <174>
pid[2] is on running abcde;
now public variable with lock protection is <175>
pid[2] is on running abcde;
now public variable with lock protection is <176>
pid[2] is on running abcde;
now public varipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <157>
pid[3] is on running !@#$^;
now public variable with lock protection is <178>
pid[3] is on running !@#$^;
now public variable with lock protection is <179>
pid[3] is on running !@#$^;
now public variable with lock protection is <180>
pid[3] is on running !@#$^;
now public variable with lock protection is <181>
pid[3] is on running !@#$^;
now public variable with lock protection is <182>
pid[3] is on running !@#$^;
now public variable with lock protection is <183>
pid[3] is on running !@#$^;
now public variable with lock protection is <184>
pid[3] is on running !@#$^;
now public variable with lock protection is <185>
pid[3] is on running !@#$^;
now public variable with lock protection is <186>
pid[3] is on running !@#$^;
now public variable with lock protectpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 5;
now public variable with lock protection is <188>
pid[1] is on running 12345;
now public variable with lock protection is <189>
pid[1] is on running 12345;
now public variable with lock protection is <190>
pid[1] is on running 12345;
now public variable with lock protection is <191>
pid[1] is on running 12345;
now public variable with lock protection is <192>
pid[1] is on running 12345;
now public variable with lock protection is <193>
pid[1] is on running 12345;
now public variable with lock protection is <194>
pid[1] is on running 12345;
now public variable with lock protection is <195>
pid[1] is on running 12345;
now public variable with lock protection is <196>
pid[1] is on running 12345;
now public variable with lock protection is <197>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 able with lock protection is <177>
pid[2] is on running abcde;
now public variable with lock protection is <198>
pid[2] is on running abcde;
now public variable with lock protection is <199>
pid[2] is on running abcde;
now public variable with lock protection is <200>
pid[2] is on running abcde;
now public variable with lock protection is <201>
pid[2] is on running abcde;
now public variable with lock protection is <202>
pid[2] is on running abcde;
now public variable with lock protection is <203>
pid[2] is on running abcde;
now public variable with lock protection is <204>
pid[2] is on running abcde;
now public variable with lock protection is <205>
pid[2] is on running abcde;
now public variable with lock protection is <206>
pid[2] is on running abcde;
now public variable with lock protection is <207>
pid[2] is on running pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ion is <187>
pid[3] is on running !@#$^;
now public variable with lock protection is <208>
pid[3] is on running !@#$^;
now public variable with lock protection is <209>
pid[3] is on running !@#$^;
now public variable with lock protection is <210>
pid[3] is on running !@#$^;
now public variable with lock protection is <211>
pid[3] is on running !@#$^;
now public variable with lock protection is <212>
pid[3] is on running !@#$^;
now public variable with lock protection is <213>
pid[3] is on running !@#$^;
now public variable with lock protection is <214>
pid[3] is on running !@#$^;
now public variable with lock protection is <215>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel maipid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <216>
pid[1] is on running 12345;
now public variable with lock protection is <217>
pid[1] is on running 12345;
now public variable with lock protection is <218>
pid[1] is on running 12345;
now public variable with lock protection is <219>
pid[1] is on running 12345;
now public variable with lock protection is <220>
pid[1] is on running 12345;
now public variable with lock protection is <221>
pid[1] is on running 12345;
now public variable with lock protection is <222>
pid[1] is on running 12345;
now public variable with lock protection is <223>
pid[1] is on running 12345;
now public variable with lock protection is <224>
pid[1] is on running 12345;
now public variable with lock protection is <225>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 abcde;
now public variable with lock protection is <227>
pid[2] is on running abcde;
now public variable with lock protection is <228>
pid[2] is on running abcde;
now public variable with lock protection is <229>
pid[2] is on running abcde;
now public variable with lock protection is <230>
pid[2] is on running abcde;
now public variable with lock protection is <231>
pid[2] is on running abcde;
now public variable with lock protection is <232>
pid[2] is on running abcde;
now public variable with lock protection is <233>
pid[2] is on running abcde;
now public variable with lock protection is <234>
pid[2] is on running abcde;
now public variable with lock protection is <235>
pid[2] is on running abcde;
now public variable with lock protection is <236>
pid[2] is on running abcde;
now public variapid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 pid[3] is on running !@#$^;
now public variable with lock protection is <238>
pid[3] is on running !@#$^;
now public variable with lock protection is <239>
pid[3] is on running !@#$^;
now public variable with lock protection is <240>
pid[3] is on running !@#$^;
now public variable with lock protection is <241>
pid[3] is on running !@#$^;
now public variable with lock protection is <242>
pid[3] is on running !@#$^;
now public variable with lock protection is <243>
pid[3] is on running !@#$^;
now public variable with lock protection is <244>
pid[3] is on running !@#$^;
now public variable with lock protection is <245>
pid[3] is on running !@#$^;
now public variable with lock protection is <246>
pid[3] is on running !@#$^;
now pubpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel maipid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <247>
pid[1] is on running 12345;
now public variable with lock protection is <248>
pid[1] is on running 12345;
now public variable with lock protection is <249>
pid[1] is on running 12345;
now public variable with lock protection is <250>
pid[1] is on running 12345;
now public variable with lock protection is <251>
pid[1] is on running 12345;
now public variable with lock protection is <252>
pid[1] is on running 12345;
now public variable with lock protection is <253>
pid[1] is on running 12345;
now public variable with lock protection is <254>
pid[1] is on running 12345;
now public variable with lock protection is <255>
pid[1] is on running 12345;
now public variable with lock protection is <256>
pid[1] is on running 12345;
now public variablepid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ble with lock protection is <237>
pid[2] is on running abcde;
now public variable with lock protection is <258>
pid[2] is on running abcde;
now public variable with lock protection is <259>
pid[2] is on running abcde;
now public variable with lock protection is <260>
pid[2] is on running abcde;
now public variable with lock protection is <261>
pid[2] is on running abcde;
now public variable with lock protection is <262>
pid[2] is on running abcde;
now public variable with lock protection is <263>
pid[2] is on running abcde;
now public variable with lock protection is <264>
pid[2] is on running abcde;
now public variable with lock protection is <265>
pid[2] is on running abcde;
now public variable with lock protection is <266>
pid[2] is on running abcde;
now public variable wipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 lic variable with lock protection is <247>
pid[3] is on running !@#$^;
now public variable with lock protection is <268>
pid[3] is on running !@#$^;
now public variable with lock protection is <269>
pid[3] is on running !@#$^;
now public variable with lock protection is <270>
pid[3] is on running !@#$^;
now public variable with lock protection is <271>
pid[3] is on running !@#$^;
now public variable with lock protection is <272>
pid[3] is on running !@#$^;
now public variable with lock protection is <273>
pid[3] is on running !@#$^;
now public variable with lock protection is <274>
pid[3] is on running !@#$^;
now public variable with lock protection is <275>
pid[3] is on running !@#$^;
now public variable with lock protectpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],Inpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  with lock protection is <257>
pid[1] is on running 12345;
now public variable with lock protection is <277>
pid[1] is on running 12345;
now public variable with lock protection is <278>
pid[1] is on running 12345;
now public variable with lock protection is <279>
pid[1] is on running 12345;
now public variable with lock protection is <280>
pid[1] is on running 12345;
now public variable with lock protection is <281>
pid[1] is on running 12345;
now public variable with lock protection is <282>
pid[1] is on running 12345;
now public variable with lock protection is <283>
pid[1] is on running 12345;
now public variable with lock protection is <284>
pid[1] is on running 12345;
now public variable with lock protection is <285>
pid[1] is on running 12345;
now public variable with lock protection is <286pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 th lock protection is <267>
pid[2] is on running abcde;
now public variable with lock protection is <287>
pid[2] is on running abcde;
now public variable with lock protection is <288>
pid[2] is on running abcde;
now public variable with lock protection is <289>
pid[2] is on running abcde;
now public variable with lock protection is <290>
pid[2] is on running abcde;
now public variable with lock protection is <291>
pid[2] is on running abcde;
now public variable with lock protection is <292>
pid[2] is on running abcde;
now public variable with lock protection is <293>
pid[2] is on running abcde;
now public variable with lock protection is <294>
pid[2] is on running abcde;
now public variable with lock protection is <295>
pid[2] is on running abcde;
now public variablepid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ion is <276>
pid[3] is on running !@#$^;
now public variable with lock protection is <297>
pid[3] is on running !@#$^;
now public variable with lock protection is <298>
pid[3] is on running !@#$^;
now public variable with lock protection is <299>
pid[3] is on running !@#$^;
now public variable with lock protection is <300>
pid[3] is on running !@#$^;
now public variable with lock protection is <301>
pid[3] is on running !@#$^;
now public variable with lock protection is <302>
pid[3] is on running !@#$^;
now public variable with lock protection is <303>
pid[3] is on running !@#$^;
now public variable with lock protection is <304>
pid[3] is on running !@#$^;
now public variable with lock protection is <305>
pid[3] is on running !@#$^;
now public variable with lock protection is <306>
pid[3] pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kerpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 >
pid[1] is on running 12345;
now public variable with lock protection is <307>
pid[1] is on running 12345;
now public variable with lock protection is <308>
pid[1] is on running 12345;
now public variable with lock protection is <309>
pid[1] is on running 12345;
now public variable with lock protection is <310>
pid[1] is on running 12345;
now public variable with lock protection is <311>
pid[1] is on running 12345;
now public variable with lock protection is <312>
pid[1] is on running 12345;
now public variable with lock protection is <313>
pid[1] is on running 12345;
now public variable with lock protection is <314>
pid[1] is on running 12345;
now public variable with lock protection is <315>
pid[1] is on running 12345;
now public variable with lock protectionpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  with lock protection is <296>
pid[2] is on running abcde;
now public variable with lock protection is <317>
pid[2] is on running abcde;
now public variable with lock protection is <318>
pid[2] is on running abcde;
now public variable with lock protection is <319>
pid[2] is on running abcde;
now public variable with lock protection is <320>
pid[2] is on running abcde;
now public variable with lock protection is <321>
pid[2] is on running abcde;
now public variable with lock protection is <322>
pid[2] is on running abcde;
now public variable with lock protection is <323>
pid[2] is on running abcde;
now public variable with lock protection is <324>
pid[2] is on running abcde;
now public variable with lock protection is <325>
pid[2] is on running abcde;
now publipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 is on running !@#$^;
now public variable with lock protection is <327>
pid[3] is on running !@#$^;
now public variable with lock protection is <328>
pid[3] is on running !@#$^;
now public variable with lock protection is <329>
pid[3] is on running !@#$^;
now public variable with lock protection is <330>
pid[3] is on running !@#$^;
now public variable with lock protection is <331>
pid[3] is on running !@#$^;
now public variable with lock protection is <332>
pid[3] is on running !@#$^;
now public variable with lock protection is <333>
pid[3] is on running !@#$^;
now public variable with lock protection is <334>
pid[3] is on running !@#$^;
now public variable with lock protection is <335>
pid[3] is on running !@#$^;
now public variable with lock protection is <336>
pid[3] is on running !@#$^;
now public variable with lock protection is <337>
pid[3] is on running !@#$^;
now public variable with lock protection is <338>
pid[3] is on running !@#$^;
now public variable with lock protection is <339>
pid[3] is on running !@#$^;
now public variable with lock protection is <340>
pid[3] is on running !@#$^;
now public variable with lock protection is <341>
pid[3] is on running !@#$^;
now public variable with lock protection is <342>
pid[3] is on running !@#$^;
now public variable with lock protection is <343>
pid[3] is on running !@#$^;
now public variable with lock protection is <344>
pid[3] is on running !@#$^;
now public variable with lock protection is <345>
pid[3] is on running !@#$^;
now public variable with lock protection is <346>
pid[3] is on running !@#$^;
now public variable with lock protection is <347>
pid[3] is on running !@#$^;
now public variable with lock protection is <348>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 nel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main threapid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  is <316>
pid[1] is on running 12345;
now public variable with lock protection is <349>
pid[1] is on running 12345;
now public variable with lock protection is <350>
pid[1] is on running 12345;
now public variable with lock protection is <351>
pid[1] is on running 12345;
now public variable with lock protection is <352>
pid[1] is on running 12345;
now public variable with lock protection is <353>
pid[1] is on running 12345;
now public variable with lock protection is <354>
pid[1] is on running 12345;
now public variable with lock protection is <355>
pid[1] is on running 12345;
now public variable with lock protection is <356>
pid[1] is on running 12345;
now public variable with lock protection is <357>
pid[1] is on running 12345;
now public variable with lock protection is <358>
pid[1] is on running 12345;
now public variable with lock protection is <359>
pid[1] is on running 12345;
now public variable with lock protection is <360>
pid[1] is on running 12345;
now public variable with lock protection is <361>
pid[1] is on running 12345;
now public variable with lock protection is <362>
pid[1] is on running 12345;
now public variable with lock protection is <363>
pid[1] is on running 12345;
now public variable with lock protection is <364>
pid[1] is on running 12345;
now public variable with lock protection is <365>
pid[1] is on running 12345;
now public variable with lock protection is <366>
pid[1] is on running 12345;
now public variable with lock protection is <367>
pid[1] is on running 12345;
now public variable with lock protection is <368>
pid[1] is on running 12345;
now public variable with lock protection is <369>
pid[1] is on running 12345;
now public variable with lock protection is <370>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 c variable with lock protection is <326>
pid[2] is on running abcde;
now public variable with lock protection is <372>
pid[2] is on running abcde;
now public variable with lock protection is <373>
pid[2] is on running abcde;
now public variable with lock protection is <374>
pid[2] is on running abcde;
now public variable with lock protection is <375>
pid[2] is on running abcde;
now public variable with lock protection is <376>
pid[2] is on running abcde;
now public variable with lock protection is <377>
pid[2] is on running abcde;
now public variable with lock protection is <378>
pid[2] is on running abcde;
now public variable with lock protection is <379>
pid[2] is on running abcde;
now public variable with lock protection is <380>
pid[2] is on running abcde;
now public variable with lock protection is <381>
pid[2] is on running abcde;
now public variable with lock protection is <382>
pid[2] is on running abcde;
now public variable with lock protection is <383>
pid[2] is on running abcde;
now public variable with lock protection is <384>
pid[2] is on running abcde;
now public variable with lock protection is <385>
pid[2] is on running abcde;
now public variable with lock protection is <386>
pid[2] is on runnpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <387>
pid[3] is on running !@#$^;
now public variable with lock protection is <388>
pid[3] is on running !@#$^;
now public variable with lock protection is <389>
pid[3] is on running !@#$^;
now public variable with lock protection is <390>
pid[3] is on running !@#$^;
now public variable with lock protection is <391>
pid[3] is on running !@#$^;
now public variable with lock protection is <392>
pid[3] is on running !@#$^;
now public variable with lock protection is <393>
pid[3] is on running !@#$^;
now public variable with lock protection is <394>
pid[3] is on running !@#$^;
now public variable with lock protection is <395>
pid[3] is on running !@#$^;
now public variable with lock protection is <396>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 d now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <396>
pid[1] is on running 12345;
now public variable with lock protection is <397>
pid[1] is on running 12345;
now public variable with lock protection is <398>
pid[1] is on running 12345;
now public variable with lock protection is <399>
pid[1] is on running 12345;
now public variable with lock protection is <400>
pid[1] is on running 12345;
now public variable with lock protection is <401>
pid[1] is on running 12345;
now public variable with lock protection is <402>
pid[1] is on running 12345;
now public variable with lock protection is <403>
pid[1] is on running 12345;
now public variable with lock protection is <404>
pid[1] is on running 12345;
now public variable with lock protection is <405>
pid[1] is on running 12345;
now public varpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ing abcde;
now public variable with lock protection is <407>
pid[2] is on running abcde;
now public variable with lock protection is <408>
pid[2] is on running abcde;
now public variable with lock protection is <409>
pid[2] is on running abcde;
now public variable with lock protection is <410>
pid[2] is on running abcde;
now public variable with lock protection is <411>
pid[2] is on running abcde;
now public variable with lock protection is <412>
pid[2] is on running abcde;
now public variable with lock protection is <413>
pid[2] is on running abcde;
now public variable with lock protection is <414>
pid[2] is on running abcde;
now public variable with lock protection is <415>
pid[2] is on running abcde;
now public variable with lock protection is <416>
pid[2] is on running abcde;
now publpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <418>
pid[3] is on running !@#$^;
now public variable with lock protection is <419>
pid[3] is on running !@#$^;
now public variable with lock protection is <420>
pid[3] is on running !@#$^;
now public variable with lock protection is <421>
pid[3] is on running !@#$^;
now public variable with lock protection is <422>
pid[3] is on running !@#$^;
now public variable with lock protection is <423>
pid[3] is on running !@#$^;
now public variable with lock protection is <424>
pid[3] is on running !@#$^;
now public variable with lock protection is <425>
pid[3] is on running !@#$^;
now public variable with lock protection is <426>
pid[3] is on running !@#$^;
now public variable with lock protection is <427>
pid[3] is on running !@#$^;
now public variable with lock protection is <428>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ain thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main threadpid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 iable with lock protection is <406>
pid[1] is on running 12345;
now public variable with lock protection is <429>
pid[1] is on running 12345;
now public variable with lock protection is <430>
pid[1] is on running 12345;
now public variable with lock protection is <431>
pid[1] is on running 12345;
now public variable with lock protection is <432>
pid[1] is on running 12345;
now public variable with lock protection is <433>
pid[1] is on running 12345;
now public variable with lock protection is <434>
pid[1] is on running 12345;
now public variable with lock protection is <435>
pid[1] is on running 12345;
now public variable with lock protection is <436>
pid[1] is on running 12345;
now public variable with lock protection is <437>
pid[1] is on running 12345;
now public variable with lock protection is <pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ic variable with lock protection is <417>
pid[2] is on running abcde;
now public variable with lock protection is <439>
pid[2] is on running abcde;
now public variable with lock protection is <440>
pid[2] is on running abcde;
now public variable with lock protection is <441>
pid[2] is on running abcde;
now public variable with lock protection is <442>
pid[2] is on running abcde;
now public variable with lock protection is <443>
pid[2] is on running abcde;
now public variable with lock protection is <444>
pid[2] is on running abcde;
now public variable with lock protection is <445>
pid[2] is on running abcde;
now public variable with lock protection is <446>
pid[2] is on running abcde;
now public variable with lock protection is <447>
pid[2] is on running abcde;
now public vapid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 pid[3] is on running !@#$^;
now public variable with lock protection is <449>
pid[3] is on running !@#$^;
now public variable with lock protection is <450>
pid[3] is on running !@#$^;
now public variable with lock protection is <451>
pid[3] is on running !@#$^;
now public variable with lock protection is <452>
pid[3] is on running !@#$^;
now public variable with lock protection is <453>
pid[3] is on running !@#$^;
now public variable with lock protection is <454>
pid[3] is on running !@#$^;
now public variable with lock protection is <455>
pid[3] is on running !@#$^;
now public variable with lock protection is <456>
pid[3] is on running !@#$^;
now public variable with lock protection is <457>
pid[3] is on running !@#$^;
now public variable with lock protection is <458>
pid[3] is on running !@#$^;
now public variabpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 438>
pid[1] is on running 12345;
now public variable with lock protection is <460>
pid[1] is on running 12345;
now public variable with lock protection is <461>
pid[1] is on running 12345;
now public variable with lock protection is <462>
pid[1] is on running 12345;
now public variable with lock protection is <463>
pid[1] is on running 12345;
now public variable with lock protection is <464>
pid[1] is on running 12345;
now public variable with lock protection is <465>
pid[1] is on running 12345;
now public variable with lock protection is <466>
pid[1] is on running 12345;
now public variable with lock protection is <467>
pid[1] is on running 12345;
now public variable with lock protection is <468>
pid[1] is on running 12345;
now public variable with lock protection is <469>
pid[1] is on running 12345;
now public variable with lock protectpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 riable with lock protection is <448>
pid[2] is on running abcde;
now public variable with lock protection is <471>
pid[2] is on running abcde;
now public variable with lock protection is <472>
pid[2] is on running abcde;
now public variable with lock protection is <473>
pid[2] is on running abcde;
now public variable with lock protection is <474>
pid[2] is on running abcde;
now public variable with lock protection is <475>
pid[2] is on running abcde;
now public variable with lock protection is <476>
pid[2] is on running abcde;
now public variable with lock protection is <477>
pid[2] is on running abcde;
now public variable with lock protection is <478>
pid[2] is on running abcde;
now public variable with lock protection is <479>
pid[2] is on running abcde;
now public vapid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 le with lock protection is <459>
pid[3] is on running !@#$^;
now public variable with lock protection is <481>
pid[3] is on running !@#$^;
now public variable with lock protection is <482>
pid[3] is on running !@#$^;
now public variable with lock protection is <483>
pid[3] is on running !@#$^;
now public variable with lock protection is <484>
pid[3] is on running !@#$^;
now public variable with lock protection is <485>
pid[3] is on running !@#$^;
now public variable with lock protection is <486>
pid[3] is on running !@#$^;
now public variable with lock protection is <487>
pid[3] is on running !@#$^;
now public variable with lock protection is <488>
pid[3] is on running !@#$^;
now public variable with lock protection is <489>
ppid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ion is <470>
pid[1] is on running 12345;
now public variable with lock protection is <490>
pid[1] is on running 12345;
now public variable with lock protection is <491>
pid[1] is on running 12345;
now public variable with lock protection is <492>
pid[1] is on running 12345;
now public variable with lock protection is <493>
pid[1] is on running 12345;
now public variable with lock protection is <494>
pid[1] is on running 12345;
now public variable with lock protection is <495>
pid[1] is on running 12345;
now public variable with lock protection is <496>
pid[1] is on running 12345;
now public variable with lock protection is <497>
pid[1] is on running 12345;
now public variable with lock protection is <498>
pid[1] is on running 12345;
now public variablepid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 riable with lock protection is <480>
pid[2] is on running abcde;
now public variable with lock protection is <500>
pid[2] is on running abcde;
now public variable with lock protection is <501>
pid[2] is on running abcde;
now public variable with lock protection is <502>
pid[2] is on running abcde;
now public variable with lock protection is <503>
pid[2] is on running abcde;
now public variable with lock protection is <504>
pid[2] is on running abcde;
now public variable with lock protection is <505>
pid[2] is on running abcde;
now public variable with lock protection is <506>
pid[2] is on running abcde;
now public variable with lock protection is <507>
pid[2] is on running abcde;
now public variable with lock protection is <508>
pid[2] is on running abcde;
now public variable with lock protection is <509>
pid[2] is pid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 id[3] is on running !@#$^;
now public variable with lock protection is <510>
pid[3] is on running !@#$^;
now public variable with lock protection is <511>
pid[3] is on running !@#$^;
now public variable with lock protection is <512>
pid[3] is on running !@#$^;
now public variable with lock protection is <513>
pid[3] is on running !@#$^;
now public variable with lock protection is <514>
pid[3] is on running !@#$^;
now public variable with lock protection is <515>
pid[3] is on running !@#$^;
now public variable with lock protection is <516>
pid[3] is on running !@#$^;
now public variable with lock protection is <517>
pid[3] is on running !@#$^;
now public variable with lock protection is <518>
pid[3] is on running !@#$pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],Ipid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  with lock protection is <499>
pid[1] is on running 12345;
now public variable with lock protection is <519>
pid[1] is on running 12345;
now public variable with lock protection is <520>
pid[1] is on running 12345;
now public variable with lock protection is <521>
pid[1] is on running 12345;
now public variable with lock protection is <522>
pid[1] is on running 12345;
now public variable with lock protection is <523>
pid[1] is on running 12345;
now public variable with lock protection is <524>
pid[1] is on running 12345;
now public variable with lock protection is <525>
pid[1] is on running 12345;
now public variable with lock protection is <526>
pid[1] is on running 12345;
now public variable with lock protection is <527>
pid[1] is on running 12345;
now public variable with lock propid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 on running abcde;
now public variable with lock protection is <529>
pid[2] is on running abcde;
now public variable with lock protection is <530>
pid[2] is on running abcde;
now public variable with lock protection is <531>
pid[2] is on running abcde;
now public variable with lock protection is <532>
pid[2] is on running abcde;
now public variable with lock protection is <533>
pid[2] is on running abcde;
now public variable with lock protection is <534>
pid[2] is on running abcde;
now public variable with lock protection is <535>
pid[2] is on running abcde;
now public variable with lock protection is <536>
pid[2] is on running abcde;
now public variable with lock protection is <537>
pid[2] is on running abcde;
now public variablepid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ^;
now public variable with lock protection is <539>
pid[3] is on running !@#$^;
now public variable with lock protection is <540>
pid[3] is on running !@#$^;
now public variable with lock protection is <541>
pid[3] is on running !@#$^;
now public variable with lock protection is <542>
pid[3] is on running !@#$^;
now public variable with lock protection is <543>
pid[3] is on running !@#$^;
now public variable with lock protection is <544>
pid[3] is on running !@#$^;
now public variable with lock protection is <545>
pid[3] is on running !@#$^;
now public variable with lock protection is <546>
pid[3] is on running !@#$^;
now public variable with lock protection is <547>
pid[3] is on running !@#$^;
now public variable with lock protection is <548>
pid[3] is on running !@#$^;
now public variable with lock protection is <549>
ppid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 tection is <528>
pid[1] is on running 12345;
now public variable with lock protection is <550>
pid[1] is on running 12345;
now public variable with lock protection is <551>
pid[1] is on running 12345;
now public variable with lock protection is <552>
pid[1] is on running 12345;
now public variable with lock protection is <553>
pid[1] is on running 12345;
now public variable with lock protection is <554>
pid[1] is on running 12345;
now public variable with lock protection is <555>
pid[1] is on running 12345;
now public variable with lock protection is <556>
pid[1] is on running 12345;
now public variable with lock protection is <557>
pid[1] is on running 12345;
now public variable with lock protection is <558>
pid[1] is on running 12345;
now public variable with lock protection is <559>
pid[1] is pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  with lock protection is <538>
pid[2] is on running abcde;
now public variable with lock protection is <560>
pid[2] is on running abcde;
now public variable with lock protection is <561>
pid[2] is on running abcde;
now public variable with lock protection is <562>
pid[2] is on running abcde;
now public variable with lock protection is <563>
pid[2] is on running abcde;
now public variable with lock protection is <564>
pid[2] is on running abcde;
now public variable with lock protection is <565>
pid[2] is on running abcde;
now public variable with lock protection is <566>
pid[2] is on running abcde;
now public variable with lock protection is <567>
pid[2] is on running abcde;
now public variable with lock protection is <568>
pid[2] is on running abcde;
now public variable with lock protectiopid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 id[3] is on running !@#$^;
now public variable with lock protection is <570>
pid[3] is on running !@#$^;
now public variable with lock protection is <571>
pid[3] is on running !@#$^;
now public variable with lock protection is <572>
pid[3] is on running !@#$^;
now public variable with lock protection is <573>
pid[3] is on running !@#$^;
now public variable with lock protection is <574>
pid[3] is on running !@#$^;
now public variable with lock protection is <575>
pid[3] is on running !@#$^;
now public variable with lock protection is <576>
pid[3] is on running !@#$^;
now public variable with lock protection is <577>
pid[3] is on running !@#$^;
now public variable with lock protection is <578>
pid[3] is on running !@#$^;
now public variable with lock protection is <579>
pid[3] is on running !pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 on running 12345;
now public variable with lock protection is <580>
pid[1] is on running 12345;
now public variable with lock protection is <581>
pid[1] is on running 12345;
now public variable with lock protection is <582>
pid[1] is on running 12345;
now public variable with lock protection is <583>
pid[1] is on running 12345;
now public variable with lock protection is <584>
pid[1] is on running 12345;
now public variable with lock protection is <585>
pid[1] is on running 12345;
now public variable with lock protection is <586>
pid[1] is on running 12345;
now public variable with lock protection is <587>
pid[1] is on running 12345;
now public variable with lock protection is <588>
pid[1] is on running 12345;
now public variable with lock protection is <589>
pid[1] is on running 12345;
now public variable with lockpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 n is <569>
pid[2] is on running abcde;
now public variable with lock protection is <591>
pid[2] is on running abcde;
now public variable with lock protection is <592>
pid[2] is on running abcde;
now public variable with lock protection is <593>
pid[2] is on running abcde;
now public variable with lock protection is <594>
pid[2] is on running abcde;
now public variable with lock protection is <595>
pid[2] is on running abcde;
now public variable with lock protection is <596>
pid[2] is on running abcde;
now public variable with lock protection is <597>
pid[2] is on running abcde;
now public variable with lock protection is <598>
pid[2] is on running abcde;
now public variable with lock protection is <599>
pid[2] is on running abcde;
now public variable with lock protection is <600>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 @#$^;
now public variable with lock protection is <601>
pid[3] is on running !@#$^;
now public variable with lock protection is <602>
pid[3] is on running !@#$^;
now public variable with lock protection is <603>
pid[3] is on running !@#$^;
now public variable with lock protection is <604>
pid[3] is on running !@#$^;
now public variable with lock protection is <605>
pid[3] is on running !@#$^;
now public variable with lock protection is <606>
pid[3] is on running !@#$^;
now public variable with lock protection is <607>
pid[3] is on running !@#$^;
now public variable with lock protection is <608>
pid[3] is on running !@#$^;
now public variable with lock protection is <609>
pid[3] is on running !@#$^;
now public variable with lock protection is <610>
pid[3] is on running !@#$^;
now publpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread nopid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  protection is <590>
pid[1] is on running 12345;
now public variable with lock protection is <612>
pid[1] is on running 12345;
now public variable with lock protection is <613>
pid[1] is on running 12345;
now public variable with lock protection is <614>
pid[1] is on running 12345;
now public variable with lock protection is <615>
pid[1] is on running 12345;
now public variable with lock protection is <616>
pid[1] is on running 12345;
now public variable with lock protection is <617>
pid[1] is on running 12345;
now public variable with lock protection is <618>
pid[1] is on running 12345;
now public variable with lock protection is <619>
pid[1] is on running 12345;
now public variable with lock protection is <620>
pid[1] is on running 12345;
now public variable with lock protection is <621>
pid[1] is on rupid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <622>
pid[2] is on running abcde;
now public variable with lock protection is <623>
pid[2] is on running abcde;
now public variable with lock protection is <624>
pid[2] is on running abcde;
now public variable with lock protection is <625>
pid[2] is on running abcde;
now public variable with lock protection is <626>
pid[2] is on running abcde;
now public variable with lock protection is <627>
pid[2] is on running abcde;
now public variable with lock protection is <628>
pid[2] is on running abcde;
now public variable with lock protection is <629>
pid[2] is on running abcde;
now public variable with lock protection is <630>
pid[2] is on running abcde;
now public variable with lock protection is <631>
pid[2] is on running abcde;
now public variable with lock protection is <632>
pid[2] is on running abcde;
now public variable with lock protection is <633>
pid[2] is on running abcde;
now public variable with lock protection is <634>
pid[2] is on running abcde;
now public variable with lock protection is <635>
pid[2] is on running abcde;
now public variable with lock protection is <636>
pid[2] is on running abcde;
now public variable with lock protection is <637>
pid[2] is on running abcde;
now public variable with lock protection is <638>
pid[2] is on running abcde;
now public variable with lock protection is <639>
pid[2] is on runpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ic variable with lock protection is <611>
pid[3] is on running !@#$^;
now public variable with lock protection is <640>
pid[3] is on running !@#$^;
now public variable with lock protection is <641>
pid[3] is on running !@#$^;
now public variable with lock protection is <642>
pid[3] is on running !@#$^;
now public variable with lock protection is <643>
pid[3] is on running !@#$^;
now public variable with lock protection is <644>
pid[3] is on running !@#$^;
now public variable with lock protection is <645>
pid[3] is on running !@#$^;
now public variable with lock protection is <646>
pid[3] is on running !@#$^;
now public variable with lock protection is <647>
pid[3] is on running !@#$^;
now public variable with lock protection is <648>
pid[3] is on running !@#$^;
now public variable with lock protection is <649>
pid[3] is on running !@#$^;
now public variable with lock protection is <650>
pid[3] is on running !@#$^;
now public variable with lock protection is <651>
pid[3] is on running !@#$^;
now public variable with lock protection is <652>
pid[3] is on running !@#$^;
now public variable with lock protection is <653>
pid[3] is on running !@#$^;
now public variable with lock protection is <654>
pid[3] is on running !@#$^;
now public variable with lock protection is <655>
pid[3] is on running !@#$^;
now public variable with lock protection is <656>
pid[3] is on running !@#$^;
now public variable with lock protection is <657>
pid[3] is on running !@#$^;
now public variable with lock protection is <658>
pid[3] is on running !@#$^;
now public variable with lock protection is <659>
pid[3] is on running !@#$^;
now public variable with lock protection is <660>
pid[3] is on running !@#$^;
now public variable with lock protection is <661>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 w
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernelpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 nning 12345;
now public variable with lock protection is <663>
pid[1] is on running 12345;
now public variable with lock protection is <664>
pid[1] is on running 12345;
now public variable with lock protection is <665>
pid[1] is on running 12345;
now public variable with lock protection is <666>
pid[1] is on running 12345;
now public variable with lock protection is <667>
pid[1] is on running 12345;
now public variable with lock protection is <668>
pid[1] is on running 12345;
now public variable with lock protection is <669>
pid[1] is on running 12345;
now public variable with lock protection is <670>
pid[1] is on running 12345;
now public variable with lock protection is <671>
pid[1] is on running 12345;
now public variable with lock protection is <672>
pid[1] is on running 12345;
now public variable with lock protection is <673>
pid[1] is on running 12345;
now public variable with lock protection is <674>
pid[1] is on running 12345;
now public variable with lock protection is <675>
pid[1] is on running 12345;
now public variable with lock protection is <676>
pid[1] is on running 12345;
now public variable with lock protection is <677>
pid[1] is on running 12345;
now public variable with lock protection is <678>
pid[1] is on running 12345;
now public variable with lock protection is <679>
pid[1] is on running 12345;
now public variable with lock protection is <680>
pid[1] is on running 12345;
now public variable with lock protection is <681>pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ning abcde;
now public variable with lock protection is <682>
pid[2] is on running abcde;
now public variable with lock protection is <683>
pid[2] is on running abcde;
now public variable with lock protection is <684>
pid[2] is on running abcde;
now public variable with lock protection is <685>
pid[2] is on running abcde;
now public variable with lock protection is <686>
pid[2] is on running abcde;
now public variable with lock protection is <687>
pid[2] is on running abcde;
now public variable with lock protection is <688>
pid[2] is on running abcde;
now public variable with lock protection is <689>
pid[2] is on running abcde;
now public variable with lock protection is <690>
pid[2] is on running abcde;
now public variable with lock protection is <691>
pid[2] is on runnipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <691>
pid[3] is on running !@#$^;
now public variable with lock protection is <692>
pid[3] is on running !@#$^;
now public variable with lock protection is <693>
pid[3] is on running !@#$^;
now public variable with lock protection is <694>
pid[3] is on running !@#$^;
now public variable with lock protection is <695>
pid[3] is on running !@#$^;
now public variable with lock protection is <696>
pid[3] is on running !@#$^;
now public variable with lock protection is <697>
pid[3] is on running !@#$^;
now public variable with lock protection is <698>
pid[3] is on running !@#$^;
now public variable with lock protection is <699>
pid[3] is on running !@#$^;
now public variable with lock protection is <700>
pid[3] is on running !@#$^;
now ppid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 
pid[1] is on running 12345;
now public variable with lock protection is <702>
pid[1] is on running 12345;
now public variable with lock protection is <703>
pid[1] is on running 12345;
now public variable with lock protection is <704>
pid[1] is on running 12345;
now public variable with lock protection is <705>
pid[1] is on running 12345;
now public variable with lock protection is <706>
pid[1] is on running 12345;
now public variable with lock protection is <707>
pid[1] is on running 12345;
now public variable with lock protection is <708>
pid[1] is on running 12345;
now public variable with lock protection is <709>
pid[1] is on running 12345;
now public variable with lock protection is <710>
pid[1] is on running 12345;
now public variable with lock protection is <711>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ng abcde;
now public variable with lock protection is <712>
pid[2] is on running abcde;
now public variable with lock protection is <713>
pid[2] is on running abcde;
now public variable with lock protection is <714>
pid[2] is on running abcde;
now public variable with lock protection is <715>
pid[2] is on running abcde;
now public variable with lock protection is <716>
pid[2] is on running abcde;
now public variable with lock protection is <717>
pid[2] is on running abcde;
now public variable with lock protection is <718>
pid[2] is on running abcde;
now public variable with lock protection is <719>
pid[2] is on running abcde;
now public variable with lock protection is <720>
pid[2] is on running abcde;
now public variable with lock protection is <721>
pid[2] is on running abcde;
now public variable with lock protection is <722>
pid[2] is on running abpid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ublic variable with lock protection is <701>
pid[3] is on running !@#$^;
now public variable with lock protection is <723>
pid[3] is on running !@#$^;
now public variable with lock protection is <724>
pid[3] is on running !@#$^;
now public variable with lock protection is <725>
pid[3] is on running !@#$^;
now public variable with lock protection is <726>
pid[3] is on running !@#$^;
now public variable with lock protection is <727>
pid[3] is on running !@#$^;
now public variable with lock protection is <728>
pid[3] is on running !@#$^;
now public variable with lock protection is <729>
pid[3] is on running !@#$^;
now public variable with lock protection is <730>
pid[3] is on running !@#$^;
now public variable with lock protection is <731>
pid[3] is on running !@#$^;
now public variable with lock protection is <732>
pid[3] is on running !@#$^;
pid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread nowpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <734>
pid[1] is on running 12345;
now public variable with lock protection is <735>
pid[1] is on running 12345;
now public variable with lock protection is <736>
pid[1] is on running 12345;
now public variable with lock protection is <737>
pid[1] is on running 12345;
now public variable with lock protection is <738>
pid[1] is on running 12345;
now public variable with lock protection is <739>
pid[1] is on running 12345;
now public variable with lock protection is <740>
pid[1] is on running 12345;
now public variable with lock protection is <741>
pid[1] is on running 12345;
now public variable with lock protection is <742>
pid[1] is on running 12345;
now public variable with lock protection is <743>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 cde;
now public variable with lock protection is <745>
pid[2] is on running abcde;
now public variable with lock protection is <746>
pid[2] is on running abcde;
now public variable with lock protection is <747>
pid[2] is on running abcde;
now public variable with lock protection is <748>
pid[2] is on running abcde;
now public variable with lock protection is <749>
pid[2] is on running abcde;
now public variable with lock protection is <750>
pid[2] is on running abcde;
now public variable with lock protection is <751>
pid[2] is on running abcde;
now public variable with lock protection is <752>
pid[2] is on running abcde;
now public variable with lock protection is <753>
pid[2] is on running abcde;
now public variable with lock protection is <754>
pid[2] is on running abcde;
now public variable with lock protection is <755>
pid[2]pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <755>
pid[3] is on running !@#$^;
now public variable with lock protection is <756>
pid[3] is on running !@#$^;
now public variable with lock protection is <757>
pid[3] is on running !@#$^;
now public variable with lock protection is <758>
pid[3] is on running !@#$^;
now public variable with lock protection is <759>
pid[3] is on running !@#$^;
now public variable with lock protection is <760>
pid[3] is on running !@#$^;
now public variable with lock protection is <761>
pid[3] is on running !@#$^;
now public variable with lock protection is <762>
pid[3] is on running !@#$^;
now public variable with lock protection is <763>
pid[3] is on running !@#$^;
now public variable with lock protection is <764>
pid[3] is on running !@#$^;
now publicpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <765>
pid[1] is on running 12345;
now public variable with lock protection is <766>
pid[1] is on running 12345;
now public variable with lock protection is <767>
pid[1] is on running 12345;
now public variable with lock protection is <768>
pid[1] is on running 12345;
now public variable with lock protection is <769>
pid[1] is on running 12345;
now public variable with lock protection is <770>
pid[1] is on running 12345;
now public variable with lock protection is <771>
pid[1] is on running 12345;
now public variable with lock protection is <772>
pid[1] is on running 12345;
now public variable with lock protection is <773>
pid[1] is on running 12345;
now public variable with lock protection is <774>
pid[1] is on running 12345;
now public variable with lock protection is <775>
pid[1] ispid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  is on running abcde;
now public variable with lock protection is <776>
pid[2] is on running abcde;
now public variable with lock protection is <777>
pid[2] is on running abcde;
now public variable with lock protection is <778>
pid[2] is on running abcde;
now public variable with lock protection is <779>
pid[2] is on running abcde;
now public variable with lock protection is <780>
pid[2] is on running abcde;
now public variable with lock protection is <781>
pid[2] is on running abcde;
now public variable with lock protection is <782>
pid[2] is on running abcde;
now public variable with lock protection is <783>
pid[2] is on running abcde;
now public variable with lock protection is <784>
pid[2] is on running abcde;
now public variable with lock protection is <785>
pid[2] is on runpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  variable with lock protection is <765>
pid[3] is on running !@#$^;
now public variable with lock protection is <786>
pid[3] is on running !@#$^;
now public variable with lock protection is <787>
pid[3] is on running !@#$^;
now public variable with lock protection is <788>
pid[3] is on running !@#$^;
now public variable with lock protection is <789>
pid[3] is on running !@#$^;
now public variable with lock protection is <790>
pid[3] is on running !@#$^;
now public variable with lock protection is <791>
pid[3] is on running !@#$^;
now public variable with lock protection is <792>
pid[3] is on running !@#$^;
now public variable with lock protection is <793>
pid[3] is on running !@#$^;
now public variable with lock protection is <794>
pid[3] is on running !@#$^;
now public variablepid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread npid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  on running 12345;
now public variable with lock protection is <796>
pid[1] is on running 12345;
now public variable with lock protection is <797>
pid[1] is on running 12345;
now public variable with lock protection is <798>
pid[1] is on running 12345;
now public variable with lock protection is <799>
pid[1] is on running 12345;
now public variable with lock protection is <800>
pid[1] is on running 12345;
now public variable with lock protection is <801>
pid[1] is on running 12345;
now public variable with lock protection is <802>
pid[1] is on running 12345;
now public variable with lock protection is <803>
pid[1] is on running 12345;
now public variable with lock protection is <804>
pid[1] is on running 12345;
now public variable with lock protection is <805>
pid[1] is on running 12345;
now public vapid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ning abcde;
now public variable with lock protection is <807>
pid[2] is on running abcde;
now public variable with lock protection is <808>
pid[2] is on running abcde;
now public variable with lock protection is <809>
pid[2] is on running abcde;
now public variable with lock protection is <810>
pid[2] is on running abcde;
now public variable with lock protection is <811>
pid[2] is on running abcde;
now public variable with lock protection is <812>
pid[2] is on running abcde;
now public variable with lock protection is <813>
pid[2] is on running abcde;
now public variable with lock protection is <814>
pid[2] is on running abcde;
now public variable with lock protection is <815>
pid[2] is on running abcde;
now public variable with lock protection is <816>
pid[2] is on running abcde;
now public variable with lock protectipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  with lock protection is <795>
pid[3] is on running !@#$^;
now public variable with lock protection is <818>
pid[3] is on running !@#$^;
now public variable with lock protection is <819>
pid[3] is on running !@#$^;
now public variable with lock protection is <820>
pid[3] is on running !@#$^;
now public variable with lock protection is <821>
pid[3] is on running !@#$^;
now public variable with lock protection is <822>
pid[3] is on running !@#$^;
now public variable with lock protection is <823>
pid[3] is on running !@#$^;
now public variable with lock protection is <824>
pid[3] is on running !@#$^;
now public variable with lock protection is <825>
pid[3] is on running !@#$^;
now public variable with lock protection is <826>
pid[3] is on running !@#$^;
now public variable with locpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ow
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pidpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 riable with lock protection is <806>
pid[1] is on running 12345;
now public variable with lock protection is <828>
pid[1] is on running 12345;
now public variable with lock protection is <829>
pid[1] is on running 12345;
now public variable with lock protection is <830>
pid[1] is on running 12345;
now public variable with lock protection is <831>
pid[1] is on running 12345;
now public variable with lock protection is <832>
pid[1] is on running 12345;
now public variable with lock protection is <833>
pid[1] is on running 12345;
now public variable with lock protection is <834>
pid[1] is on running 12345;
now public variable with lock protection is <835>
pid[1] is on running 12345;
now public variable with lock protection is <836>
pid[1] is on running 12345;
now public variable with lock protection is <837>
pid[1] is on runninpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 on is <817>
pid[2] is on running abcde;
now public variable with lock protection is <838>
pid[2] is on running abcde;
now public variable with lock protection is <839>
pid[2] is on running abcde;
now public variable with lock protection is <840>
pid[2] is on running abcde;
now public variable with lock protection is <841>
pid[2] is on running abcde;
now public variable with lock protection is <842>
pid[2] is on running abcde;
now public variable with lock protection is <843>
pid[2] is on running abcde;
now public variable with lock protection is <844>
pid[2] is on running abcde;
now public variable with lock protection is <845>
pid[2] is on running abcde;
now public variable with lock protection is <846>
pid[2] is on running abcde;
now public variabpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 k protection is <827>
pid[3] is on running !@#$^;
now public variable with lock protection is <848>
pid[3] is on running !@#$^;
now public variable with lock protection is <849>
pid[3] is on running !@#$^;
now public variable with lock protection is <850>
pid[3] is on running !@#$^;
now public variable with lock protection is <851>
pid[3] is on running !@#$^;
now public variable with lock protection is <852>
pid[3] is on running !@#$^;
now public variable with lock protection is <853>
pid[3] is on running !@#$^;
now public variable with lock protection is <854>
pid[3] is on running !@#$^;
now public variable with lock protection is <855>
pid[3] is on running !@#$^;
now public variable with lock protection is <856>
pid[3] is on running !@#$^;
now public variable with lockpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 [0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 g 12345;
now public variable with lock protection is <858>
pid[1] is on running 12345;
now public variable with lock protection is <859>
pid[1] is on running 12345;
now public variable with lock protection is <860>
pid[1] is on running 12345;
now public variable with lock protection is <861>
pid[1] is on running 12345;
now public variable with lock protection is <862>
pid[1] is on running 12345;
now public variable with lock protection is <863>
pid[1] is on running 12345;
now public variable with lock protection is <864>
pid[1] is on running 12345;
now public variable with lock protection is <865>
pid[1] is on running 12345;
now public variable with lock protection is <866>
pid[1] is on running 12345;
now public variable with lock protection is <867>
pid[1] is on running 12345;
npid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 le with lock protection is <847>
pid[2] is on running abcde;
now public variable with lock protection is <869>
pid[2] is on running abcde;
now public variable with lock protection is <870>
pid[2] is on running abcde;
now public variable with lock protection is <871>
pid[2] is on running abcde;
now public variable with lock protection is <872>
pid[2] is on running abcde;
now public variable with lock protection is <873>
pid[2] is on running abcde;
now public variable with lock protection is <874>
pid[2] is on running abcde;
now public variable with lock protection is <875>
pid[2] is on running abcde;
now public variable with lock protection is <876>
pid[2] is on running abcde;
now public variable with lock protection is <877>
pid[2] is on running abcdepid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  protection is <857>
pid[3] is on running !@#$^;
now public variable with lock protection is <878>
pid[3] is on running !@#$^;
now public variable with lock protection is <879>
pid[3] is on running !@#$^;
now public variable with lock protection is <880>
pid[3] is on running !@#$^;
now public variable with lock protection is <881>
pid[3] is on running !@#$^;
now public variable with lock protection is <882>
pid[3] is on running !@#$^;
now public variable with lock protection is <883>
pid[3] is on running !@#$^;
now public variable with lock protection is <884>
pid[3] is on running !@#$^;
now public variable with lock protection is <885>
pid[3] is on running !@#$^;
now public variable with lock protection is <886>
pid[3] is on running !@#$^;
now public variable with lock protection is pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel maipid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ow public variable with lock protection is <868>
pid[1] is on running 12345;
now public variable with lock protection is <888>
pid[1] is on running 12345;
now public variable with lock protection is <889>
pid[1] is on running 12345;
now public variable with lock protection is <890>
pid[1] is on running 12345;
now public variable with lock protection is <891>
pid[1] is on running 12345;
now public variable with lock protection is <892>
pid[1] is on running 12345;
now public variable with lock protection is <893>
pid[1] is on running 12345;
now public variable with lock protection is <894>
pid[1] is on running 12345;
now public variable with lock protection is <895>
pid[1] is on running 12345;
now publicpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ;
now public variable with lock protection is <897>
pid[2] is on running abcde;
now public variable with lock protection is <898>
pid[2] is on running abcde;
now public variable with lock protection is <899>
pid[2] is on running abcde;
now public variable with lock protection is <900>
pid[2] is on running abcde;
now public variable with lock protection is <901>
pid[2] is on running abcde;
now public variable with lock protection is <902>
pid[2] is on running abcde;
now public variable with lock protection is <903>
pid[2] is on running abcde;
now public variable with lock protection is <904>
pid[2] is on running abcde;
now public variable with lock protection is <905>
pid[2] is on running apid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 <887>
pid[3] is on running !@#$^;
now public variable with lock protection is <906>
pid[3] is on running !@#$^;
now public variable with lock protection is <907>
pid[3] is on running !@#$^;
now public variable with lock protection is <908>
pid[3] is on running !@#$^;
now public variable with lock protection is <909>
pid[3] is on running !@#$^;
now public variable with lock protection is <910>
pid[3] is on running !@#$^;
now public variable with lock protection is <911>
pid[3] is on running !@#$^;
now public variable with lock protection is <912>
pid[3] is on running !@#$^;
now public variable with lock protection is <913>
pid[3] is on running !@#$^;
now public variable with lock protection is <914>
pid[3] is on running !@#$^;
now public variabpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thpid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  variable with lock protection is <896>
pid[1] is on running 12345;
now public variable with lock protection is <916>
pid[1] is on running 12345;
now public variable with lock protection is <917>
pid[1] is on running 12345;
now public variable with lock protection is <918>
pid[1] is on running 12345;
now public variable with lock protection is <919>
pid[1] is on running 12345;
now public variable with lock protection is <920>
pid[1] is on running 12345;
now public variable with lock protection is <921>
pid[1] is on running 12345;
now public variable with lock protection is <922>
pid[1] is on running 12345;
now public variable with lock protection is <923>
pid[1] is on running 12345;
now public variable with lock protection is <924>
pid[1] is on running 12345;
now public variable with lock protection is <925>
pid[1] is on running 12345;
pid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 bcde;
now public variable with lock protection is <926>
pid[2] is on running abcde;
now public variable with lock protection is <927>
pid[2] is on running abcde;
now public variable with lock protection is <928>
pid[2] is on running abcde;
now public variable with lock protection is <929>
pid[2] is on running abcde;
now public variable with lock protection is <930>
pid[2] is on running abcde;
now public variable with lock protection is <931>
pid[2] is on running abcde;
now public variable with lock protection is <932>
pid[2] is on running abcde;
now public variable with lock protection is <933>
pid[2] is on running abcde;
now public variable with lock protection is <934>
pid[2] is on running abcde;
now public variable with lock protection is <935>
pid[2] is on running abcde;pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 le with lock protection is <915>
pid[3] is on running !@#$^;
now public variable with lock protection is <936>
pid[3] is on running !@#$^;
now public variable with lock protection is <937>
pid[3] is on running !@#$^;
now public variable with lock protection is <938>
pid[3] is on running !@#$^;
now public variable with lock protection is <939>
pid[3] is on running !@#$^;
now public variable with lock protection is <940>
pid[3] is on running !@#$^;
now public variable with lock protection is <941>
pid[3] is on running !@#$^;
now public variable with lock protection is <942>
pid[3] is on running !@#$^;
now public variable with lock protection is <943>
pid[3] is on running !@#$^;
now public variable with lock protection is <944>
pid[3] is on running !@#$^;
now public variable with lock protection is <945>
pid[3] is on running !@#$^;
now public variable with lpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 read now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],Ipid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <947>
pid[1] is on running 12345;
now public variable with lock protection is <948>
pid[1] is on running 12345;
now public variable with lock protection is <949>
pid[1] is on running 12345;
now public variable with lock protection is <950>
pid[1] is on running 12345;
now public variable with lock protection is <951>
pid[1] is on running 12345;
now public variable with lock protection is <952>
pid[1] is on running 12345;
now public variable with lock protection is <953>
pid[1] is on running 12345;
now public variable with lock protection is <954>
pid[1] is on running 12345;
now public variable with lock protection is <955>
pid[1] is on running 12345;
now public variable with lock protection is <956>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 
now public variable with lock protection is <957>
pid[2] is on running abcde;
now public variable with lock protection is <958>
pid[2] is on running abcde;
now public variable with lock protection is <959>
pid[2] is on running abcde;
now public variable with lock protection is <960>
pid[2] is on running abcde;
now public variable with lock protection is <961>
pid[2] is on running abcde;
now public variable with lock protection is <962>
pid[2] is on running abcde;
now public variable with lock protection is <963>
pid[2] is on running abcde;
now public variable with lock protection is <964>
pid[2] is on running abcde;
now public variable with lock protection is <965>
pid[2] is on running abcde;
now public variable with lock protection is <966>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ock protection is <946>
pid[3] is on running !@#$^;
now public variable with lock protection is <968>
pid[3] is on running !@#$^;
now public variable with lock protection is <969>
pid[3] is on running !@#$^;
now public variable with lock protection is <970>
pid[3] is on running !@#$^;
now public variable with lock protection is <971>
pid[3] is on running !@#$^;
now public variable with lock protection is <972>
pid[3] is on running !@#$^;
now public variable with lock protection is <973>
pid[3] is on running !@#$^;
now public variable with lock protection is <974>
pid[3] is on running !@#$^;
now public variable with lock protection is <975>
pid[3] is on running !@#$^;
now public variable with lock protection is <976>
pid[3] is on running !@#$^;
now pupid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <978>
pid[1] is on running 12345;
now public variable with lock protection is <979>
pid[1] is on running 12345;
now public variable with lock protection is <980>
pid[1] is on running 12345;
now public variable with lock protection is <981>
pid[1] is on running 12345;
now public variable with lock protection is <982>
pid[1] is on running 12345;
now public variable with lock protection is <983>
pid[1] is on running 12345;
now public variable with lock protection is <984>
pid[1] is on running 12345;
now public variable with lock protection is <985>
pid[1] is on running 12345;
now public variable with lock protection is <986>
pid[1] is on running 12345;
now public variable with lock protection is <987>
pid[1] is on running 12345;
now public variabpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <988>
pid[2] is on running abcde;
now public variable with lock protection is <989>
pid[2] is on running abcde;
now public variable with lock protection is <990>
pid[2] is on running abcde;
now public variable with lock protection is <991>
pid[2] is on running abcde;
now public variable with lock protection is <992>
pid[2] is on running abcde;
now public variable with lock protection is <993>
pid[2] is on running abcde;
now public variable with lock protection is <994>
pid[2] is on running abcde;
now public variable with lock protection is <995>
pid[2] is on running abcde;
now public variable with lock protection is <996>
pid[2] is on running abcde;
now public variable with lock protection is <997>
pid[2] is on running abcde;
now public variable witpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 blic variable with lock protection is <977>
pid[3] is on running !@#$^;
now public variable with lock protection is <999>
pid[3] is on running !@#$^;
now public variable with lock protection is <1000>
pid[3] is on running !@#$^;
now public variable with lock protection is <1001>
pid[3] is on running !@#$^;
now public variable with lock protection is <1002>
pid[3] is on running !@#$^;
now public variable with lock protection is <1003>
pid[3] is on running !@#$^;
now public variable with lock protection is <1004>
pid[3] is on running !@#$^;
now public variable with lock protection is <1005>
pid[3] is on running !@#$^;
now public variable with lock protection is <1006>
pid[3] is on running !@#$^;
now public variable with lock protection is <1007>
pid[3] is on running !@#$^;
now public variable wpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
ppid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 le with lock protection is <988>
pid[1] is on running 12345;
now public variable with lock protection is <1009>
pid[1] is on running 12345;
now public variable with lock protection is <1010>
pid[1] is on running 12345;
now public variable with lock protection is <1011>
pid[1] is on running 12345;
now public variable with lock protection is <1012>
pid[1] is on running 12345;
now public variable with lock protection is <1013>
pid[1] is on running 12345;
now public variable with lock protection is <1014>
pid[1] is on running 12345;
now public variable with lock protection is <1015>
pid[1] is on running 12345;
now public variable with lock protection is <1016>
pid[1] is on running 12345;
now public variable with lock protection is <1017>
pid[1] is on running 12345;
now public variable with lock protpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 h lock protection is <998>
pid[2] is on running abcde;
now public variable with lock protection is <1019>
pid[2] is on running abcde;
now public variable with lock protection is <1020>
pid[2] is on running abcde;
now public variable with lock protection is <1021>
pid[2] is on running abcde;
now public variable with lock protection is <1022>
pid[2] is on running abcde;
now public variable with lock protection is <1023>
pid[2] is on running abcde;
now public variable with lock protection is <1024>
pid[2] is on running abcde;
now public variable with lock protection is <1025>
pid[2] is on running abcde;
now public variable with lock protection is <1026>
pid[2] is on running abcde;
now public variable with lock protection is <1027>
pid[2] is on running abcde;
now public variable with lock protection is <1028>
pid[2] is on running abcpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ith lock protection is <1008>
pid[3] is on running !@#$^;
now public variable with lock protection is <1029>
pid[3] is on running !@#$^;
now public variable with lock protection is <1030>
pid[3] is on running !@#$^;
now public variable with lock protection is <1031>
pid[3] is on running !@#$^;
now public variable with lock protection is <1032>
pid[3] is on running !@#$^;
now public variable with lock protection is <1033>
pid[3] is on running !@#$^;
now public variable with lock protection is <1034>
pid[3] is on running !@#$^;
now public variable with lock protection is <1035>
pid[3] is on running !@#$^;
now public variable with lock protection is <1036>
pid[3] is on running !@#$^;
now public variable with lock protection is <1037>
pid[3] is on running !@#$^;
now public variable with locpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 id[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main threapid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ection is <1018>
pid[1] is on running 12345;
now public variable with lock protection is <1039>
pid[1] is on running 12345;
now public variable with lock protection is <1040>
pid[1] is on running 12345;
now public variable with lock protection is <1041>
pid[1] is on running 12345;
now public variable with lock protection is <1042>
pid[1] is on running 12345;
now public variable with lock protection is <1043>
pid[1] is on running 12345;
now public variable with lock protection is <1044>
pid[1] is on running 12345;
now public variable with lock protection is <1045>
pid[1] is on running 12345;
now public variable with lock protection is <1046>
pid[1] is on running 12345;
now public variable with lock protection is <1047>
pid[1] is on running 12345;
now public variable with lock protection is <pid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 de;
now public variable with lock protection is <1049>
pid[2] is on running abcde;
now public variable with lock protection is <1050>
pid[2] is on running abcde;
now public variable with lock protection is <1051>
pid[2] is on running abcde;
now public variable with lock protection is <1052>
pid[2] is on running abcde;
now public variable with lock protection is <1053>
pid[2] is on running abcde;
now public variable with lock protection is <1054>
pid[2] is on running abcde;
now public variable with lock protection is <1055>
pid[2] is on running abcde;
now public variable with lock protection is <1056>
pid[2] is on running abcde;
now public variable with lock protection is <1057>
pid[2] is on running abcde;
now public variable with lock protection is <1058>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 k protection is <1038>
pid[3] is on running !@#$^;
now public variable with lock protection is <1060>
pid[3] is on running !@#$^;
now public variable with lock protection is <1061>
pid[3] is on running !@#$^;
now public variable with lock protection is <1062>
pid[3] is on running !@#$^;
now public variable with lock protection is <1063>
pid[3] is on running !@#$^;
now public variable with lock protection is <1064>
pid[3] is on running !@#$^;
now public variable with lock protection is <1065>
pid[3] is on running !@#$^;
now public variable with lock protection is <1066>
pid[3] is on running !@#$^;
now public variable with lock protection is <1067>
pid[3] is on running !@#$^;
now public variable with lock protection is <1068>
pid[3] is on running !@#$^;
now public variablepid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 d now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main threadpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 1048>
pid[1] is on running 12345;
now public variable with lock protection is <1070>
pid[1] is on running 12345;
now public variable with lock protection is <1071>
pid[1] is on running 12345;
now public variable with lock protection is <1072>
pid[1] is on running 12345;
now public variable with lock protection is <1073>
pid[1] is on running 12345;
now public variable with lock protection is <1074>
pid[1] is on running 12345;
now public variable with lock protection is <1075>
pid[1] is on running 12345;
now public variable with lock protection is <1076>
pid[1] is on running 12345;
now public variable with lock protection is <1077>
pid[1] is on running 12345;
now public variable with lock protection is <1078>
pid[1] is on running 12345;
now public variable with lock protection is <1079>
pid[1] is on running pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <1079>
pid[2] is on running abcde;
now public variable with lock protection is <1080>
pid[2] is on running abcde;
now public variable with lock protection is <1081>
pid[2] is on running abcde;
now public variable with lock protection is <1082>
pid[2] is on running abcde;
now public variable with lock protection is <1083>
pid[2] is on running abcde;
now public variable with lock protection is <1084>
pid[2] is on running abcde;
now public variable with lock protection is <1085>
pid[2] is on running abcde;
now public variable with lock protection is <1086>
pid[2] is on running abcde;
now public variable with lock protection is <1087>
pid[2] is on running abcde;
now public variable with lock protection is <1088>
pid[2] is on running abcde;
now public varipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  with lock protection is <1069>
pid[3] is on running !@#$^;
now public variable with lock protection is <1090>
pid[3] is on running !@#$^;
now public variable with lock protection is <1091>
pid[3] is on running !@#$^;
now public variable with lock protection is <1092>
pid[3] is on running !@#$^;
now public variable with lock protection is <1093>
pid[3] is on running !@#$^;
now public variable with lock protection is <1094>
pid[3] is on running !@#$^;
now public variable with lock protection is <1095>
pid[3] is on running !@#$^;
now public variable with lock protection is <1096>
pid[3] is on running !@#$^;
now public variable with lock protection is <1097>
pid[3] is on running !@#$^;
now public variable with lock protection is <1098>
pid[3] is on running !@#$^;
now public variable with lock protection is <1099>
pid[3] is on runnpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread nopid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 12345;
now public variable with lock protection is <1100>
pid[1] is on running 12345;
now public variable with lock protection is <1101>
pid[1] is on running 12345;
now public variable with lock protection is <1102>
pid[1] is on running 12345;
now public variable with lock protection is <1103>
pid[1] is on running 12345;
now public variable with lock protection is <1104>
pid[1] is on running 12345;
now public variable with lock protection is <1105>
pid[1] is on running 12345;
now public variable with lock protection is <1106>
pid[1] is on running 12345;
now public variable with lock protection is <1107>
pid[1] is on running 12345;
now public variable with lock protection is <1108>
pid[1] is on running 12345;
now public variable with lock protection is <1109>
pid[1] is on running 12345;
now ppid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 able with lock protection is <1089>
pid[2] is on running abcde;
now public variable with lock protection is <1111>
pid[2] is on running abcde;
now public variable with lock protection is <1112>
pid[2] is on running abcde;
now public variable with lock protection is <1113>
pid[2] is on running abcde;
now public variable with lock protection is <1114>
pid[2] is on running abcde;
now public variable with lock protection is <1115>
pid[2] is on running abcde;
now public variable with lock protection is <1116>
pid[2] is on running abcde;
now public variable with lock protection is <1117>
pid[2] is on running abcde;
now public variable with lock protection is <1118>
pid[2] is on running abcde;
now public variable with lock protection is <1119>
pid[2] is on running abcde;
now public variablepid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ing !@#$^;
now public variable with lock protection is <1121>
pid[3] is on running !@#$^;
now public variable with lock protection is <1122>
pid[3] is on running !@#$^;
now public variable with lock protection is <1123>
pid[3] is on running !@#$^;
now public variable with lock protection is <1124>
pid[3] is on running !@#$^;
now public variable with lock protection is <1125>
pid[3] is on running !@#$^;
now public variable with lock protection is <1126>
pid[3] is on running !@#$^;
now public variable with lock protection is <1127>
pid[3] is on running !@#$^;
now public variable with lock protection is <1128>
pid[3] is on running !@#$^;
now public variable with lock protection is <1129>
pid[3] is on running !@#$^;
now public variable with lock protection is <1130>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 w
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ublic variable with lock protection is <1110>
pid[1] is on running 12345;
now public variable with lock protection is <1132>
pid[1] is on running 12345;
now public variable with lock protection is <1133>
pid[1] is on running 12345;
now public variable with lock protection is <1134>
pid[1] is on running 12345;
now public variable with lock protection is <1135>
pid[1] is on running 12345;
now public variable with lock protection is <1136>
pid[1] is on running 12345;
now public variable with lock protection is <1137>
pid[1] is on running 12345;
now public variable with lock protection is <1138>
pid[1] is on running 12345;
now public variable with lock protection is <1139>
pid[1] is on running 12345;
now public variable with lock protection is <1140>
pid[1] is on running 12345;
now public variable wpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  with lock protection is <1120>
pid[2] is on running abcde;
now public variable with lock protection is <1142>
pid[2] is on running abcde;
now public variable with lock protection is <1143>
pid[2] is on running abcde;
now public variable with lock protection is <1144>
pid[2] is on running abcde;
now public variable with lock protection is <1145>
pid[2] is on running abcde;
now public variable with lock protection is <1146>
pid[2] is on running abcde;
now public variable with lock protection is <1147>
pid[2] is on running abcde;
now public variable with lock protection is <1148>
pid[2] is on running abcde;
now public variable with lock protection is <1149>
pid[2] is on running abcde;
now public variable with lock protection is <1150>
pid[2] is on running abcde;
now public variable with lock protection is <1151>
pid[2] ispid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1151>
pid[3] is on running !@#$^;
now public variable with lock protection is <1152>
pid[3] is on running !@#$^;
now public variable with lock protection is <1153>
pid[3] is on running !@#$^;
now public variable with lock protection is <1154>
pid[3] is on running !@#$^;
now public variable with lock protection is <1155>
pid[3] is on running !@#$^;
now public variable with lock protection is <1156>
pid[3] is on running !@#$^;
now public variable with lock protection is <1157>
pid[3] is on running !@#$^;
now public variable with lock protection is <1158>
pid[3] is on running !@#$^;
now public variable with lock protection is <1159>
pid[3] is on running !@#$^;
now public variable with lock protection is <1160>
pid[3] is on running !@#$^;
now public variable with lock protection ipid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ith lock protection is <1141>
pid[1] is on running 12345;
now public variable with lock protection is <1162>
pid[1] is on running 12345;
now public variable with lock protection is <1163>
pid[1] is on running 12345;
now public variable with lock protection is <1164>
pid[1] is on running 12345;
now public variable with lock protection is <1165>
pid[1] is on running 12345;
now public variable with lock protection is <1166>
pid[1] is on running 12345;
now public variable with lock protection is <1167>
pid[1] is on running 12345;
now public variable with lock protection is <1168>
pid[1] is on running 12345;
now public variable with lock protection is <1169>
pid[1] is on running 12345;
now public variable with lock protection is <1170>
pid[1] is on running 12345;
now public variable with lock protection is <1171>
pid[1] is on running 12345;
now public variable with locpid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  on running abcde;
now public variable with lock protection is <1173>
pid[2] is on running abcde;
now public variable with lock protection is <1174>
pid[2] is on running abcde;
now public variable with lock protection is <1175>
pid[2] is on running abcde;
now public variable with lock protection is <1176>
pid[2] is on running abcde;
now public variable with lock protection is <1177>
pid[2] is on running abcde;
now public variable with lock protection is <1178>
pid[2] is on running abcde;
now public variable with lock protection is <1179>
pid[2] is on running abcde;
now public variable with lock protection is <1180>
pid[2] is on running abcde;
now public variable with lock protection is <1181>
pid[2] is on running abcde;
now public variable with lock protection is <1182>
pid[2] is on running abcde;
now pubpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 s <1161>
pid[3] is on running !@#$^;
now public variable with lock protection is <1184>
pid[3] is on running !@#$^;
now public variable with lock protection is <1185>
pid[3] is on running !@#$^;
now public variable with lock protection is <1186>
pid[3] is on running !@#$^;
now public variable with lock protection is <1187>
pid[3] is on running !@#$^;
now public variable with lock protection is <1188>
pid[3] is on running !@#$^;
now public variable with lock protection is <1189>
pid[3] is on running !@#$^;
now public variable with lock protection is <1190>
pid[3] is on running !@#$^;
now public variable with lock protection is <1191>
pid[3] is on running !@#$^;
now public variable with lock protection is <1192>
pid[3] is on running !@#$^;
now public variable with lock protection is <1193>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 k protection is <1172>
pid[1] is on running 12345;
now public variable with lock protection is <1195>
pid[1] is on running 12345;
now public variable with lock protection is <1196>
pid[1] is on running 12345;
now public variable with lock protection is <1197>
pid[1] is on running 12345;
now public variable with lock protection is <1198>
pid[1] is on running 12345;
now public variable with lock protection is <1199>
pid[1] is on running 12345;
now public variable with lock protection is <1200>
pid[1] is on running 12345;
now public variable with lock protection is <1201>
pid[1] is on running 12345;
now public variable with lock protection is <1202>
pid[1] is on running 12345;
now public variable with lock protection is <1203>
pid[1] is on running 12345;
now public variable with lock protection is <1204>
pid[1] is onpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 lic variable with lock protection is <1183>
pid[2] is on running abcde;
now public variable with lock protection is <1205>
pid[2] is on running abcde;
now public variable with lock protection is <1206>
pid[2] is on running abcde;
now public variable with lock protection is <1207>
pid[2] is on running abcde;
now public variable with lock protection is <1208>
pid[2] is on running abcde;
now public variable with lock protection is <1209>
pid[2] is on running abcde;
now public variable with lock protection is <1210>
pid[2] is on running abcde;
now public variable with lock protection is <1211>
pid[2] is on running abcde;
now public variable with lock protection is <1212>
pid[2] is on running abcde;
now public variable with lock protection is <1213>
pid[2] is on running abcde;
now public variable with lock protection ispid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1214>
pid[3] is on running !@#$^;
now public variable with lock protection is <1215>
pid[3] is on running !@#$^;
now public variable with lock protection is <1216>
pid[3] is on running !@#$^;
now public variable with lock protection is <1217>
pid[3] is on running !@#$^;
now public variable with lock protection is <1218>
pid[3] is on running !@#$^;
now public variable with lock protection is <1219>
pid[3] is on running !@#$^;
now public variable with lock protection is <1220>
pid[3] is on running !@#$^;
now public variable with lock protection is <1221>
pid[3] is on running !@#$^;
now public variable with lock protection is <1222>
pid[3] is on running !@#$^;
now public variable with lock protection is <1223>
pid[3] is on runninpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  running 12345;
now public variable with lock protection is <1224>
pid[1] is on running 12345;
now public variable with lock protection is <1225>
pid[1] is on running 12345;
now public variable with lock protection is <1226>
pid[1] is on running 12345;
now public variable with lock protection is <1227>
pid[1] is on running 12345;
now public variable with lock protection is <1228>
pid[1] is on running 12345;
now public variable with lock protection is <1229>
pid[1] is on running 12345;
now public variable with lock protection is <1230>
pid[1] is on running 12345;
now public variable with lock protection is <1231>
pid[1] is on running 12345;
now public variable with lock protection is <1232>
pid[1] is on running 12345;
now public variable with lock protection is <1233>
pid[1] is on running 12345;
now publipid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  <1214>
pid[2] is on running abcde;
now public variable with lock protection is <1235>
pid[2] is on running abcde;
now public variable with lock protection is <1236>
pid[2] is on running abcde;
now public variable with lock protection is <1237>
pid[2] is on running abcde;
now public variable with lock protection is <1238>
pid[2] is on running abcde;
now public variable with lock protection is <1239>
pid[2] is on running abcde;
now public variable with lock protection is <1240>
pid[2] is on running abcde;
now public variable with lock protection is <1241>
pid[2] is on running abcde;
now public variable with lock protection is <1242>
pid[2] is on running abcde;
now public variable with lock protection is <1243>
pid[2] is on running abcde;
now public variable with lock protection is <1244>
pid[2pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 g !@#$^;
now public variable with lock protection is <1245>
pid[3] is on running !@#$^;
now public variable with lock protection is <1246>
pid[3] is on running !@#$^;
now public variable with lock protection is <1247>
pid[3] is on running !@#$^;
now public variable with lock protection is <1248>
pid[3] is on running !@#$^;
now public variable with lock protection is <1249>
pid[3] is on running !@#$^;
now public variable with lock protection is <1250>
pid[3] is on running !@#$^;
now public variable with lock protection is <1251>
pid[3] is on running !@#$^;
now public variable with lock protection is <1252>
pid[3] is on running !@#$^;
now public variable with lock protection is <1253>
pid[3] is on running !@#$^;
now public variable with lock protection is <1254>
pid[3] is on running !@pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main threadpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 c variable with lock protection is <1234>
pid[1] is on running 12345;
now public variable with lock protection is <1255>
pid[1] is on running 12345;
now public variable with lock protection is <1256>
pid[1] is on running 12345;
now public variable with lock protection is <1257>
pid[1] is on running 12345;
now public variable with lock protection is <1258>
pid[1] is on running 12345;
now public variable with lock protection is <1259>
pid[1] is on running 12345;
now public variable with lock protection is <1260>
pid[1] is on running 12345;
now public variable with lock protection is <1261>
pid[1] is on running 12345;
now public variable with lock protection is <1262>
pid[1] is on running 12345;
now public variable with lock protection is <1263>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ] is on running abcde;
now public variable with lock protection is <1265>
pid[2] is on running abcde;
now public variable with lock protection is <1266>
pid[2] is on running abcde;
now public variable with lock protection is <1267>
pid[2] is on running abcde;
now public variable with lock protection is <1268>
pid[2] is on running abcde;
now public variable with lock protection is <1269>
pid[2] is on running abcde;
now public variable with lock protection is <1270>
pid[2] is on running abcde;
now public variable with lock protection is <1271>
pid[2] is on running abcde;
now public variable with lock protection is <1272>
pid[2] is on running abcde;
now public variable with lock protection is <1273>
pid[2] is on running abcde;
now public variable with lock protection is <1274>
pid[2] is on running abcde;
now public variable with lock protectionpid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 #$^;
now public variable with lock protection is <1276>
pid[3] is on running !@#$^;
now public variable with lock protection is <1277>
pid[3] is on running !@#$^;
now public variable with lock protection is <1278>
pid[3] is on running !@#$^;
now public variable with lock protection is <1279>
pid[3] is on running !@#$^;
now public variable with lock protection is <1280>
pid[3] is on running !@#$^;
now public variable with lock protection is <1281>
pid[3] is on running !@#$^;
now public variable with lock protection is <1282>
pid[3] is on running !@#$^;
now public variable with lock protection is <1283>
pid[3] is on running !@#$^;
now public variable with lock protection is <1284>
pid[3] is on running !@#$^;
now public variable with lock protection is <1285>
pid[3] is on runningpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pidpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <1264>
pid[1] is on running 12345;
now public variable with lock protection is <1286>
pid[1] is on running 12345;
now public variable with lock protection is <1287>
pid[1] is on running 12345;
now public variable with lock protection is <1288>
pid[1] is on running 12345;
now public variable with lock protection is <1289>
pid[1] is on running 12345;
now public variable with lock protection is <1290>
pid[1] is on running 12345;
now public variable with lock protection is <1291>
pid[1] is on running 12345;
now public variable with lock protection is <1292>
pid[1] is on running 12345;
now public variable with lock protection is <1293>
pid[1] is on running 12345;
now public variable with lock protection is <1294>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  is <1275>
pid[2] is on running abcde;
now public variable with lock protection is <1296>
pid[2] is on running abcde;
now public variable with lock protection is <1297>
pid[2] is on running abcde;
now public variable with lock protection is <1298>
pid[2] is on running abcde;
now public variable with lock protection is <1299>
pid[2] is on running abcde;
now public variable with lock protection is <1300>
pid[2] is on running abcde;
now public variable with lock protection is <1301>
pid[2] is on running abcde;
now public variable with lock protection is <1302>
pid[2] is on running abcde;
now public variable with lock protection is <1303>
pid[2] is on running abcde;
now public variable with lock protection is <1304>
pid[2] is on running abcde;
now public variable with lock protection is <1305>
pid[2] is onpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  !@#$^;
now public variable with lock protection is <1306>
pid[3] is on running !@#$^;
now public variable with lock protection is <1307>
pid[3] is on running !@#$^;
now public variable with lock protection is <1308>
pid[3] is on running !@#$^;
now public variable with lock protection is <1309>
pid[3] is on running !@#$^;
now public variable with lock protection is <1310>
pid[3] is on running !@#$^;
now public variable with lock protection is <1311>
pid[3] is on running !@#$^;
now public variable with lock protection is <1312>
pid[3] is on running !@#$^;
now public variable with lock protection is <1313>
pid[3] is on running !@#$^;
now public variable with lock protection is <1314>
pid[3] is on running !@#$^;
now public variable with lock protection is <1315>
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 [0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernelpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <1315>
pid[1] is on running 12345;
now public variable with lock protection is <1316>
pid[1] is on running 12345;
now public variable with lock protection is <1317>
pid[1] is on running 12345;
now public variable with lock protection is <1318>
pid[1] is on running 12345;
now public variable with lock protection is <1319>
pid[1] is on running 12345;
now public variable with lock protection is <1320>
pid[1] is on running 12345;
now public variable with lock protection is <1321>
pid[1] is on running 12345;
now public variable with lock protection is <1322>
pid[1] is on running 12345;
now public variable with lock protection is <1323>
pid[1] is on running 12345;
now publicpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  running abcde;
now public variable with lock protection is <1325>
pid[2] is on running abcde;
now public variable with lock protection is <1326>
pid[2] is on running abcde;
now public variable with lock protection is <1327>
pid[2] is on running abcde;
now public variable with lock protection is <1328>
pid[2] is on running abcde;
now public variable with lock protection is <1329>
pid[2] is on running abcde;
now public variable with lock protection is <1330>
pid[2] is on running abcde;
now public variable with lock protection is <1331>
pid[2] is on running abcde;
now public variable with lock protection is <1332>
pid[2] is on running abcde;
now public variable with lock protection is <1333>
pid[2] is on running abcde;
now public variable with lock protection is <1334>
pid[2] is onpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 pid[3] is on running !@#$^;
now public variable with lock protection is <1335>
pid[3] is on running !@#$^;
now public variable with lock protection is <1336>
pid[3] is on running !@#$^;
now public variable with lock protection is <1337>
pid[3] is on running !@#$^;
now public variable with lock protection is <1338>
pid[3] is on running !@#$^;
now public variable with lock protection is <1339>
pid[3] is on running !@#$^;
now public variable with lock protection is <1340>
pid[3] is on running !@#$^;
now public variable with lock protection is <1341>
pid[3] is on running !@#$^;
now public variable with lock protection is <1342>
pid[3] is on running !@#$^;
now public variable with lock protection is <1343>
pid[3] is on running !@#$^;
now public variable with lock protection is <1344>
ppid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
  main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kerpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  variable with lock protection is <1324>
pid[1] is on running 12345;
now public variable with lock protection is <1345>
pid[1] is on running 12345;
now public variable with lock protection is <1346>
pid[1] is on running 12345;
now public variable with lock protection is <1347>
pid[1] is on running 12345;
now public variable with lock protection is <1348>
pid[1] is on running 12345;
now public variable with lock protection is <1349>
pid[1] is on running 12345;
now public variable with lock protection is <1350>
pid[1] is on running 12345;
now public variable with lock protection is <1351>
pid[1] is on running 12345;
now public variable with lock protection is <1352>
pid[1] is on running 12345;
now public variable with lock protection is <1353>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  running abcde;
now public variable with lock protection is <1355>
pid[2] is on running abcde;
now public variable with lock protection is <1356>
pid[2] is on running abcde;
now public variable with lock protection is <1357>
pid[2] is on running abcde;
now public variable with lock protection is <1358>
pid[2] is on running abcde;
now public variable with lock protection is <1359>
pid[2] is on running abcde;
now public variable with lock protection is <1360>
pid[2] is on running abcde;
now public variable with lock protection is <1361>
pid[2] is on running abcde;
now public variable with lock protection is <1362>
pid[2] is on running abcde;
now public variable with lock protection is <1363>
pid[2] is on running abcde;
now public variable with lock protection is <1364>
pid[2] is on running abcde;
now public variable with pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 id[3] is on running !@#$^;
now public variable with lock protection is <1366>
pid[3] is on running !@#$^;
now public variable with lock protection is <1367>
pid[3] is on running !@#$^;
now public variable with lock protection is <1368>
pid[3] is on running !@#$^;
now public variable with lock protection is <1369>
pid[3] is on running !@#$^;
now public variable with lock protection is <1370>
pid[3] is on running !@#$^;
now public variable with lock protection is <1371>
pid[3] is on running !@#$^;
now public variable with lock protection is <1372>
pid[3] is on running !@#$^;
now public variable with lock protection is <1373>
pid[3] is on running !@#$^;
now public variable with lock protection is <1374>
pid[3] is on running !@#$^;
now public variable with lock protection is <1375>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 nel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernepid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <1354>
pid[1] is on running 12345;
now public variable with lock protection is <1377>
pid[1] is on running 12345;
now public variable with lock protection is <1378>
pid[1] is on running 12345;
now public variable with lock protection is <1379>
pid[1] is on running 12345;
now public variable with lock protection is <1380>
pid[1] is on running 12345;
now public variable with lock protection is <1381>
pid[1] is on running 12345;
now public variable with lock protection is <1382>
pid[1] is on running 12345;
now public variable with lock protection is <1383>
pid[1] is on running 12345;
now public variable with lock protection is <1384>
pid[1] is on running 12345;
now public variable with lock protection is <1385>
pid[1] is on running 12345;
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 lock protection is <1365>
pid[2] is on running abcde;
now public variable with lock protection is <1387>
pid[2] is on running abcde;
now public variable with lock protection is <1388>
pid[2] is on running abcde;
now public variable with lock protection is <1389>
pid[2] is on running abcde;
now public variable with lock protection is <1390>
pid[2] is on running abcde;
now public variable with lock protection is <1391>
pid[2] is on running abcde;
now public variable with lock protection is <1392>
pid[2] is on running abcde;
now public variable with lock protection is <1393>
pid[2] is on running abcde;
now public variable with lock protection is <1394>
pid[2] is on running abcde;
now public variable with lock protection is <1395>
pid[2] is on running abcde;
now public variable wipid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1396>
pid[3] is on running !@#$^;
now public variable with lock protection is <1397>
pid[3] is on running !@#$^;
now public variable with lock protection is <1398>
pid[3] is on running !@#$^;
now public variable with lock protection is <1399>
pid[3] is on running !@#$^;
now public variable with lock protection is <1400>
pid[3] is on running !@#$^;
now public variable with lock protection is <1401>
pid[3] is on running !@#$^;
now public variable with lock protection is <1402>
pid[3] is on running !@#$^;
now public variable with lock protection is <1403>
pid[3] is on running !@#$^;
now public variable with lock protection is <1404>
pid[3] is on running !@#$^;
now public variable with lock protection is <1405>
pid[3] is on running !@#$^pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 l main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mpid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <1405>
pid[1] is on running 12345;
now public variable with lock protection is <1406>
pid[1] is on running 12345;
now public variable with lock protection is <1407>
pid[1] is on running 12345;
now public variable with lock protection is <1408>
pid[1] is on running 12345;
now public variable with lock protection is <1409>
pid[1] is on running 12345;
now public variable with lock protection is <1410>
pid[1] is on running 12345;
now public variable with lock protection is <1411>
pid[1] is on running 12345;
now public variable with lock protection is <1412>
pid[1] is on running 12345;
now public variable with lock protection is <1413>
pid[1] is on running 12345;
now public variable with lock protection is <1414>
pid[1] is on running 12345;
now public variable with lock protection is <1415>
pid[1] is on running 12345;
now public variablepid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 th lock protection is <1396>
pid[2] is on running abcde;
now public variable with lock protection is <1417>
pid[2] is on running abcde;
now public variable with lock protection is <1418>
pid[2] is on running abcde;
now public variable with lock protection is <1419>
pid[2] is on running abcde;
now public variable with lock protection is <1420>
pid[2] is on running abcde;
now public variable with lock protection is <1421>
pid[2] is on running abcde;
now public variable with lock protection is <1422>
pid[2] is on running abcde;
now public variable with lock protection is <1423>
pid[2] is on running abcde;
now public variable with lock protection is <1424>
pid[2] is on running abcde;
now public variable with lock protection is <1425>
pid[2] is on running abcde;
now public variable with lpid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 ;
now public variable with lock protection is <1427>
pid[3] is on running !@#$^;
now public variable with lock protection is <1428>
pid[3] is on running !@#$^;
now public variable with lock protection is <1429>
pid[3] is on running !@#$^;
now public variable with lock protection is <1430>
pid[3] is on running !@#$^;
now public variable with lock protection is <1431>
pid[3] is on running !@#$^;
now public variable with lock protection is <1432>
pid[3] is on running !@#$^;
now public variable with lock protection is <1433>
pid[3] is on running !@#$^;
now public variable with lock protection is <1434>
pid[3] is on running !@#$^;
now public variable with lock protection is <1435>
pid[3] is on running !@#$^;
now public variable with lock protection is <1436>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ain thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mpid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  with lock protection is <1416>
pid[1] is on running 12345;
now public variable with lock protection is <1438>
pid[1] is on running 12345;
now public variable with lock protection is <1439>
pid[1] is on running 12345;
now public variable with lock protection is <1440>
pid[1] is on running 12345;
now public variable with lock protection is <1441>
pid[1] is on running 12345;
now public variable with lock protection is <1442>
pid[1] is on running 12345;
now public variable with lock protection is <1443>
pid[1] is on running 12345;
now public variable with lock protection is <1444>
pid[1] is on running 12345;
now public variable with lock protection is <1445>
pid[1] is on running 12345;
now public variable with lock protection is <1446>
pid[1] is on running 12345;
now public vapid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ock protection is <1426>
pid[2] is on running abcde;
now public variable with lock protection is <1448>
pid[2] is on running abcde;
now public variable with lock protection is <1449>
pid[2] is on running abcde;
now public variable with lock protection is <1450>
pid[2] is on running abcde;
now public variable with lock protection is <1451>
pid[2] is on running abcde;
now public variable with lock protection is <1452>
pid[2] is on running abcde;
now public variable with lock protection is <1453>
pid[2] is on running abcde;
now public variable with lock protection is <1454>
pid[2] is on running abcde;
now public variable with lock protection is <1455>
pid[2] is on running abcde;
now public variable with lock protection is <1456>
pid[2] is on running abcde;
now pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1457>
pid[3] is on running !@#$^;
now public variable with lock protection is <1458>
pid[3] is on running !@#$^;
now public variable with lock protection is <1459>
pid[3] is on running !@#$^;
now public variable with lock protection is <1460>
pid[3] is on running !@#$^;
now public variable with lock protection is <1461>
pid[3] is on running !@#$^;
now public variable with lock protection is <1462>
pid[3] is on running !@#$^;
now public variable with lock protection is <1463>
pid[3] is on running !@#$^;
now public variable with lock protection is <1464>
pid[3] is on running !@#$^;
now public variable with lock protection is <1465>
pid[3] is on running !@#$^;
now public variable with lock protection is <1466>
pid[3] is on running !@#$^;
now public variable with lock protection is <1467>
pid[3] is on running !@#$^;
now pubpid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ain thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread npid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 riable with lock protection is <1447>
pid[1] is on running 12345;
now public variable with lock protection is <1469>
pid[1] is on running 12345;
now public variable with lock protection is <1470>
pid[1] is on running 12345;
now public variable with lock protection is <1471>
pid[1] is on running 12345;
now public variable with lock protection is <1472>
pid[1] is on running 12345;
now public variable with lock protection is <1473>
pid[1] is on running 12345;
now public variable with lock protection is <1474>
pid[1] is on running 12345;
now public variable with lock protection is <1475>
pid[1] is on running 12345;
now public variable with lock protection is <1476>
pid[1] is on running 12345;
now public variable with lock protection is <1477>
pid[1] is on running 12345;
now public variable with lockpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 public variable with lock protection is <1457>
pid[2] is on running abcde;
now public variable with lock protection is <1479>
pid[2] is on running abcde;
now public variable with lock protection is <1480>
pid[2] is on running abcde;
now public variable with lock protection is <1481>
pid[2] is on running abcde;
now public variable with lock protection is <1482>
pid[2] is on running abcde;
now public variable with lock protection is <1483>
pid[2] is on running abcde;
now public variable with lock protection is <1484>
pid[2] is on running abcde;
now public variable with lock protection is <1485>
pid[2] is on running abcde;
now public variable with lock protection is <1486>
pid[2] is on running abcde;
now public variable with lock protection is <1487>
pid[2] is on running abcde;
npid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 lic variable with lock protection is <1468>
pid[3] is on running !@#$^;
now public variable with lock protection is <1489>
pid[3] is on running !@#$^;
now public variable with lock protection is <1490>
pid[3] is on running !@#$^;
now public variable with lock protection is <1491>
pid[3] is on running !@#$^;
now public variable with lock protection is <1492>
pid[3] is on running !@#$^;
now public variable with lock protection is <1493>
pid[3] is on running !@#$^;
now public variable with lock protection is <1494>
pid[3] is on running !@#$^;
now public variable with lock protection is <1495>
pid[3] is on running !@#$^;
now public variable with lock protection is <1496>
pid[3] is on running !@#$^;
now public variable with lock protection is <1497>
pid[3] is on running !@#$^;
now public variable with lock protection is <1498>
pid[3] is pid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 ow
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel pid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  protection is <1478>
pid[1] is on running 12345;
now public variable with lock protection is <1499>
pid[1] is on running 12345;
now public variable with lock protection is <1500>
pid[1] is on running 12345;
now public variable with lock protection is <1501>
pid[1] is on running 12345;
now public variable with lock protection is <1502>
pid[1] is on running 12345;
now public variable with lock protection is <1503>
pid[1] is on running 12345;
now public variable with lock protection is <1504>
pid[1] is on running 12345;
now public variable with lock protection is <1505>
pid[1] is on running 12345;
now public variable with lock protection is <1506>
pid[1] is on running 12345;
now public variable with lock protection is <1507>
pid[1] is on running 12345;
now public variable with lock protection is <1508>
pid[1] is on running 12345;
now public variable wipid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 ow public variable with lock protection is <1488>
pid[2] is on running abcde;
now public variable with lock protection is <1510>
pid[2] is on running abcde;
now public variable with lock protection is <1511>
pid[2] is on running abcde;
now public variable with lock protection is <1512>
pid[2] is on running abcde;
now public variable with lock protection is <1513>
pid[2] is on running abcde;
now public variable with lock protection is <1514>
pid[2] is on running abcde;
now public variable with lock protection is <1515>
pid[2] is on running abcde;
now public variable with lock protection is <1516>
pid[2] is on running abcde;
now public variable with lock protection is <1517>
pid[2] is on running abcde;
now public variable with lock protection is <1518>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 on running !@#$^;
now public variable with lock protection is <1520>
pid[3] is on running !@#$^;
now public variable with lock protection is <1521>
pid[3] is on running !@#$^;
now public variable with lock protection is <1522>
pid[3] is on running !@#$^;
now public variable with lock protection is <1523>
pid[3] is on running !@#$^;
now public variable with lock protection is <1524>
pid[3] is on running !@#$^;
now public variable with lock protection is <1525>
pid[3] is on running !@#$^;
now public variable with lock protection is <1526>
pid[3] is on running !@#$^;
now public variable with lock protection is <1527>
pid[3] is on running !@#$^;
now public variable with lock protection is <1528>
pid[3] is on running !@#$^;
now public variable with lock protection is <1529>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],Ipid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 th lock protection is <1509>
pid[1] is on running 12345;
now public variable with lock protection is <1531>
pid[1] is on running 12345;
now public variable with lock protection is <1532>
pid[1] is on running 12345;
now public variable with lock protection is <1533>
pid[1] is on running 12345;
now public variable with lock protection is <1534>
pid[1] is on running 12345;
now public variable with lock protection is <1535>
pid[1] is on running 12345;
now public variable with lock protection is <1536>
pid[1] is on running 12345;
now public variable with lock protection is <1537>
pid[1] is on running 12345;
now public variable with lock protection is <1538>
pid[1] is on running 12345;
now public variable with lock protection is <1539>
pid[1] is on running 12345;
now public variable with lock protection is <1540>
pid[1] is on running 12pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <1540>
pid[2] is on running abcde;
now public variable with lock protection is <1541>
pid[2] is on running abcde;
now public variable with lock protection is <1542>
pid[2] is on running abcde;
now public variable with lock protection is <1543>
pid[2] is on running abcde;
now public variable with lock protection is <1544>
pid[2] is on running abcde;
now public variable with lock protection is <1545>
pid[2] is on running abcde;
now public variable with lock protection is <1546>
pid[2] is on running abcde;
now public variable with lock protection is <1547>
pid[2] is on running abcde;
now public variable with lock protection is <1548>
pid[2] is on running abcde;
now public variable with lock protection is <1549>
pid[2] is on running abcde;
now public variable with lock protection is <1550>
pid[2] is pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1530>
pid[3] is on running !@#$^;
now public variable with lock protection is <1551>
pid[3] is on running !@#$^;
now public variable with lock protection is <1552>
pid[3] is on running !@#$^;
now public variable with lock protection is <1553>
pid[3] is on running !@#$^;
now public variable with lock protection is <1554>
pid[3] is on running !@#$^;
now public variable with lock protection is <1555>
pid[3] is on running !@#$^;
now public variable with lock protection is <1556>
pid[3] is on running !@#$^;
now public variable with lock protection is <1557>
pid[3] is on running !@#$^;
now public variable with lock protection is <1558>
pid[3] is on running !@#$^;
now public variable with lock protection is <1559>
pid[3] is on running !@#$^;
now public variabpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 n kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernepid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 345;
now public variable with lock protection is <1561>
pid[1] is on running 12345;
now public variable with lock protection is <1562>
pid[1] is on running 12345;
now public variable with lock protection is <1563>
pid[1] is on running 12345;
now public variable with lock protection is <1564>
pid[1] is on running 12345;
now public variable with lock protection is <1565>
pid[1] is on running 12345;
now public variable with lock protection is <1566>
pid[1] is on running 12345;
now public variable with lock protection is <1567>
pid[1] is on running 12345;
now public variable with lock protection is <1568>
pid[1] is on running 12345;
now public variable with lock protection is <1569>
pid[1] is on running 12345;
now public variable with lock protection is <1570>
pid[1] is on running 12345;
now public variable with locpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 on running abcde;
now public variable with lock protection is <1572>
pid[2] is on running abcde;
now public variable with lock protection is <1573>
pid[2] is on running abcde;
now public variable with lock protection is <1574>
pid[2] is on running abcde;
now public variable with lock protection is <1575>
pid[2] is on running abcde;
now public variable with lock protection is <1576>
pid[2] is on running abcde;
now public variable with lock protection is <1577>
pid[2] is on running abcde;
now public variable with lock protection is <1578>
pid[2] is on running abcde;
now public variable with lock protection is <1579>
pid[2] is on running abcde;
now public variable with lock protection is <1580>
pid[2] is on running abcde;
now public variable with lock protection is <1581>
pid[2] is on running abcde;
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 le with lock protection is <1560>
pid[3] is on running !@#$^;
now public variable with lock protection is <1582>
pid[3] is on running !@#$^;
now public variable with lock protection is <1583>
pid[3] is on running !@#$^;
now public variable with lock protection is <1584>
pid[3] is on running !@#$^;
now public variable with lock protection is <1585>
pid[3] is on running !@#$^;
now public variable with lock protection is <1586>
pid[3] is on running !@#$^;
now public variable with lock protection is <1587>
pid[3] is on running !@#$^;
now public variable with lock protection is <1588>
pid[3] is on running !@#$^;
now public variable with lock protection is <1589>
pid[3] is on running !@#$^;
now public variable with lock protection is <1590>
pid[3] is on running !@#$^;
now public variable with lock protection is <1591>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 l main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mapid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 k protection is <1571>
pid[1] is on running 12345;
now public variable with lock protection is <1592>
pid[1] is on running 12345;
now public variable with lock protection is <1593>
pid[1] is on running 12345;
now public variable with lock protection is <1594>
pid[1] is on running 12345;
now public variable with lock protection is <1595>
pid[1] is on running 12345;
now public variable with lock protection is <1596>
pid[1] is on running 12345;
now public variable with lock protection is <1597>
pid[1] is on running 12345;
now public variable with lock protection is <1598>
pid[1] is on running 12345;
now public variable with lock protection is <1599>
pid[1] is on running 12345;
now public variable with lock protection is <1600>
pid[1] is on running 12345;
now public vpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 now public variable with lock protection is <1602>
pid[2] is on running abcde;
now public variable with lock protection is <1603>
pid[2] is on running abcde;
now public variable with lock protection is <1604>
pid[2] is on running abcde;
now public variable with lock protection is <1605>
pid[2] is on running abcde;
now public variable with lock protection is <1606>
pid[2] is on running abcde;
now public variable with lock protection is <1607>
pid[2] is on running abcde;
now public variable with lock protection is <1608>
pid[2] is on running abcde;
now public variable with lock protection is <1609>
pid[2] is on running abcde;
now public variable with lock protection is <1610>
pid[2] is on running abcde;
now public variable with lock protection is <1611>
pid[2] is on running pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1612>
pid[3] is on running !@#$^;
now public variable with lock protection is <1613>
pid[3] is on running !@#$^;
now public variable with lock protection is <1614>
pid[3] is on running !@#$^;
now public variable with lock protection is <1615>
pid[3] is on running !@#$^;
now public variable with lock protection is <1616>
pid[3] is on running !@#$^;
now public variable with lock protection is <1617>
pid[3] is on running !@#$^;
now public variable with lock protection is <1618>
pid[3] is on running !@#$^;
now public variable with lock protection is <1619>
pid[3] is on running !@#$^;
now public variable with lock protection is <1620>
pid[3] is on running !@#$^;
now public variable with lock protection is <1621>
pid[3] ispid 3 need sched out!
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 in thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 ariable with lock protection is <1601>
pid[1] is on running 12345;
now public variable with lock protection is <1622>
pid[1] is on running 12345;
now public variable with lock protection is <1623>
pid[1] is on running 12345;
now public variable with lock protection is <1624>
pid[1] is on running 12345;
now public variable with lock protection is <1625>
pid[1] is on running 12345;
now public variable with lock protection is <1626>
pid[1] is on running 12345;
now public variable with lock protection is <1627>
pid[1] is on running 12345;
now public variable with lock protection is <1628>
pid[1] is on running 12345;
now public variable with lock protection is <1629>
pid[1] is on running 12345;
now public variable with lock protection is <1630>
pid[1] is on running 12345;
now public variable with lock protection is <1631>
pid[1] is on running 12345;
pid 1 need sched out!
pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 abcde;
now public variable with lock protection is <1632>
pid[2] is on running abcde;
now public variable with lock protection is <1633>
pid[2] is on running abcde;
now public variable with lock protection is <1634>
pid[2] is on running abcde;
now public variable with lock protection is <1635>
pid[2] is on running abcde;
now public variable with lock protection is <1636>
pid[2] is on running abcde;
now public variable with lock protection is <1637>
pid[2] is on running abcde;
now public variable with lock protection is <1638>
pid[2] is on running abcde;
now public variable with lock protection is <1639>
pid[2] is on running abcde;
now public variable with lock protection is <1640>
pid[2] is on running abcde;
now public variable with lock protection is <1641>
pid[2] is on running abcde;
now pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
  on running !@#$^;
now public variable with lock protection is <1643>
pid[3] is on running !@#$^;
now public variable with lock protection is <1644>
pid[3] is on running !@#$^;
now public variable with lock protection is <1645>
pid[3] is on running !@#$^;
now public variable with lock protection is <1646>
pid[3] is on running !@#$^;
now public variable with lock protection is <1647>
pid[3] is on running !@#$^;
now public variable with lock protection is <1648>
pid[3] is on running !@#$^;
now public variable with lock protection is <1649>
pid[3] is on running !@#$^;
now public variable with lock protection is <1650>
pid[3] is on running !@#$^;
now public variable with lock protection is <1651>
pid[3] is on running !@#$^;
now public variable with lock protection is <1652>
pid[3] is on running !@#$^;
pid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mapid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
 now public variable with lock protection is <1654>
pid[1] is on running 12345;
now public variable with lock protection is <1655>
pid[1] is on running 12345;
now public variable with lock protection is <1656>
pid[1] is on running 12345;
now public variable with lock protection is <1657>
pid[1] is on running 12345;
now public variable with lock protection is <1658>
pid[1] is on running 12345;
now public variable with lock protection is <1659>
pid[1] is on running 12345;
now public variable with lock protection is <1660>
pid[1] is on running 12345;
now public variable with lock protection is <1661>
pid[1] is on running 12345;
now public variable with lock protection is <1662>
pid[1] is on running 12345;
now public variable with lock protection is <1663>
pid[1] is on runningpid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
 public variable with lock protection is <1642>
pid[2] is on running abcde;
now public variable with lock protection is <1664>
pid[2] is on running abcde;
now public variable with lock protection is <1665>
pid[2] is on running abcde;
now public variable with lock protection is <1666>
pid[2] is on running abcde;
now public variable with lock protection is <1667>
pid[2] is on running abcde;
now public variable with lock protection is <1668>
pid[2] is on running abcde;
now public variable with lock protection is <1669>
pid[2] is on running abcde;
now public variable with lock protection is <1670>
pid[2] is on running abcde;
now public variable with lock protection is <1671>
pid[2] is on running abcde;
now public variable with lock protection is <1672>
pid[2] is on running abcde;
now public variable with lock protection is <1673>
pid[2] is on running abcde;
nowpid 2 need sched out!
pid 2 need sched out!

====================
ok,ready list will select next thread...
pick next pid[3]
====================
 now public variable with lock protection is <1674>
pid[3] is on running !@#$^;
now public variable with lock protection is <1675>
pid[3] is on running !@#$^;
now public variable with lock protection is <1676>
pid[3] is on running !@#$^;
now public variable with lock protection is <1677>
pid[3] is on running !@#$^;
now public variable with lock protection is <1678>
pid[3] is on running !@#$^;
now public variable with lock protection is <1679>
pid[3] is on running !@#$^;
now public variable with lock protection is <1680>
pid[3] is on running !@#$^;
now public variable with lock protection is <1681>
pid[3] is on running !@#$^;
now public variable with lock protection is <1682>
pid[3] is on running !@#$^;
now public variable with lock protection is <1683>
pid[3] is on running !@#$^;
now publpid 3 need sched out!

====================
ok,ready list will select next thread...
pick next pid[0]
====================
 in thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel main thread now
pid[0],In kernel mapid 0 need sched out!
pid 0 need sched out!

====================
ok,ready list will select next thread...
pick next pid[1]
====================
  12345;
now public variable with lock protection is <1685>
pid[1] is on running 12345;
now public variable with lock protection is <1686>
pid[1] is on running 12345;
now public variable with lock protection is <1687>
pid[1] is on running 12345;
now public variable with lock protection is <1688>
pid[1] is on running 12345;
now public variable with lock protection is <1689>
pid[1] is on running 12345;
now public variable with lock protection is <1690>
pid[1] is on running 12345;
now public variable with lock protection is <1691>
pid[1] is on running 12345;
now public variable with lock protection is <1692>
pid[1] is on running 12345;
now public variable with lock protection is <1693>
pid[1] is on running 12345;
now public variable with lock protection is <1694>
pid[1] is on running 12345;
now public variable with pid 1 need sched out!

====================
ok,ready list will select next thread...
pick next pid[2]
====================
  public variable with lock protection is <1674>
pid[2] is on running abcde;
now public variable with lock protection is <1696>
pid[2] is on running abcde;
now public variable with lock protection is <1697>
pid[2] is on running abcde;
now public variable with lock protection is <1698>
pid[2] is on running abcde;
now public variable with lock protection is <1699>
pid[2] is on running abcde;
now public variable with lock protection is <1700>
pid[2] is on running abcde;
now public variable with lock protection is <1701>
pid[2] is on running abcde;
now public variablQEMU: Terminated
